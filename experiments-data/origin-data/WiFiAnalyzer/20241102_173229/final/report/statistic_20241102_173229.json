{
  "所有类的数量": 276,
  "所有类的统计信息": {
    "不需要测试的类的统计信息": {
      "类的数量": 140,
      "类的统计信息": {
        "匿名类的数量": 68,
        "非公共类的数量": 1,
        "抽象类的数量": 12,
        "接口类的数量": 0,
        "数据类的数量": 13,
        "包级别类的数量": 46
      }
    },
    "需要测试但是无法测试的类的统计信息": {
      "类的数量": 0,
      "类的统计信息": []
    },
    "可以测试的类的统计信息": {
      "类的数量": 136,
      "类的统计信息": [
        {
          "类名": "com.vrem.wifianalyzer.databinding.AccessPointsContentBinding",
          "覆盖率统计": {
            "行覆盖率": 0.4090909090909091,
            "圈复杂度覆盖率": 0.375
          },
          "成员方法的数量": 6,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 2
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.AccessPointsContentBinding: com.vrem.wifianalyzer.databinding.AccessPointsContentBinding inflate(android.view.LayoutInflater)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.AccessPointsContentBinding: com.vrem.wifianalyzer.databinding.AccessPointsContentBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.AccessPointsContentBinding: com.vrem.wifianalyzer.databinding.AccessPointsContentBinding bind(android.view.View)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.5454545454545454,
                    "圈复杂度覆盖率": 0.3333333333333333
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.R",
          "覆盖率统计": {
            "行覆盖率": 0.0,
            "圈复杂度覆盖率": 0.0
          },
          "成员方法的数量": 1,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 1,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.databinding.FilterSecurityBinding",
          "覆盖率统计": {
            "行覆盖率": 0.06818181818181818,
            "圈复杂度覆盖率": 0.16666666666666666
          },
          "成员方法的数量": 6,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 2
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.FilterSecurityBinding: com.vrem.wifianalyzer.databinding.FilterSecurityBinding inflate(android.view.LayoutInflater)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.FilterSecurityBinding: com.vrem.wifianalyzer.databinding.FilterSecurityBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 2,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 2
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.FilterSecurityBinding: com.vrem.wifianalyzer.databinding.FilterSecurityBinding bind(android.view.View)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.databinding.InfoThrottlingBinding",
          "覆盖率统计": {
            "行覆盖率": 0.5294117647058824,
            "圈复杂度覆盖率": 0.42857142857142855
          },
          "成员方法的数量": 6,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 2
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.InfoThrottlingBinding: com.vrem.wifianalyzer.databinding.InfoThrottlingBinding inflate(android.view.LayoutInflater)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.InfoThrottlingBinding: com.vrem.wifianalyzer.databinding.InfoThrottlingBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.InfoThrottlingBinding: com.vrem.wifianalyzer.databinding.InfoThrottlingBinding bind(android.view.View)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.8571428571428571,
                    "圈复杂度覆盖率": 0.5
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.databinding.FilterSsidBinding",
          "覆盖率统计": {
            "行覆盖率": 0.15789473684210525,
            "圈复杂度覆盖率": 0.2857142857142857
          },
          "成员方法的数量": 6,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 2
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.FilterSsidBinding: com.vrem.wifianalyzer.databinding.FilterSsidBinding inflate(android.view.LayoutInflater)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.FilterSsidBinding: com.vrem.wifianalyzer.databinding.FilterSsidBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 2,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 2
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.FilterSsidBinding: com.vrem.wifianalyzer.databinding.FilterSsidBinding bind(android.view.View)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.databinding.AccessPointViewHideBinding",
          "覆盖率统计": {
            "行覆盖率": 0.16666666666666666,
            "圈复杂度覆盖率": 0.14285714285714285
          },
          "成员方法的数量": 6,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 2
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.AccessPointViewHideBinding: com.vrem.wifianalyzer.databinding.AccessPointViewHideBinding inflate(android.view.LayoutInflater)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.AccessPointViewHideBinding: com.vrem.wifianalyzer.databinding.AccessPointViewHideBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.AccessPointViewHideBinding: com.vrem.wifianalyzer.databinding.AccessPointViewHideBinding bind(android.view.View)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.databinding.MainToolbarBinding",
          "覆盖率统计": {
            "行覆盖率": 0.5294117647058824,
            "圈复杂度覆盖率": 0.42857142857142855
          },
          "成员方法的数量": 6,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 2
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.MainToolbarBinding: com.vrem.wifianalyzer.databinding.MainToolbarBinding inflate(android.view.LayoutInflater)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.MainToolbarBinding: com.vrem.wifianalyzer.databinding.MainToolbarBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 2,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 2
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.MainToolbarBinding: com.vrem.wifianalyzer.databinding.MainToolbarBinding bind(android.view.View)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.8571428571428571,
                    "圈复杂度覆盖率": 0.5
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.databinding.AboutContentBinding",
          "覆盖率统计": {
            "行覆盖率": 0.09278350515463918,
            "圈复杂度覆盖率": 0.13043478260869565
          },
          "成员方法的数量": 6,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 2
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.AboutContentBinding: com.vrem.wifianalyzer.databinding.AboutContentBinding inflate(android.view.LayoutInflater)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.AboutContentBinding: com.vrem.wifianalyzer.databinding.AboutContentBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.AboutContentBinding: com.vrem.wifianalyzer.databinding.AboutContentBinding bind(android.view.View)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.08450704225352113,
                    "圈复杂度覆盖率": 0.05555555555555555
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.databinding.AccessPointViewCompleteBinding",
          "覆盖率统计": {
            "行覆盖率": 0.09195402298850575,
            "圈复杂度覆盖率": 0.09523809523809523
          },
          "成员方法的数量": 6,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 2
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.AccessPointViewCompleteBinding: com.vrem.wifianalyzer.databinding.AccessPointViewCompleteBinding inflate(android.view.LayoutInflater)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.AccessPointViewCompleteBinding: com.vrem.wifianalyzer.databinding.AccessPointViewCompleteBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.AccessPointViewCompleteBinding: com.vrem.wifianalyzer.databinding.AccessPointViewCompleteBinding bind(android.view.View)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.09523809523809523,
                    "圈复杂度覆盖率": 0.0625
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.databinding.VendorContentBinding",
          "覆盖率统计": {
            "行覆盖率": 0.3333333333333333,
            "圈复杂度覆盖率": 0.3333333333333333
          },
          "成员方法的数量": 6,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 2
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.VendorContentBinding: com.vrem.wifianalyzer.databinding.VendorContentBinding inflate(android.view.LayoutInflater)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.VendorContentBinding: com.vrem.wifianalyzer.databinding.VendorContentBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 2,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 2
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.VendorContentBinding: com.vrem.wifianalyzer.databinding.VendorContentBinding bind(android.view.View)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.4,
                    "圈复杂度覆盖率": 0.25
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.databinding.FilterStrengthBinding",
          "覆盖率统计": {
            "行覆盖率": 0.05128205128205128,
            "圈复杂度覆盖率": 0.09090909090909091
          },
          "成员方法的数量": 6,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 2
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.FilterStrengthBinding: com.vrem.wifianalyzer.databinding.FilterStrengthBinding inflate(android.view.LayoutInflater)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.FilterStrengthBinding: com.vrem.wifianalyzer.databinding.FilterStrengthBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.FilterStrengthBinding: com.vrem.wifianalyzer.databinding.FilterStrengthBinding bind(android.view.View)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.databinding.AccessPointViewPopupBinding",
          "覆盖率统计": {
            "行覆盖率": 0.19148936170212766,
            "圈复杂度覆盖率": 0.23076923076923078
          },
          "成员方法的数量": 6,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 2
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.AccessPointViewPopupBinding: com.vrem.wifianalyzer.databinding.AccessPointViewPopupBinding inflate(android.view.LayoutInflater)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.AccessPointViewPopupBinding: com.vrem.wifianalyzer.databinding.AccessPointViewPopupBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.AccessPointViewPopupBinding: com.vrem.wifianalyzer.databinding.AccessPointViewPopupBinding bind(android.view.View)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.1935483870967742,
                    "圈复杂度覆盖率": 0.125
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.databinding.MainWarningBinding",
          "覆盖率统计": {
            "行覆盖率": 0.375,
            "圈复杂度覆盖率": 0.375
          },
          "成员方法的数量": 6,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 2
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.MainWarningBinding: com.vrem.wifianalyzer.databinding.MainWarningBinding inflate(android.view.LayoutInflater)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.MainWarningBinding: com.vrem.wifianalyzer.databinding.MainWarningBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 2,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 2
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.MainWarningBinding: com.vrem.wifianalyzer.databinding.MainWarningBinding bind(android.view.View)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.5,
                    "圈复杂度覆盖率": 0.3333333333333333
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.databinding.ChannelRatingHeaderBinding",
          "覆盖率统计": {
            "行覆盖率": 0.25,
            "圈复杂度覆盖率": 0.2857142857142857
          },
          "成员方法的数量": 6,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 2
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.ChannelRatingHeaderBinding: com.vrem.wifianalyzer.databinding.ChannelRatingHeaderBinding inflate(android.view.LayoutInflater)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.ChannelRatingHeaderBinding: com.vrem.wifianalyzer.databinding.ChannelRatingHeaderBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 2,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 2
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.ChannelRatingHeaderBinding: com.vrem.wifianalyzer.databinding.ChannelRatingHeaderBinding bind(android.view.View)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.databinding.AccessPointViewCompactBinding",
          "覆盖率统计": {
            "行覆盖率": 0.14035087719298245,
            "圈复杂度覆盖率": 0.13333333333333333
          },
          "成员方法的数量": 6,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 2
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.AccessPointViewCompactBinding: com.vrem.wifianalyzer.databinding.AccessPointViewCompactBinding inflate(android.view.LayoutInflater)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.AccessPointViewCompactBinding: com.vrem.wifianalyzer.databinding.AccessPointViewCompactBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.AccessPointViewCompactBinding: com.vrem.wifianalyzer.databinding.AccessPointViewCompactBinding bind(android.view.View)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.15384615384615385,
                    "圈复杂度覆盖率": 0.1
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.databinding.FilterWifiBandBinding",
          "覆盖率统计": {
            "行覆盖率": 0.10344827586206896,
            "圈复杂度覆盖率": 0.2222222222222222
          },
          "成员方法的数量": 6,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 2
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.FilterWifiBandBinding: com.vrem.wifianalyzer.databinding.FilterWifiBandBinding inflate(android.view.LayoutInflater)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.FilterWifiBandBinding: com.vrem.wifianalyzer.databinding.FilterWifiBandBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 2,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 2
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.FilterWifiBandBinding: com.vrem.wifianalyzer.databinding.FilterWifiBandBinding bind(android.view.View)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.databinding.ChannelRatingBestBinding",
          "覆盖率统计": {
            "行覆盖率": 0.5294117647058824,
            "圈复杂度覆盖率": 0.42857142857142855
          },
          "成员方法的数量": 6,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 2
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.ChannelRatingBestBinding: com.vrem.wifianalyzer.databinding.ChannelRatingBestBinding inflate(android.view.LayoutInflater)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.ChannelRatingBestBinding: com.vrem.wifianalyzer.databinding.ChannelRatingBestBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 2,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 2
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.ChannelRatingBestBinding: com.vrem.wifianalyzer.databinding.ChannelRatingBestBinding bind(android.view.View)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.8571428571428571,
                    "圈复杂度覆盖率": 0.5
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.databinding.InfoLocationBinding",
          "覆盖率统计": {
            "行覆盖率": 0.25,
            "圈复杂度覆盖率": 0.2857142857142857
          },
          "成员方法的数量": 6,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 2
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.InfoLocationBinding: com.vrem.wifianalyzer.databinding.InfoLocationBinding inflate(android.view.LayoutInflater)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.InfoLocationBinding: com.vrem.wifianalyzer.databinding.InfoLocationBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 2,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 2
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.InfoLocationBinding: com.vrem.wifianalyzer.databinding.InfoLocationBinding bind(android.view.View)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.databinding.SeparatorLineBinding",
          "覆盖率统计": {
            "行覆盖率": 0.8333333333333334,
            "圈复杂度覆盖率": 0.7142857142857143
          },
          "成员方法的数量": 5,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 2,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 1
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.SeparatorLineBinding: com.vrem.wifianalyzer.databinding.SeparatorLineBinding inflate(android.view.LayoutInflater)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.SeparatorLineBinding: com.vrem.wifianalyzer.databinding.SeparatorLineBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 2,
                  "成功的测试用例的数量": 2,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.SeparatorLineBinding: com.vrem.wifianalyzer.databinding.SeparatorLineBinding bind(android.view.View)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.6666666666666666,
                    "圈复杂度覆盖率": 0.5
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.databinding.VendorDetailsBinding",
          "覆盖率统计": {
            "行覆盖率": 0.4090909090909091,
            "圈复杂度覆盖率": 0.375
          },
          "成员方法的数量": 6,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 2
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.VendorDetailsBinding: com.vrem.wifianalyzer.databinding.VendorDetailsBinding inflate(android.view.LayoutInflater)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.VendorDetailsBinding: com.vrem.wifianalyzer.databinding.VendorDetailsBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.VendorDetailsBinding: com.vrem.wifianalyzer.databinding.VendorDetailsBinding bind(android.view.View)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.5454545454545454,
                    "圈复杂度覆盖率": 0.3333333333333333
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.databinding.ChannelAvailableContentBinding",
          "覆盖率统计": {
            "行覆盖率": 0.5294117647058824,
            "圈复杂度覆盖率": 0.42857142857142855
          },
          "成员方法的数量": 6,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 2
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.ChannelAvailableContentBinding: com.vrem.wifianalyzer.databinding.ChannelAvailableContentBinding inflate(android.view.LayoutInflater)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.ChannelAvailableContentBinding: com.vrem.wifianalyzer.databinding.ChannelAvailableContentBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 2,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 2
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.ChannelAvailableContentBinding: com.vrem.wifianalyzer.databinding.ChannelAvailableContentBinding bind(android.view.View)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.8571428571428571,
                    "圈复杂度覆盖率": 0.5
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.databinding.InfoPermissionBinding",
          "覆盖率统计": {
            "行覆盖率": 0.25,
            "圈复杂度覆盖率": 0.2857142857142857
          },
          "成员方法的数量": 6,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 2
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.InfoPermissionBinding: com.vrem.wifianalyzer.databinding.InfoPermissionBinding inflate(android.view.LayoutInflater)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.InfoPermissionBinding: com.vrem.wifianalyzer.databinding.InfoPermissionBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 2,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 2
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.InfoPermissionBinding: com.vrem.wifianalyzer.databinding.InfoPermissionBinding bind(android.view.View)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.databinding.MainWifiSupportBinding",
          "覆盖率统计": {
            "行覆盖率": 0.5294117647058824,
            "圈复杂度覆盖率": 0.42857142857142855
          },
          "成员方法的数量": 6,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 2
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.MainWifiSupportBinding: com.vrem.wifianalyzer.databinding.MainWifiSupportBinding inflate(android.view.LayoutInflater)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.MainWifiSupportBinding: com.vrem.wifianalyzer.databinding.MainWifiSupportBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.MainWifiSupportBinding: com.vrem.wifianalyzer.databinding.MainWifiSupportBinding bind(android.view.View)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.8571428571428571,
                    "圈复杂度覆盖率": 0.5
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.databinding.MainContentBinding",
          "覆盖率统计": {
            "行覆盖率": 0.4090909090909091,
            "圈复杂度覆盖率": 0.375
          },
          "成员方法的数量": 6,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 2
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.MainContentBinding: com.vrem.wifianalyzer.databinding.MainContentBinding inflate(android.view.LayoutInflater)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.MainContentBinding: com.vrem.wifianalyzer.databinding.MainContentBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 2,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 2
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.MainContentBinding: com.vrem.wifianalyzer.databinding.MainContentBinding bind(android.view.View)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.5454545454545454,
                    "圈复杂度覆盖率": 0.3333333333333333
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.databinding.ChannelRatingContentBinding",
          "覆盖率统计": {
            "行覆盖率": 0.32142857142857145,
            "圈复杂度覆盖率": 0.3333333333333333
          },
          "成员方法的数量": 6,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 2
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.ChannelRatingContentBinding: com.vrem.wifianalyzer.databinding.ChannelRatingContentBinding inflate(android.view.LayoutInflater)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.ChannelRatingContentBinding: com.vrem.wifianalyzer.databinding.ChannelRatingContentBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 2,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 2
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.ChannelRatingContentBinding: com.vrem.wifianalyzer.databinding.ChannelRatingContentBinding bind(android.view.View)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.375,
                    "圈复杂度覆盖率": 0.25
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.databinding.MainActivityBinding",
          "覆盖率统计": {
            "行覆盖率": 0.10526315789473684,
            "圈复杂度覆盖率": 0.14285714285714285
          },
          "成员方法的数量": 6,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 2
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.MainActivityBinding: com.vrem.wifianalyzer.databinding.MainActivityBinding inflate(android.view.LayoutInflater)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.MainActivityBinding: com.vrem.wifianalyzer.databinding.MainActivityBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.MainActivityBinding: com.vrem.wifianalyzer.databinding.MainActivityBinding bind(android.view.View)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.databinding.ChannelAvailableDetailsBinding",
          "覆盖率统计": {
            "行覆盖率": 0.1702127659574468,
            "圈复杂度覆盖率": 0.15384615384615385
          },
          "成员方法的数量": 6,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 2
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.ChannelAvailableDetailsBinding: com.vrem.wifianalyzer.databinding.ChannelAvailableDetailsBinding inflate(android.view.LayoutInflater)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.ChannelAvailableDetailsBinding: com.vrem.wifianalyzer.databinding.ChannelAvailableDetailsBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.ChannelAvailableDetailsBinding: com.vrem.wifianalyzer.databinding.ChannelAvailableDetailsBinding bind(android.view.View)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.1935483870967742,
                    "圈复杂度覆盖率": 0.125
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.databinding.MainConnectionBinding",
          "覆盖率统计": {
            "行覆盖率": 0.23076923076923078,
            "圈复杂度覆盖率": 0.2727272727272727
          },
          "成员方法的数量": 6,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 2
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.MainConnectionBinding: com.vrem.wifianalyzer.databinding.MainConnectionBinding inflate(android.view.LayoutInflater)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.MainConnectionBinding: com.vrem.wifianalyzer.databinding.MainConnectionBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 2,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 2
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.MainConnectionBinding: com.vrem.wifianalyzer.databinding.MainConnectionBinding bind(android.view.View)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.25,
                    "圈复杂度覆盖率": 0.16666666666666666
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.databinding.FilterPopupBinding",
          "覆盖率统计": {
            "行覆盖率": 0.25,
            "圈复杂度覆盖率": 0.2857142857142857
          },
          "成员方法的数量": 6,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 2
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.FilterPopupBinding: com.vrem.wifianalyzer.databinding.FilterPopupBinding inflate(android.view.LayoutInflater)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.FilterPopupBinding: com.vrem.wifianalyzer.databinding.FilterPopupBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 2,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 2
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.FilterPopupBinding: com.vrem.wifianalyzer.databinding.FilterPopupBinding bind(android.view.View)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.databinding.InfoFaqBinding",
          "覆盖率统计": {
            "行覆盖率": 0.25,
            "圈复杂度覆盖率": 0.2857142857142857
          },
          "成员方法的数量": 6,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 2
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.InfoFaqBinding: com.vrem.wifianalyzer.databinding.InfoFaqBinding inflate(android.view.LayoutInflater)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.InfoFaqBinding: com.vrem.wifianalyzer.databinding.InfoFaqBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 2,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 2
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.InfoFaqBinding: com.vrem.wifianalyzer.databinding.InfoFaqBinding bind(android.view.View)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.databinding.GraphContentBinding",
          "覆盖率统计": {
            "行覆盖率": 0.125,
            "圈复杂度覆盖率": 0.16666666666666666
          },
          "成员方法的数量": 6,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 2
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.GraphContentBinding: com.vrem.wifianalyzer.databinding.GraphContentBinding inflate(android.view.LayoutInflater)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.GraphContentBinding: com.vrem.wifianalyzer.databinding.GraphContentBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 2,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 2
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.GraphContentBinding: com.vrem.wifianalyzer.databinding.GraphContentBinding bind(android.view.View)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.11764705882352941,
                    "圈复杂度覆盖率": 0.07692307692307693
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.databinding.ChannelRatingDetailsBinding",
          "覆盖率统计": {
            "行覆盖率": 0.2962962962962963,
            "圈复杂度覆盖率": 0.2222222222222222
          },
          "成员方法的数量": 6,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 2
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.ChannelRatingDetailsBinding: com.vrem.wifianalyzer.databinding.ChannelRatingDetailsBinding inflate(android.view.LayoutInflater)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.ChannelRatingDetailsBinding: com.vrem.wifianalyzer.databinding.ChannelRatingDetailsBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.ChannelRatingDetailsBinding: com.vrem.wifianalyzer.databinding.ChannelRatingDetailsBinding bind(android.view.View)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.4,
                    "圈复杂度覆盖率": 0.25
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.databinding.MainNavigationBinding",
          "覆盖率统计": {
            "行覆盖率": 0.25,
            "圈复杂度覆盖率": 0.2857142857142857
          },
          "成员方法的数量": 6,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 2
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.MainNavigationBinding: com.vrem.wifianalyzer.databinding.MainNavigationBinding inflate(android.view.LayoutInflater)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.MainNavigationBinding: com.vrem.wifianalyzer.databinding.MainNavigationBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 2,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 2
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.MainNavigationBinding: com.vrem.wifianalyzer.databinding.MainNavigationBinding bind(android.view.View)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.databinding.MainWifiThrottlingBinding",
          "覆盖率统计": {
            "行覆盖率": 0.47058823529411764,
            "圈复杂度覆盖率": 0.2857142857142857
          },
          "成员方法的数量": 6,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 2
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.MainWifiThrottlingBinding: com.vrem.wifianalyzer.databinding.MainWifiThrottlingBinding inflate(android.view.LayoutInflater)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.MainWifiThrottlingBinding: com.vrem.wifianalyzer.databinding.MainWifiThrottlingBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.databinding.MainWifiThrottlingBinding: com.vrem.wifianalyzer.databinding.MainWifiThrottlingBinding bind(android.view.View)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.8571428571428571,
                    "圈复杂度覆盖率": 0.5
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.MainActivity",
          "覆盖率统计": {
            "行覆盖率": 0.0,
            "圈复杂度覆盖率": 0.0
          },
          "成员方法的数量": 34,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 25,
              "方法的统计信息": {
                "非公有方法的数量": 4,
                "构造方法的数量": 1,
                "匿名方法的数量": 10,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 10
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 9,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.MainActivity: void update()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.MainActivity: boolean onNavigationItemSelected(android.view.MenuItem)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.MainActivity: boolean closeDrawer()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.MainActivity: void updateActionBar()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.MainActivity: android.view.MenuItem currentMenuItem()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.MainActivity: com.vrem.wifianalyzer.navigation.NavigationMenu currentNavigationMenu()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.MainActivity: void currentNavigationMenu(com.vrem.wifianalyzer.navigation.NavigationMenu)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.MainActivity: com.google.android.material.navigation.NavigationView navigationView()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.MainActivity: void mainConnectionVisibility(int)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.MainContext",
          "覆盖率统计": {
            "行覆盖率": 0.5652173913043478,
            "圈复杂度覆盖率": 0.41935483870967744
          },
          "成员方法的数量": 27,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 20,
              "方法的统计信息": {
                "非公有方法的数量": 4,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 16,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 7,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.MainContext: android.content.Context getContext()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.MainContext: android.content.res.Resources getResources()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.MainContext: android.view.LayoutInflater getLayoutInflater()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.MainContext: void initialize(com.vrem.wifianalyzer.MainActivity,boolean)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.4444444444444444,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.MainContext: com.vrem.wifianalyzer.MainContext[] values()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.MainContext: com.vrem.wifianalyzer.MainContext valueOf(java.lang.String)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.MainContext: kotlin.enums.EnumEntries getEntries()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.settings.Settings",
          "覆盖率统计": {
            "行覆盖率": 0.8979591836734694,
            "圈复杂度覆盖率": 0.8823529411764706
          },
          "成员方法的数量": 33,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 5,
              "方法的统计信息": {
                "非公有方法的数量": 4,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 28,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.settings.Settings: void initializeDefaultValues()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.settings.Settings: void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.settings.Settings: int scanSpeed()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.settings.Settings: boolean cacheOff()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.settings.Settings: int graphMaximumY()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.settings.Settings: void wiFiBand(com.vrem.wifianalyzer.wifi.band.WiFiBand)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.settings.Settings: java.lang.String countryCode()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.settings.Settings: java.util.Locale languageLocale()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.settings.Settings: com.vrem.wifianalyzer.wifi.model.SortBy sortBy()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.settings.Settings: com.vrem.wifianalyzer.wifi.model.GroupBy groupBy()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.settings.Settings: com.vrem.wifianalyzer.wifi.accesspoint.AccessPointViewType accessPointView()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.settings.Settings: com.vrem.wifianalyzer.wifi.accesspoint.ConnectionViewType connectionViewType()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.settings.Settings: com.vrem.wifianalyzer.wifi.graphutils.GraphLegend channelGraphLegend()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.settings.Settings: com.vrem.wifianalyzer.wifi.graphutils.GraphLegend timeGraphLegend()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.settings.Settings: com.vrem.wifianalyzer.wifi.band.WiFiBand wiFiBand()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.settings.Settings: boolean wiFiOffOnExit()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.8333333333333334,
                    "圈复杂度覆盖率": 0.5
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.settings.Settings: boolean keepScreenOn()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.settings.Settings: com.vrem.wifianalyzer.settings.ThemeStyle themeStyle()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.settings.Settings: com.vrem.wifianalyzer.navigation.NavigationMenu selectedMenu()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.settings.Settings: void saveSelectedMenu(com.vrem.wifianalyzer.navigation.NavigationMenu)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.settings.Settings: java.util.Set findSSIDs()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.settings.Settings: void saveSSIDs(java.util.Set)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.settings.Settings: java.util.Set findWiFiBands()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.settings.Settings: void saveWiFiBands(java.util.Set)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.settings.Settings: java.util.Set findStrengths()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.settings.Settings: void saveStrengths(java.util.Set)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.settings.Settings: java.util.Set findSecurities()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.settings.Settings: void saveSecurities(java.util.Set)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.manager.WiFiManagerWrapper",
          "覆盖率统计": {
            "行覆盖率": 0.7954545454545454,
            "圈复杂度覆盖率": 0.5789473684210527
          },
          "成员方法的数量": 12,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 2,
              "方法的统计信息": {
                "非公有方法的数量": 0,
                "构造方法的数量": 2,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 10,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.manager.WiFiManagerWrapper: boolean wiFiEnabled()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.8,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.manager.WiFiManagerWrapper: boolean enableWiFi()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.8,
                    "圈复杂度覆盖率": 0.3333333333333333
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.manager.WiFiManagerWrapper: boolean disableWiFi()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.8,
                    "圈复杂度覆盖率": 0.3333333333333333
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.manager.WiFiManagerWrapper: boolean startScan()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.8,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.manager.WiFiManagerWrapper: java.util.List scanResults()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.8,
                    "圈复杂度覆盖率": 0.5
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.manager.WiFiManagerWrapper: android.net.wifi.WifiInfo wiFiInfo()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.8,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.manager.WiFiManagerWrapper: boolean is5GHzBandSupported()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.manager.WiFiManagerWrapper: boolean is6GHzBandSupported()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.75,
                    "圈复杂度覆盖率": 0.5
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.manager.WiFiManagerWrapper: boolean isScanThrottleEnabled()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.75,
                    "圈复杂度覆盖率": 0.5
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.manager.WiFiManagerWrapper: boolean minVersionR()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.permission.PermissionService",
          "覆盖率统计": {
            "行覆盖率": 0.9,
            "圈复杂度覆盖率": 0.6666666666666666
          },
          "成员方法的数量": 7,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 2,
              "方法的统计信息": {
                "非公有方法的数量": 0,
                "构造方法的数量": 2,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 5,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.permission.PermissionService: boolean enabled()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 0.3333333333333333
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.permission.PermissionService: boolean locationEnabled()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.permission.PermissionService: void check()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.permission.PermissionService: boolean granted(int,int[])>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.permission.PermissionService: boolean permissionGranted()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.vendor.model.VendorService",
          "覆盖率统计": {
            "行覆盖率": 0.6,
            "圈复杂度覆盖率": 0.4444444444444444
          },
          "成员方法的数量": 13,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 10,
              "方法的统计信息": {
                "非公有方法的数量": 5,
                "构造方法的数量": 1,
                "匿名方法的数量": 4,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.vendor.model.VendorService: java.lang.String findVendorName(java.lang.String)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 0.5
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.vendor.model.VendorService: java.util.List findMacAddresses(java.lang.String)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 0.5
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.vendor.model.VendorService: java.util.List findVendors(java.lang.String)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.Configuration",
          "覆盖率统计": {
            "行覆盖率": 0.9333333333333333,
            "圈复杂度覆盖率": 0.7777777777777778
          },
          "成员方法的数量": 8,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 5,
              "方法的统计信息": {
                "非公有方法的数量": 0,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 4,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.Configuration: void wiFiChannelPair(java.lang.String)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.Configuration: kotlin.Pair wiFiChannelPair(com.vrem.wifianalyzer.wifi.band.WiFiBand)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.Configuration: void wiFiChannelPair(com.vrem.wifianalyzer.wifi.band.WiFiBand,kotlin.Pair)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.filter.adapter.FiltersAdapter",
          "覆盖率统计": {
            "行覆盖率": 0.5833333333333334,
            "圈复杂度覆盖率": 0.46153846153846156
          },
          "成员方法的数量": 11,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 4,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 1,
                "匿名方法的数量": 2,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 7,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.filter.adapter.FiltersAdapter: void reload()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.filter.adapter.FiltersAdapter: void reset()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.filter.adapter.FiltersAdapter: void save()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.filter.adapter.FiltersAdapter: com.vrem.wifianalyzer.wifi.filter.adapter.SSIDAdapter ssidAdapter()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.filter.adapter.FiltersAdapter: com.vrem.wifianalyzer.wifi.filter.adapter.WiFiBandAdapter wiFiBandAdapter()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.filter.adapter.FiltersAdapter: com.vrem.wifianalyzer.wifi.filter.adapter.StrengthAdapter strengthAdapter()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.filter.adapter.FiltersAdapter: com.vrem.wifianalyzer.wifi.filter.adapter.SecurityAdapter securityAdapter()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.settings.Repository",
          "覆盖率统计": {
            "行覆盖率": 0.6857142857142857,
            "圈复杂度覆盖率": 0.8125
          },
          "成员方法的数量": 15,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 2,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 13,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.settings.Repository: void initializeDefaultValues()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.settings.Repository: void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.settings.Repository: void save(int,int)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.settings.Repository: void save(int,java.lang.String)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.settings.Repository: int stringAsInteger(int,int)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.settings.Repository: java.lang.String string(int,java.lang.String)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.6666666666666666,
                    "圈复杂度覆盖率": 0.5
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.settings.Repository: boolean 'boolean'(int,boolean)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.settings.Repository: boolean resourceBoolean(int)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.settings.Repository: int integer(int,int)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.6666666666666666,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.settings.Repository: java.util.Set stringSet(int,java.util.Set)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.6666666666666666,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.settings.Repository: void saveStringSet(int,java.util.Set)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.settings.Repository: void defaultValues(android.content.Context,int,boolean)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.settings.Repository: android.content.SharedPreferences defaultSharedPreferences(android.content.Context)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.band.WiFiBand",
          "覆盖率统计": {
            "行覆盖率": 0.625,
            "圈复杂度覆盖率": 0.3333333333333333
          },
          "成员方法的数量": 12,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 9,
              "方法的统计信息": {
                "非公有方法的数量": 3,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 6,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.band.WiFiBand: com.vrem.wifianalyzer.wifi.band.WiFiBand[] values()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.band.WiFiBand: com.vrem.wifianalyzer.wifi.band.WiFiBand valueOf(java.lang.String)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.band.WiFiBand: kotlin.enums.EnumEntries getEntries()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.model.SortBy",
          "覆盖率统计": {
            "行覆盖率": 1.0,
            "圈复杂度覆盖率": 1.0
          },
          "成员方法的数量": 7,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 4,
              "方法的统计信息": {
                "非公有方法的数量": 3,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 1,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.model.SortBy: com.vrem.wifianalyzer.wifi.model.SortBy[] values()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.model.SortBy: com.vrem.wifianalyzer.wifi.model.SortBy valueOf(java.lang.String)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.model.SortBy: kotlin.enums.EnumEntries getEntries()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.model.GroupBy",
          "覆盖率统计": {
            "行覆盖率": 0.8571428571428571,
            "圈复杂度覆盖率": 0.42857142857142855
          },
          "成员方法的数量": 9,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 6,
              "方法的统计信息": {
                "非公有方法的数量": 3,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 3,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.model.GroupBy: com.vrem.wifianalyzer.wifi.model.GroupBy[] values()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.model.GroupBy: com.vrem.wifianalyzer.wifi.model.GroupBy valueOf(java.lang.String)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.model.GroupBy: kotlin.enums.EnumEntries getEntries()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.accesspoint.AccessPointViewType",
          "覆盖率统计": {
            "行覆盖率": 1.0,
            "圈复杂度覆盖率": 0.75
          },
          "成员方法的数量": 7,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 4,
              "方法的统计信息": {
                "非公有方法的数量": 3,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 1,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointViewType: com.vrem.wifianalyzer.wifi.accesspoint.AccessPointViewType[] values()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointViewType: com.vrem.wifianalyzer.wifi.accesspoint.AccessPointViewType valueOf(java.lang.String)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointViewType: kotlin.enums.EnumEntries getEntries()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.accesspoint.ConnectionViewType",
          "覆盖率统计": {
            "行覆盖率": 0.8333333333333334,
            "圈复杂度覆盖率": 0.5
          },
          "成员方法的数量": 8,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 5,
              "方法的统计信息": {
                "非公有方法的数量": 3,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 2,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.accesspoint.ConnectionViewType: com.vrem.wifianalyzer.wifi.accesspoint.ConnectionViewType[] values()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.accesspoint.ConnectionViewType: com.vrem.wifianalyzer.wifi.accesspoint.ConnectionViewType valueOf(java.lang.String)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.accesspoint.ConnectionViewType: kotlin.enums.EnumEntries getEntries()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.graphutils.GraphLegend",
          "覆盖率统计": {
            "行覆盖率": 0.7142857142857143,
            "圈复杂度覆盖率": 0.6
          },
          "成员方法的数量": 8,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 4,
              "方法的统计信息": {
                "非公有方法的数量": 3,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 1,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 4,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.graphutils.GraphLegend: void display(com.jjoe64.graphview.LegendRenderer)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 0,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.graphutils.GraphLegend: com.vrem.wifianalyzer.wifi.graphutils.GraphLegend[] values()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.graphutils.GraphLegend: com.vrem.wifianalyzer.wifi.graphutils.GraphLegend valueOf(java.lang.String)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.graphutils.GraphLegend: kotlin.enums.EnumEntries getEntries()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.settings.ThemeStyle",
          "覆盖率统计": {
            "行覆盖率": 1.0,
            "圈复杂度覆盖率": 0.6
          },
          "成员方法的数量": 8,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 5,
              "方法的统计信息": {
                "非公有方法的数量": 3,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 2,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.settings.ThemeStyle: com.vrem.wifianalyzer.settings.ThemeStyle[] values()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.settings.ThemeStyle: com.vrem.wifianalyzer.settings.ThemeStyle valueOf(java.lang.String)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.settings.ThemeStyle: kotlin.enums.EnumEntries getEntries()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.navigation.NavigationMenu",
          "覆盖率统计": {
            "行覆盖率": 0.0,
            "圈复杂度覆盖率": 0.0
          },
          "成员方法的数量": 15,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 8,
              "方法的统计信息": {
                "非公有方法的数量": 4,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 4,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 7,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.navigation.NavigationMenu: void activateNavigationMenu(com.vrem.wifianalyzer.MainActivity,android.view.MenuItem)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 0,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.navigation.NavigationMenu: void activateOptions(com.vrem.wifianalyzer.MainActivity)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 0,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.navigation.NavigationMenu: boolean wiFiBandSwitchable()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 0,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.navigation.NavigationMenu: boolean registered()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 0,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.navigation.NavigationMenu: com.vrem.wifianalyzer.navigation.NavigationMenu[] values()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.navigation.NavigationMenu: com.vrem.wifianalyzer.navigation.NavigationMenu valueOf(java.lang.String)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.navigation.NavigationMenu: kotlin.enums.EnumEntries getEntries()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.DrawerNavigation",
          "覆盖率统计": {
            "行覆盖率": 0.1111111111111111,
            "圈复杂度覆盖率": 0.25
          },
          "成员方法的数量": 5,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 1,
              "方法的统计信息": {
                "非公有方法的数量": 0,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 4,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.DrawerNavigation: void syncState()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.DrawerNavigation: void onConfigurationChanged(android.content.res.Configuration)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.DrawerNavigation: void create()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.DrawerNavigation: androidx.appcompat.app.ActionBarDrawerToggle createDrawerToggle(androidx.drawerlayout.widget.DrawerLayout)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.MainReload",
          "覆盖率统计": {
            "行覆盖率": 0.48,
            "圈复杂度覆盖率": 0.17647058823529413
          },
          "成员方法的数量": 8,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 7,
              "方法的统计信息": {
                "非公有方法的数量": 3,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 3,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 1,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.MainReload: boolean shouldReload(com.vrem.wifianalyzer.settings.Settings)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 0.25
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.navigation.NavigationMenuController",
          "覆盖率统计": {
            "行覆盖率": 0.16,
            "圈复杂度覆盖率": 0.08333333333333333
          },
          "成员方法的数量": 8,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 5,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 2,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 2,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.navigation.NavigationMenuController: android.view.MenuItem currentMenuItem()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.navigation.NavigationMenuController: com.vrem.wifianalyzer.navigation.NavigationMenu currentNavigationMenu()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.navigation.NavigationMenuController: void currentNavigationMenu(com.vrem.wifianalyzer.navigation.NavigationMenu)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.navigation.options.OptionMenu",
          "覆盖率统计": {
            "行覆盖率": 0.9090909090909091,
            "圈复杂度覆盖率": 0.8333333333333334
          },
          "成员方法的数量": 6,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 4,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 2,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 2,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.navigation.options.OptionMenu: void create(android.app.Activity,android.view.Menu)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.navigation.options.OptionMenu: void select(android.view.MenuItem)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.accesspoint.ConnectionView",
          "覆盖率统计": {
            "行覆盖率": 0.13043478260869565,
            "圈复杂度覆盖率": 0.15384615384615385
          },
          "成员方法的数量": 7,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 6,
              "方法的统计信息": {
                "非公有方法的数量": 4,
                "构造方法的数量": 2,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 1,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.accesspoint.ConnectionView: void update(com.vrem.wifianalyzer.wifi.model.WiFiData)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.2,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.export.Export",
          "覆盖率统计": {
            "行覆盖率": 0.45161290322580644,
            "圈复杂度覆盖率": 0.8888888888888888
          },
          "成员方法的数量": 11,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 9,
              "方法的统计信息": {
                "非公有方法的数量": 3,
                "构造方法的数量": 3,
                "匿名方法的数量": 3,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 2,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.export.Export: android.content.Intent export(com.vrem.wifianalyzer.MainActivity,java.util.List)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.export.Export: android.content.Intent export(com.vrem.wifianalyzer.MainActivity,java.util.List,java.util.Date)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.export.ExportIntent",
          "覆盖率统计": {
            "行覆盖率": 0.0,
            "圈复杂度覆盖率": 0.0
          },
          "成员方法的数量": 4,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 4,
              "方法的统计信息": {
                "非公有方法的数量": 0,
                "构造方法的数量": 1,
                "匿名方法的数量": 3,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.model.WiFiWidth",
          "覆盖率统计": {
            "行覆盖率": 1.0,
            "圈复杂度覆盖率": 0.375
          },
          "成员方法的数量": 11,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 8,
              "方法的统计信息": {
                "非公有方法的数量": 3,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 5,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.model.WiFiWidth: com.vrem.wifianalyzer.wifi.model.WiFiWidth[] values()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.model.WiFiWidth: com.vrem.wifianalyzer.wifi.model.WiFiWidth valueOf(java.lang.String)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.model.WiFiWidth: kotlin.enums.EnumEntries getEntries()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.model.WiFiStandard",
          "覆盖率统计": {
            "行覆盖率": 0.8888888888888888,
            "圈复杂度覆盖率": 0.3333333333333333
          },
          "成员方法的数量": 9,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 7,
              "方法的统计信息": {
                "非公有方法的数量": 3,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 4,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 2,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.model.WiFiStandard: com.vrem.wifianalyzer.wifi.model.WiFiStandard[] values()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.model.WiFiStandard: com.vrem.wifianalyzer.wifi.model.WiFiStandard valueOf(java.lang.String)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.model.Security",
          "覆盖率统计": {
            "行覆盖率": 1.0,
            "圈复杂度覆盖率": 0.6666666666666666
          },
          "成员方法的数量": 9,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 6,
              "方法的统计信息": {
                "非公有方法的数量": 4,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 2,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.model.Security: com.vrem.wifianalyzer.wifi.model.Security[] values()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.model.Security: com.vrem.wifianalyzer.wifi.model.Security valueOf(java.lang.String)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.model.Security: kotlin.enums.EnumEntries getEntries()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.model.WiFiAdditional",
          "覆盖率统计": {
            "行覆盖率": 0.0,
            "圈复杂度覆盖率": 0.0
          },
          "成员方法的数量": 7,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 7,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 3,
                "匿名方法的数量": 1,
                "抽象方法的数量": 0,
                "get/set方法的数量": 2,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.model.Strength",
          "覆盖率统计": {
            "行覆盖率": 0.875,
            "圈复杂度覆盖率": 0.42857142857142855
          },
          "成员方法的数量": 9,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 5,
              "方法的统计信息": {
                "非公有方法的数量": 3,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 2,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 4,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.model.Strength: boolean weak()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 0,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.model.Strength: com.vrem.wifianalyzer.wifi.model.Strength[] values()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.model.Strength: com.vrem.wifianalyzer.wifi.model.Strength valueOf(java.lang.String)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.model.Strength: kotlin.enums.EnumEntries getEntries()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.navigation.NavigationGroup",
          "覆盖率统计": {
            "行覆盖率": 0.0,
            "圈复杂度覆盖率": 0.0
          },
          "成员方法的数量": 10,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 4,
              "方法的统计信息": {
                "非公有方法的数量": 3,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 1,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 6,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.navigation.NavigationGroup: com.vrem.wifianalyzer.navigation.NavigationMenu next(com.vrem.wifianalyzer.navigation.NavigationMenu)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 0,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.navigation.NavigationGroup: com.vrem.wifianalyzer.navigation.NavigationMenu previous(com.vrem.wifianalyzer.navigation.NavigationMenu)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 0,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.navigation.NavigationGroup: void populateMenuItems(android.view.Menu)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 0,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.navigation.NavigationGroup: com.vrem.wifianalyzer.navigation.NavigationGroup[] values()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.navigation.NavigationGroup: com.vrem.wifianalyzer.navigation.NavigationGroup valueOf(java.lang.String)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.navigation.NavigationGroup: kotlin.enums.EnumEntries getEntries()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.settings.SettingsFragment",
          "覆盖率统计": {
            "行覆盖率": 0.0,
            "圈复杂度覆盖率": 0.0
          },
          "成员方法的数量": 2,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 2,
              "方法的统计信息": {
                "非公有方法的数量": 0,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 1
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.settings.CountryPreference",
          "覆盖率统计": {
            "行覆盖率": 0.0,
            "圈复杂度覆盖率": 0.0
          },
          "成员方法的数量": 1,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 1,
              "方法的统计信息": {
                "非公有方法的数量": 0,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.settings.LanguagePreference",
          "覆盖率统计": {
            "行覆盖率": 0.0,
            "圈复杂度覆盖率": 0.0
          },
          "成员方法的数量": 1,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 1,
              "方法的统计信息": {
                "非公有方法的数量": 0,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.band.WiFiChannelCountry",
          "覆盖率统计": {
            "行覆盖率": 1.0,
            "圈复杂度覆盖率": 0.9
          },
          "成员方法的数量": 10,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 2,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 8,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelCountry: java.lang.String countryCode()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelCountry: java.lang.String countryName(java.util.Locale)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 0.5
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelCountry: java.util.SortedSet channelsGHZ2()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelCountry: java.util.SortedSet channelsGHZ5()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelCountry: java.util.SortedSet channelsGHZ6()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelCountry: boolean channelAvailableGHZ2(int)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelCountry: boolean channelAvailableGHZ5(int)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelCountry: boolean channelAvailableGHZ6(int)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.band.WiFiChannelCountryGHZ2",
          "覆盖率统计": {
            "行覆盖率": 1.0,
            "圈复杂度覆盖率": 1.0
          },
          "成员方法的数量": 2,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 1,
              "方法的统计信息": {
                "非公有方法的数量": 0,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 1,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelCountryGHZ2: java.util.SortedSet findChannels(java.lang.String)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.band.WiFiChannelCountryGHZ5",
          "覆盖率统计": {
            "行覆盖率": 1.0,
            "圈复杂度覆盖率": 1.0
          },
          "成员方法的数量": 2,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 1,
              "方法的统计信息": {
                "非公有方法的数量": 0,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 1,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelCountryGHZ5: java.util.SortedSet findChannels(java.lang.String)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.band.WiFiChannelCountryGHZ6",
          "覆盖率统计": {
            "行覆盖率": 1.0,
            "圈复杂度覆盖率": 1.0
          },
          "成员方法的数量": 2,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 1,
              "方法的统计信息": {
                "非公有方法的数量": 0,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 1,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelCountryGHZ6: java.util.SortedSet findChannels()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.permission.ApplicationPermission",
          "覆盖率统计": {
            "行覆盖率": 0.8461538461538461,
            "圈复杂度覆盖率": 0.4
          },
          "成员方法的数量": 8,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 5,
              "方法的统计信息": {
                "非公有方法的数量": 2,
                "构造方法的数量": 2,
                "匿名方法的数量": 1,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.permission.ApplicationPermission: void check()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.8,
                    "圈复杂度覆盖率": 0.3333333333333333
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.permission.ApplicationPermission: boolean granted(int,int[])>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 0.16666666666666666
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.permission.ApplicationPermission: boolean granted()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 0.16666666666666666
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.manager.WiFiSwitch",
          "覆盖率统计": {
            "行覆盖率": 0.6666666666666666,
            "圈复杂度覆盖率": 0.6666666666666666
          },
          "成员方法的数量": 8,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 4,
              "方法的统计信息": {
                "非公有方法的数量": 3,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 4,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.manager.WiFiSwitch: boolean on()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.manager.WiFiSwitch: boolean off()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.manager.WiFiSwitch: void startWiFiSettings()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.manager.WiFiSwitch: boolean minVersionQ()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.permission.LocationPermission",
          "覆盖率统计": {
            "行覆盖率": 0.15384615384615385,
            "圈复杂度覆盖率": 0.2222222222222222
          },
          "成员方法的数量": 5,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 4,
              "方法的统计信息": {
                "非公有方法的数量": 3,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 1,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.permission.LocationPermission: boolean enabled()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.3,
                    "圈复杂度覆盖率": 0.2
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.model.WiFiData",
          "覆盖率统计": {
            "行覆盖率": 0.08108108108108109,
            "圈复杂度覆盖率": 0.2222222222222222
          },
          "成员方法的数量": 14,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 11,
              "方法的统计信息": {
                "非公有方法的数量": 7,
                "构造方法的数量": 1,
                "匿名方法的数量": 1,
                "抽象方法的数量": 0,
                "get/set方法的数量": 2,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 2,
              "方法的统计信息": [
                "<com.vrem.wifianalyzer.wifi.model.WiFiData: java.util.List wiFiDetails(kotlin.jvm.functions.Function1,com.vrem.wifianalyzer.wifi.model.SortBy)>",
                "<com.vrem.wifianalyzer.wifi.model.WiFiData: java.util.List wiFiDetails(kotlin.jvm.functions.Function1,com.vrem.wifianalyzer.wifi.model.SortBy,com.vrem.wifianalyzer.wifi.model.GroupBy)>"
              ]
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 1,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.model.WiFiData: com.vrem.wifianalyzer.wifi.model.WiFiDetail connection()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 0.3333333333333333
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.filter.adapter.SSIDAdapter",
          "覆盖率统计": {
            "行覆盖率": 1.0,
            "圈复杂度覆盖率": 0.75
          },
          "成员方法的数量": 6,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 1,
              "方法的统计信息": {
                "非公有方法的数量": 0,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 5,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.filter.adapter.SSIDAdapter: java.util.Set getSelections()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.filter.adapter.SSIDAdapter: void setSelections(java.util.Set)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 0.5
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.filter.adapter.SSIDAdapter: boolean isActive()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 0.5
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.filter.adapter.SSIDAdapter: void reset()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.filter.adapter.SSIDAdapter: void save(com.vrem.wifianalyzer.settings.Settings)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.filter.adapter.WiFiBandAdapter",
          "覆盖率统计": {
            "行覆盖率": 1.0,
            "圈复杂度覆盖率": 1.0
          },
          "成员方法的数量": 2,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 1,
              "方法的统计信息": {
                "非公有方法的数量": 0,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 1,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.filter.adapter.WiFiBandAdapter: void save(com.vrem.wifianalyzer.settings.Settings)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.filter.adapter.StrengthAdapter",
          "覆盖率统计": {
            "行覆盖率": 1.0,
            "圈复杂度覆盖率": 0.75
          },
          "成员方法的数量": 4,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 1,
              "方法的统计信息": {
                "非公有方法的数量": 0,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.filter.adapter.StrengthAdapter: int color(com.vrem.wifianalyzer.wifi.model.Strength)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 0.5
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.filter.adapter.StrengthAdapter: void save(com.vrem.wifianalyzer.settings.Settings)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.filter.adapter.StrengthAdapter: int color(java.lang.Enum)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 0.5
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.filter.adapter.SecurityAdapter",
          "覆盖率统计": {
            "行覆盖率": 1.0,
            "圈复杂度覆盖率": 1.0
          },
          "成员方法的数量": 2,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 1,
              "方法的统计信息": {
                "非公有方法的数量": 0,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 1,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.filter.adapter.SecurityAdapter: void save(com.vrem.wifianalyzer.settings.Settings)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.permission.PermissionDialog",
          "覆盖率统计": {
            "行覆盖率": 0.3076923076923077,
            "圈复杂度覆盖率": 0.5
          },
          "成员方法的数量": 2,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 1,
              "方法的统计信息": {
                "非公有方法的数量": 0,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 1,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.permission.PermissionDialog: android.view.View show()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.25,
                    "圈复杂度覆盖率": 0.3333333333333333
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.channelavailable.ChannelAvailableAdapterBinding",
          "覆盖率统计": {
            "行覆盖率": 0.0,
            "圈复杂度覆盖率": 0.0
          },
          "成员方法的数量": 10,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 10,
              "方法的统计信息": {
                "非公有方法的数量": 0,
                "构造方法的数量": 2,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 8,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.channelavailable.ChannelAvailableFragment",
          "覆盖率统计": {
            "行覆盖率": 0.0,
            "圈复杂度覆盖率": 0.0
          },
          "成员方法的数量": 4,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 4,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 2
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.channelavailable.ChannelAvailableAdapter",
          "覆盖率统计": {
            "行覆盖率": 0.0,
            "圈复杂度覆盖率": 0.0
          },
          "成员方法的数量": 3,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 1
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.filter.Filter",
          "覆盖率统计": {
            "行覆盖率": 0.17647058823529413,
            "圈复杂度覆盖率": 0.15384615384615385
          },
          "成员方法的数量": 11,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 10,
              "方法的统计信息": {
                "非公有方法的数量": 5,
                "构造方法的数量": 1,
                "匿名方法的数量": 3,
                "抽象方法的数量": 0,
                "get/set方法的数量": 1,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 1,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.filter.Filter: void show()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.2857142857142857,
                    "圈复杂度覆盖率": 0.3333333333333333
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.filter.SSIDFilter",
          "覆盖率统计": {
            "行覆盖率": 0.0,
            "圈复杂度覆盖率": 0.0
          },
          "成员方法的数量": 1,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 1,
              "方法的统计信息": {
                "非公有方法的数量": 0,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.filter.WiFiBandFilter",
          "覆盖率统计": {
            "行覆盖率": 0.0,
            "圈复杂度覆盖率": 0.0
          },
          "成员方法的数量": 1,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 1,
              "方法的统计信息": {
                "非公有方法的数量": 0,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.filter.StrengthFilter",
          "覆盖率统计": {
            "行覆盖率": 0.0,
            "圈复杂度覆盖率": 0.0
          },
          "成员方法的数量": 1,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 1,
              "方法的统计信息": {
                "非公有方法的数量": 0,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.filter.SecurityFilter",
          "覆盖率统计": {
            "行覆盖率": 0.0,
            "圈复杂度覆盖率": 0.0
          },
          "成员方法的数量": 1,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 1,
              "方法的统计信息": {
                "非公有方法的数量": 0,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.accesspoint.AccessPointDetail",
          "覆盖率统计": {
            "行覆盖率": 0.03296703296703297,
            "圈复杂度覆盖率": 0.07692307692307693
          },
          "成员方法的数量": 19,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 17,
              "方法的统计信息": {
                "非公有方法的数量": 15,
                "构造方法的数量": 1,
                "匿名方法的数量": 1,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 2,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointDetail: android.view.View makeView(android.view.View,android.view.ViewGroup,com.vrem.wifianalyzer.wifi.model.WiFiDetail,boolean,int)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.2,
                    "圈复杂度覆盖率": 0.5
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointDetail: android.view.View makeViewDetailed(com.vrem.wifianalyzer.wifi.model.WiFiDetail)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.08333333333333333,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.accesspoint.AccessPointPopup",
          "覆盖率统计": {
            "行覆盖率": 0.23076923076923078,
            "圈复杂度覆盖率": 0.6
          },
          "成员方法的数量": 5,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": {
                "非公有方法的数量": 2,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 2,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointPopup: android.app.AlertDialog show(android.view.View)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointPopup: void attach(android.view.View,com.vrem.wifianalyzer.wifi.model.WiFiDetail)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.accesspoint.WarningView",
          "覆盖率统计": {
            "行覆盖率": 0.041666666666666664,
            "圈复杂度覆盖率": 0.1111111111111111
          },
          "成员方法的数量": 5,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 4,
              "方法的统计信息": {
                "非公有方法的数量": 0,
                "构造方法的数量": 1,
                "匿名方法的数量": 3,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 1,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.accesspoint.WarningView: boolean update(com.vrem.wifianalyzer.wifi.model.WiFiData)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.25
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapterData",
          "覆盖率统计": {
            "行覆盖率": 0.8076923076923077,
            "圈复杂度覆盖率": 0.5789473684210527
          },
          "成员方法的数量": 13,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 6,
              "方法的统计信息": {
                "非公有方法的数量": 2,
                "构造方法的数量": 3,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 1,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 7,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapterData: void update(com.vrem.wifianalyzer.wifi.model.WiFiData,android.widget.ExpandableListView)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.5714285714285714,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapterData: int parentsCount()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapterData: com.vrem.wifianalyzer.wifi.model.WiFiDetail parent(int)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 0.5
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapterData: int childrenCount(int)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 0.3333333333333333
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapterData: com.vrem.wifianalyzer.wifi.model.WiFiDetail child(int,int)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 0.25
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapterData: void onGroupCollapsed(int)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapterData: void onGroupExpanded(int)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapterGroup",
          "覆盖率统计": {
            "行覆盖率": 0.25,
            "圈复杂度覆盖率": 0.23809523809523808
          },
          "成员方法的数量": 11,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 7,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 3,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 3,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 4,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapterGroup: void update(java.util.List,android.widget.ExpandableListView)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.3333333333333333
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapterGroup: void updateGroupBy()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapterGroup: void onGroupCollapsed(java.util.List,int)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.5,
                    "圈复杂度覆盖率": 0.25
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapterGroup: void onGroupExpanded(java.util.List,int)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.5,
                    "圈复杂度覆盖率": 0.25
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapter",
          "覆盖率统计": {
            "行覆盖率": 0.0,
            "圈复杂度覆盖率": 0.045454545454545456
          },
          "成员方法的数量": 21,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 20,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 3,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 2,
                "componentN 方法的数量": 0,
                "override 方法的数量": 14
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 1,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapter: void update(com.vrem.wifianalyzer.wifi.model.WiFiData)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.3333333333333333
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsFragment",
          "覆盖率统计": {
            "行覆盖率": 0.0,
            "圈复杂度覆盖率": 0.0
          },
          "成员方法的数量": 6,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 6,
              "方法的统计信息": {
                "非公有方法的数量": 0,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 1,
                "componentN 方法的数量": 0,
                "override 方法的数量": 4
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.model.WiFiSecurityType",
          "覆盖率统计": {
            "行覆盖率": 1.0,
            "圈复杂度覆盖率": 0.5714285714285714
          },
          "成员方法的数量": 10,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 7,
              "方法的统计信息": {
                "非公有方法的数量": 4,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 3,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurityType: com.vrem.wifianalyzer.wifi.model.WiFiSecurityType[] values()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurityType: com.vrem.wifianalyzer.wifi.model.WiFiSecurityType valueOf(java.lang.String)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurityType: kotlin.enums.EnumEntries getEntries()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.model.FastRoaming",
          "覆盖率统计": {
            "行覆盖率": 1.0,
            "圈复杂度覆盖率": 0.6
          },
          "成员方法的数量": 8,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 5,
              "方法的统计信息": {
                "非公有方法的数量": 3,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 2,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.model.FastRoaming: com.vrem.wifianalyzer.wifi.model.FastRoaming[] values()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.model.FastRoaming: com.vrem.wifianalyzer.wifi.model.FastRoaming valueOf(java.lang.String)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.model.FastRoaming: kotlin.enums.EnumEntries getEntries()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.model.ChannelRating",
          "覆盖率统计": {
            "行覆盖率": 0.9047619047619048,
            "圈复杂度覆盖率": 0.6153846153846154
          },
          "成员方法的数量": 9,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 4,
              "方法的统计信息": {
                "非公有方法的数量": 3,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 5,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.model.ChannelRating: int count(com.vrem.wifianalyzer.wifi.band.WiFiChannel)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.model.ChannelRating: com.vrem.wifianalyzer.wifi.model.Strength strength(com.vrem.wifianalyzer.wifi.band.WiFiChannel)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 0.3333333333333333
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.model.ChannelRating: java.util.List wiFiDetails()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.model.ChannelRating: void wiFiDetails(java.util.List)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.model.ChannelRating: java.util.List bestChannels(java.util.List)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ5",
          "覆盖率统计": {
            "行覆盖率": 0.9230769230769231,
            "圈复杂度覆盖率": 0.7
          },
          "成员方法的数量": 11,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 6,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 1,
                "匿名方法的数量": 4,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 5,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ5: java.util.List wiFiChannelPairs()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ5: kotlin.Pair wiFiChannelPairFirst(java.lang.String)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.6666666666666666,
                    "圈复杂度覆盖率": 0.3333333333333333
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ5: java.util.List availableChannels(java.lang.String)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ5: boolean channelAvailable(java.lang.String,int)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ5: com.vrem.wifianalyzer.wifi.band.WiFiChannel wiFiChannelByFrequency(int,kotlin.Pair)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 0.5
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ6",
          "覆盖率统计": {
            "行覆盖率": 0.9411764705882353,
            "圈复杂度覆盖率": 0.7
          },
          "成员方法的数量": 15,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 10,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 1,
                "匿名方法的数量": 8,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 5,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ6: java.util.List wiFiChannelPairs()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ6: kotlin.Pair wiFiChannelPairFirst(java.lang.String)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.6666666666666666,
                    "圈复杂度覆盖率": 0.3333333333333333
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ6: java.util.List availableChannels(java.lang.String)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ6: boolean channelAvailable(java.lang.String,int)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ6: com.vrem.wifianalyzer.wifi.band.WiFiChannel wiFiChannelByFrequency(int,kotlin.Pair)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 0.5
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ2",
          "覆盖率统计": {
            "行覆盖率": 1.0,
            "圈复杂度覆盖率": 0.875
          },
          "成员方法的数量": 7,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 2,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 5,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ2: java.util.List wiFiChannelPairs()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ2: kotlin.Pair wiFiChannelPairFirst(java.lang.String)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ2: java.util.List availableChannels(java.lang.String)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ2: boolean channelAvailable(java.lang.String,int)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ2: com.vrem.wifianalyzer.wifi.band.WiFiChannel wiFiChannelByFrequency(int,kotlin.Pair)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 0.5
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.timegraph.TimeAxisLabel",
          "覆盖率统计": {
            "行覆盖率": 0.8,
            "圈复杂度覆盖率": 0.5
          },
          "成员方法的数量": 3,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 1,
              "方法的统计信息": {
                "非公有方法的数量": 0,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 2,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.timegraph.TimeAxisLabel: java.lang.String formatLabel(double,boolean)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.75,
                    "圈复杂度覆盖率": 0.375
                  },
                  "所有测试用例的数量": 2,
                  "成功的测试用例的数量": 2,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.timegraph.TimeAxisLabel: void setViewport(com.jjoe64.graphview.Viewport)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.timegraph.DataManager",
          "覆盖率统计": {
            "行覆盖率": 0.7096774193548387,
            "圈复杂度覆盖率": 0.6428571428571429
          },
          "成员方法的数量": 11,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 7,
              "方法的统计信息": {
                "非公有方法的数量": 0,
                "构造方法的数量": 3,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 4,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 4,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.timegraph.DataManager: java.util.Set addSeriesData(com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper,java.util.List,int)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.8888888888888888,
                    "圈复杂度覆盖率": 0.3333333333333333
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.timegraph.DataManager: void adjustData(com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper,java.util.Set)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.375,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.timegraph.DataManager: java.util.Set newSeries(java.util.Set)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.timegraph.DataManager: void addData(com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper,com.vrem.wifianalyzer.wifi.model.WiFiDetail,int)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.7,
                    "圈复杂度覆盖率": 0.3333333333333333
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.timegraph.TimeGraphCache",
          "覆盖率统计": {
            "行覆盖率": 1.0,
            "圈复杂度覆盖率": 0.6
          },
          "成员方法的数量": 6,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 1,
              "方法的统计信息": {
                "非公有方法的数量": 0,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 5,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.timegraph.TimeGraphCache: java.util.Set active()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 0.5
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.timegraph.TimeGraphCache: void clear()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 0.5
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.timegraph.TimeGraphCache: void add(com.vrem.wifianalyzer.wifi.model.WiFiDetail)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 0.5
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.timegraph.TimeGraphCache: void reset(com.vrem.wifianalyzer.wifi.model.WiFiDetail)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 0.5
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.timegraph.TimeGraphCache: java.util.Set getWiFiDetails()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper",
          "覆盖率统计": {
            "行覆盖率": 0.6071428571428571,
            "圈复杂度覆盖率": 0.625
          },
          "成员方法的数量": 25,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 9,
              "方法的统计信息": {
                "非公有方法的数量": 4,
                "构造方法的数量": 2,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 3,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 16,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper: void removeSeries(java.util.Set)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.5,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper: java.util.List differenceSeries(java.util.Set)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper: boolean addSeries(com.vrem.wifianalyzer.wifi.model.WiFiDetail,com.jjoe64.graphview.series.BaseSeries,boolean)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.9090909090909091,
                    "圈复杂度覆盖率": 0.5
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper: boolean updateSeries(com.vrem.wifianalyzer.wifi.model.WiFiDetail,com.vrem.wifianalyzer.wifi.graphutils.GraphDataPoint[],boolean)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.375,
                    "圈复杂度覆盖率": 0.5
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper: boolean appendToSeries(com.vrem.wifianalyzer.wifi.model.WiFiDetail,com.vrem.wifianalyzer.wifi.graphutils.GraphDataPoint,int,boolean)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.375,
                    "圈复杂度覆盖率": 0.5
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper: boolean newSeries(com.vrem.wifianalyzer.wifi.model.WiFiDetail)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 0.5
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper: void setViewport()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper: void setViewport(int,int)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper: int getViewportCntX()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper: void addSeries(com.jjoe64.graphview.series.BaseSeries)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.9090909090909091,
                    "圈复杂度覆盖率": 0.5
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper: void updateLegend(com.vrem.wifianalyzer.wifi.graphutils.GraphLegend)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.5
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper: int calculateGraphType()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.875,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper: void setHorizontalLabelsVisible(boolean)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper: void visibility(int)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper: int size(int)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 0.5
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper: com.jjoe64.graphview.LegendRenderer newLegendRenderer()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.graphutils.SeriesCache",
          "覆盖率统计": {
            "行覆盖率": 0.875,
            "圈复杂度覆盖率": 1.0
          },
          "成员方法的数量": 7,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 1,
              "方法的统计信息": {
                "非公有方法的数量": 0,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 6,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.graphutils.SeriesCache: java.util.List difference(java.util.Set)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.graphutils.SeriesCache: java.util.List remove(java.util.List)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.graphutils.SeriesCache: com.vrem.wifianalyzer.wifi.model.WiFiDetail find(com.jjoe64.graphview.series.Series)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.graphutils.SeriesCache: boolean contains(com.vrem.wifianalyzer.wifi.model.WiFiDetail)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.graphutils.SeriesCache: com.jjoe64.graphview.series.BaseSeries get(com.vrem.wifianalyzer.wifi.model.WiFiDetail)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.graphutils.SeriesCache: com.jjoe64.graphview.series.BaseSeries put(com.vrem.wifianalyzer.wifi.model.WiFiDetail,com.jjoe64.graphview.series.BaseSeries)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.graphutils.SeriesOptions",
          "覆盖率统计": {
            "行覆盖率": 1.0,
            "圈复杂度覆盖率": 0.8333333333333334
          },
          "成员方法的数量": 7,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": {
                "非公有方法的数量": 0,
                "构造方法的数量": 3,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 4,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.graphutils.SeriesOptions: void highlightConnected(com.jjoe64.graphview.series.BaseSeries,boolean)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.7142857142857143,
                    "圈复杂度覆盖率": 0.25
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.graphutils.SeriesOptions: void setSeriesColor(com.jjoe64.graphview.series.BaseSeries)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.graphutils.SeriesOptions: void drawBackground(com.jjoe64.graphview.series.BaseSeries,boolean)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 0.3333333333333333
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.graphutils.SeriesOptions: void removeSeriesColor(com.jjoe64.graphview.series.BaseSeries)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.graphutils.GraphViewBuilder",
          "覆盖率统计": {
            "行覆盖率": 0.22580645161290322,
            "圈复杂度覆盖率": 0.07692307692307693
          },
          "成员方法的数量": 11,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 8,
              "方法的统计信息": {
                "非公有方法的数量": 2,
                "构造方法的数量": 2,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 4,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewBuilder: com.jjoe64.graphview.GraphView build(android.content.Context)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewBuilder: int getNumVerticalLabels()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewBuilder: int getMaximumPortY()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.graphutils.GraphColors",
          "覆盖率统计": {
            "行覆盖率": 0.8,
            "圈复杂度覆盖率": 0.4444444444444444
          },
          "成员方法的数量": 4,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 2,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 2,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.graphutils.GraphColors: com.vrem.wifianalyzer.wifi.graphutils.GraphColor graphColor()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.6666666666666666,
                    "圈复杂度覆盖率": 0.5
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.graphutils.GraphColors: void addColor(long)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.4,
                    "圈复杂度覆盖率": 0.25
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.timegraph.TimeGraphAdapter",
          "覆盖率统计": {
            "行覆盖率": 0.0,
            "圈复杂度覆盖率": 0.0
          },
          "成员方法的数量": 1,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 1,
              "方法的统计信息": {
                "非公有方法的数量": 0,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.graphutils.GraphAdapter",
          "覆盖率统计": {
            "行覆盖率": 1.0,
            "圈复杂度覆盖率": 1.0
          },
          "成员方法的数量": 4,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 1,
              "方法的统计信息": {
                "非公有方法的数量": 0,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.graphutils.GraphAdapter: java.util.List graphViews()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.graphutils.GraphAdapter: void update(com.vrem.wifianalyzer.wifi.model.WiFiData)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.graphutils.GraphAdapter: java.util.List graphViewNotifiers()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.timegraph.TimeGraphView",
          "覆盖率统计": {
            "行覆盖率": 0.4,
            "圈复杂度覆盖率": 0.5
          },
          "成员方法的数量": 6,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 2,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.timegraph.TimeGraphView: void update(com.vrem.wifianalyzer.wifi.model.WiFiData)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.5
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.timegraph.TimeGraphView: kotlin.jvm.functions.Function1 predicate(com.vrem.wifianalyzer.settings.Settings)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.timegraph.TimeGraphView: com.jjoe64.graphview.GraphView graphView()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.timegraph.TimeGraphFragment",
          "覆盖率统计": {
            "行覆盖率": 0.0,
            "圈复杂度覆盖率": 0.0
          },
          "成员方法的数量": 6,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 6,
              "方法的统计信息": {
                "非公有方法的数量": 0,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 1,
                "componentN 方法的数量": 0,
                "override 方法的数量": 4
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.channelrating.ChannelRatingAdapter",
          "覆盖率统计": {
            "行覆盖率": 0.02,
            "圈复杂度覆盖率": 0.07142857142857142
          },
          "成员方法的数量": 9,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 8,
              "方法的统计信息": {
                "非公有方法的数量": 4,
                "构造方法的数量": 2,
                "匿名方法的数量": 1,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 1
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 1,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.channelrating.ChannelRatingAdapter: void update(com.vrem.wifianalyzer.wifi.model.WiFiData)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.channelrating.ChannelRatingAdapterBinding",
          "覆盖率统计": {
            "行覆盖率": 0.0,
            "圈复杂度覆盖率": 0.0
          },
          "成员方法的数量": 6,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 6,
              "方法的统计信息": {
                "非公有方法的数量": 0,
                "构造方法的数量": 2,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 4,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.channelrating.ChannelRatingFragment",
          "覆盖率统计": {
            "行覆盖率": 0.0,
            "圈复杂度覆盖率": 0.0
          },
          "成员方法的数量": 6,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 6,
              "方法的统计信息": {
                "非公有方法的数量": 0,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 1,
                "componentN 方法的数量": 0,
                "override 方法的数量": 4
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.scanner.CacheResult",
          "覆盖率统计": {
            "行覆盖率": 0.0,
            "圈复杂度覆盖率": 0.0
          },
          "成员方法的数量": 3,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": {
                "非公有方法的数量": 0,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 2,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.scanner.Cache",
          "覆盖率统计": {
            "行覆盖率": 0.5,
            "圈复杂度覆盖率": 0.3333333333333333
          },
          "成员方法的数量": 13,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 8,
              "方法的统计信息": {
                "非公有方法的数量": 5,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 2,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 5,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.scanner.Cache: java.util.List scanResults()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.8333333333333334,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.scanner.Cache: void add(java.util.List)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.8333333333333334,
                    "圈复杂度覆盖率": 0.3333333333333333
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.scanner.Cache: java.util.List first()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.scanner.Cache: java.util.List last()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.scanner.Cache: int size()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.16666666666666666,
                    "圈复杂度覆盖率": 0.16666666666666666
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.scanner.Transformer",
          "覆盖率统计": {
            "行覆盖率": 0.0,
            "圈复杂度覆盖率": 0.0
          },
          "成员方法的数量": 5,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 5,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 1,
                "匿名方法的数量": 3,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.scanner.PeriodicScan",
          "覆盖率统计": {
            "行覆盖率": 1.0,
            "圈复杂度覆盖率": 0.875
          },
          "成员方法的数量": 9,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 5,
              "方法的统计信息": {
                "非公有方法的数量": 2,
                "构造方法的数量": 1,
                "匿名方法的数量": 2,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 4,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.scanner.PeriodicScan: void stop()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.scanner.PeriodicScan: void start()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.scanner.PeriodicScan: void startWithDelay()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.scanner.PeriodicScan: void run()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.scanner.ScanResultsReceiver",
          "覆盖率统计": {
            "行覆盖率": 0.0,
            "圈复杂度覆盖率": 0.1111111111111111
          },
          "成员方法的数量": 5,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 2,
              "方法的统计信息": {
                "非公有方法的数量": 0,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 1
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.scanner.ScanResultsReceiver: void register()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.scanner.ScanResultsReceiver: void unregister()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.scanner.ScanResultsReceiver: android.content.IntentFilter makeIntentFilter(java.lang.String)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.scanner.Scanner",
          "覆盖率统计": {
            "行覆盖率": 0.4,
            "圈复杂度覆盖率": 0.3103448275862069
          },
          "成员方法的数量": 22,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 11,
              "方法的统计信息": {
                "非公有方法的数量": 0,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 10,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 11,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.scanner.Scanner: void update()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.5,
                    "圈复杂度覆盖率": 0.3333333333333333
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.scanner.Scanner: com.vrem.wifianalyzer.wifi.model.WiFiData wiFiData()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.scanner.Scanner: boolean register(com.vrem.wifianalyzer.wifi.scanner.UpdateNotifier)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.scanner.Scanner: boolean unregister(com.vrem.wifianalyzer.wifi.scanner.UpdateNotifier)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.scanner.Scanner: void pause()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.scanner.Scanner: boolean running()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.scanner.Scanner: void resume()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.scanner.Scanner: void resumeWithDelay()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.scanner.Scanner: void stop()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.scanner.Scanner: void toggle()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.scanner.Scanner: int registered()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.scanner.ScannerCallback",
          "覆盖率统计": {
            "行覆盖率": 1.0,
            "圈复杂度覆盖率": 1.0
          },
          "成员方法的数量": 2,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 1,
              "方法的统计信息": {
                "非公有方法的数量": 0,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 1,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.scanner.ScannerCallback: void onSuccess()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.channelgraph.ChannelAxisLabel",
          "覆盖率统计": {
            "行覆盖率": 0.8125,
            "圈复杂度覆盖率": 0.45454545454545453
          },
          "成员方法的数量": 4,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 2,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 2,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.channelgraph.ChannelAxisLabel: java.lang.String formatLabel(double,boolean)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.8,
                    "圈复杂度覆盖率": 0.3333333333333333
                  },
                  "所有测试用例的数量": 2,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.channelgraph.ChannelAxisLabel: void setViewport(com.jjoe64.graphview.Viewport)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphView",
          "覆盖率统计": {
            "行覆盖率": 0.4117647058823529,
            "圈复杂度覆盖率": 0.7142857142857143
          },
          "成员方法的数量": 6,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 2,
              "方法的统计信息": {
                "非公有方法的数量": 0,
                "构造方法的数量": 2,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 4,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphView: void update(com.vrem.wifianalyzer.wifi.model.WiFiData)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.5
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphView: boolean selected()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphView: kotlin.jvm.functions.Function1 predicate(com.vrem.wifianalyzer.settings.Settings)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphView: com.jjoe64.graphview.GraphView graphView()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.channelgraph.DataManager",
          "覆盖率统计": {
            "行覆盖率": 0.75,
            "圈复杂度覆盖率": 0.8
          },
          "成员方法的数量": 4,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 1,
              "方法的统计信息": {
                "非公有方法的数量": 0,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.channelgraph.DataManager: java.util.Set newSeries(java.util.List,kotlin.Pair)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.channelgraph.DataManager: com.vrem.wifianalyzer.wifi.graphutils.GraphDataPoint[] graphDataPoints(com.vrem.wifianalyzer.wifi.model.WiFiDetail,int)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.channelgraph.DataManager: void addSeriesData(com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper,java.util.Set,int)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.2857142857142857,
                    "圈复杂度覆盖率": 0.5
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphNavigation",
          "覆盖率统计": {
            "行覆盖率": 0.0,
            "圈复杂度覆盖率": 0.0
          },
          "成员方法的数量": 7,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 7,
              "方法的统计信息": {
                "非公有方法的数量": 4,
                "构造方法的数量": 1,
                "匿名方法的数量": 2,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphAdapter",
          "覆盖率统计": {
            "行覆盖率": 0.0,
            "圈复杂度覆盖率": 0.5
          },
          "成员方法的数量": 2,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 1,
              "方法的统计信息": {
                "非公有方法的数量": 0,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 1,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphAdapter: void update(com.vrem.wifianalyzer.wifi.model.WiFiData)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphFragment",
          "覆盖率统计": {
            "行覆盖率": 0.0,
            "圈复杂度覆盖率": 0.0
          },
          "成员方法的数量": 6,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 6,
              "方法的统计信息": {
                "非公有方法的数量": 0,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 1,
                "componentN 方法的数量": 0,
                "override 方法的数量": 4
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.MainActivityBackPressed",
          "覆盖率统计": {
            "行覆盖率": 0.0,
            "圈复杂度覆盖率": 0.0
          },
          "成员方法的数量": 3,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": {
                "非公有方法的数量": 0,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 1,
                "componentN 方法的数量": 0,
                "override 方法的数量": 1
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.vendor.VendorFragment",
          "覆盖率统计": {
            "行覆盖率": 0.0,
            "圈复杂度覆盖率": 0.0
          },
          "成员方法的数量": 2,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 2,
              "方法的统计信息": {
                "非公有方法的数量": 0,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 1
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.vendor.VendorAdapter",
          "覆盖率统计": {
            "行覆盖率": 0.0,
            "圈复杂度覆盖率": 0.16666666666666666
          },
          "成员方法的数量": 4,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 1
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 1,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.vendor.VendorAdapter: void update(java.lang.String)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.navigation.options.OptionAction",
          "覆盖率统计": {
            "行覆盖率": 1.0,
            "圈复杂度覆盖率": 1.0
          },
          "成员方法的数量": 8,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 5,
              "方法的统计信息": {
                "非公有方法的数量": 3,
                "构造方法的数量": 0,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 2,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.navigation.options.OptionAction: com.vrem.wifianalyzer.navigation.options.OptionAction[] values()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.navigation.options.OptionAction: com.vrem.wifianalyzer.navigation.options.OptionAction valueOf(java.lang.String)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.navigation.options.OptionAction: kotlin.enums.EnumEntries getEntries()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 1.0,
                    "圈复杂度覆盖率": 1.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.navigation.items.FragmentItem",
          "覆盖率统计": {
            "行覆盖率": 0.06666666666666667,
            "圈复杂度覆盖率": 0.2222222222222222
          },
          "成员方法的数量": 8,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 7,
              "方法的统计信息": {
                "非公有方法的数量": 2,
                "构造方法的数量": 2,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 3,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 1,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.navigation.items.FragmentItem: void activate(com.vrem.wifianalyzer.MainActivity,android.view.MenuItem,com.vrem.wifianalyzer.navigation.NavigationMenu)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.navigation.items.ExportItem",
          "覆盖率统计": {
            "行覆盖率": 0.06666666666666667,
            "圈复杂度覆盖率": 0.16666666666666666
          },
          "成员方法的数量": 5,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 2,
              "方法的统计信息": {
                "非公有方法的数量": 1,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 0
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 3,
              "方法的统计信息": [
                {
                  "方法签名": "<com.vrem.wifianalyzer.navigation.items.ExportItem: void activate(com.vrem.wifianalyzer.MainActivity,android.view.MenuItem,com.vrem.wifianalyzer.navigation.NavigationMenu)>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 0,
                  "失败的测试用例的数量": 1
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.navigation.items.ExportItem: boolean getRegistered()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                },
                {
                  "方法签名": "<com.vrem.wifianalyzer.navigation.items.ExportItem: int getVisibility()>",
                  "测试用例的覆盖率统计": {
                    "行覆盖率": 0.0,
                    "圈复杂度覆盖率": 0.0
                  },
                  "所有测试用例的数量": 1,
                  "成功的测试用例的数量": 1,
                  "失败的测试用例的数量": 0
                }
              ]
            }
          }
        },
        {
          "类名": "com.vrem.wifianalyzer.about.AboutFragment",
          "覆盖率统计": {
            "行覆盖率": 0.0,
            "圈复杂度覆盖率": 0.0
          },
          "成员方法的数量": 12,
          "成员方法的统计信息": {
            "不需要测试的方法的统计信息": {
              "方法的数量": 12,
              "方法的统计信息": {
                "非公有方法的数量": 10,
                "构造方法的数量": 1,
                "匿名方法的数量": 0,
                "抽象方法的数量": 0,
                "get/set方法的数量": 0,
                "componentN 方法的数量": 0,
                "override 方法的数量": 1
              }
            },
            "需要但是无法测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            },
            "可以测试的方法的统计信息": {
              "方法的数量": 0,
              "方法的统计信息": []
            }
          }
        }
      ]
    }
  }
}