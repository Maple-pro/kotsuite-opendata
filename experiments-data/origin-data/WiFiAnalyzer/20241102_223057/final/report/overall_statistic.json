{
  "module": "/home/yangfeng/Repos/kotsuite-project/kotsuite-experiments/repos/WiFiAnalyzer/app",
  "classes": [
    {
      "className": "com.vrem.wifianalyzer.databinding.AccessPointsContentBinding",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.AccessPointsContentBinding: void <init>(android.widget.LinearLayout,androidx.swiperefreshlayout.widget.SwipeRefreshLayout,android.widget.ExpandableListView)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.AccessPointsContentBinding: android.widget.LinearLayout getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.AccessPointsContentBinding: com.vrem.wifianalyzer.databinding.AccessPointsContentBinding inflate(android.view.LayoutInflater)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.AccessPointsContentBinding: com.vrem.wifianalyzer.databinding.AccessPointsContentBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.AccessPointsContentBinding: com.vrem.wifianalyzer.databinding.AccessPointsContentBinding bind(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.AccessPointsContentBinding: android.view.View getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.R$id",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.R$id: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.R$layout",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.R$layout: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.R",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.R: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.databinding.FilterSecurityBinding",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.FilterSecurityBinding: void <init>(android.widget.LinearLayout,android.widget.LinearLayout,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.FilterSecurityBinding: android.widget.LinearLayout getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.FilterSecurityBinding: com.vrem.wifianalyzer.databinding.FilterSecurityBinding inflate(android.view.LayoutInflater)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.FilterSecurityBinding: com.vrem.wifianalyzer.databinding.FilterSecurityBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.FilterSecurityBinding: com.vrem.wifianalyzer.databinding.FilterSecurityBinding bind(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.FilterSecurityBinding: android.view.View getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.databinding.InfoThrottlingBinding",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.InfoThrottlingBinding: void <init>(android.widget.LinearLayout,android.widget.TextView)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.InfoThrottlingBinding: android.widget.LinearLayout getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.InfoThrottlingBinding: com.vrem.wifianalyzer.databinding.InfoThrottlingBinding inflate(android.view.LayoutInflater)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.InfoThrottlingBinding: com.vrem.wifianalyzer.databinding.InfoThrottlingBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.InfoThrottlingBinding: com.vrem.wifianalyzer.databinding.InfoThrottlingBinding bind(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.InfoThrottlingBinding: android.view.View getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.databinding.FilterSsidBinding",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.FilterSsidBinding: void <init>(android.widget.LinearLayout,android.widget.LinearLayout,android.widget.EditText)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.FilterSsidBinding: android.widget.LinearLayout getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.FilterSsidBinding: com.vrem.wifianalyzer.databinding.FilterSsidBinding inflate(android.view.LayoutInflater)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.FilterSsidBinding: com.vrem.wifianalyzer.databinding.FilterSsidBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.FilterSsidBinding: com.vrem.wifianalyzer.databinding.FilterSsidBinding bind(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.FilterSsidBinding: android.view.View getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.databinding.AccessPointViewHideBinding",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.AccessPointViewHideBinding: void <init>(android.widget.LinearLayout)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.AccessPointViewHideBinding: android.widget.LinearLayout getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.AccessPointViewHideBinding: com.vrem.wifianalyzer.databinding.AccessPointViewHideBinding inflate(android.view.LayoutInflater)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.AccessPointViewHideBinding: com.vrem.wifianalyzer.databinding.AccessPointViewHideBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.AccessPointViewHideBinding: com.vrem.wifianalyzer.databinding.AccessPointViewHideBinding bind(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.AccessPointViewHideBinding: android.view.View getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.databinding.MainToolbarBinding",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainToolbarBinding: void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout,androidx.appcompat.widget.Toolbar)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainToolbarBinding: androidx.coordinatorlayout.widget.CoordinatorLayout getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainToolbarBinding: com.vrem.wifianalyzer.databinding.MainToolbarBinding inflate(android.view.LayoutInflater)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainToolbarBinding: com.vrem.wifianalyzer.databinding.MainToolbarBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainToolbarBinding: com.vrem.wifianalyzer.databinding.MainToolbarBinding bind(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainToolbarBinding: android.view.View getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.databinding.AboutContentBinding",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.AboutContentBinding: void <init>(android.widget.LinearLayout,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.Button,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.Button)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.AboutContentBinding: android.widget.LinearLayout getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.AboutContentBinding: com.vrem.wifianalyzer.databinding.AboutContentBinding inflate(android.view.LayoutInflater)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.AboutContentBinding: com.vrem.wifianalyzer.databinding.AboutContentBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.AboutContentBinding: com.vrem.wifianalyzer.databinding.AboutContentBinding bind(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.AboutContentBinding: android.view.View getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.databinding.AccessPointViewCompleteBinding",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.AccessPointViewCompleteBinding: void <init>(android.widget.LinearLayout,android.widget.LinearLayout,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.ImageView,android.widget.TextView,android.widget.ImageView,android.widget.TextView,android.widget.ImageView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.AccessPointViewCompleteBinding: android.widget.LinearLayout getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.AccessPointViewCompleteBinding: com.vrem.wifianalyzer.databinding.AccessPointViewCompleteBinding inflate(android.view.LayoutInflater)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.AccessPointViewCompleteBinding: com.vrem.wifianalyzer.databinding.AccessPointViewCompleteBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.AccessPointViewCompleteBinding: com.vrem.wifianalyzer.databinding.AccessPointViewCompleteBinding bind(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.AccessPointViewCompleteBinding: android.view.View getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.databinding.VendorContentBinding",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.VendorContentBinding: void <init>(android.widget.LinearLayout,android.widget.TextView,android.widget.ListView,android.widget.SearchView)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.VendorContentBinding: android.widget.LinearLayout getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.VendorContentBinding: com.vrem.wifianalyzer.databinding.VendorContentBinding inflate(android.view.LayoutInflater)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.VendorContentBinding: com.vrem.wifianalyzer.databinding.VendorContentBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.VendorContentBinding: com.vrem.wifianalyzer.databinding.VendorContentBinding bind(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.VendorContentBinding: android.view.View getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.databinding.FilterStrengthBinding",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.FilterStrengthBinding: void <init>(android.widget.LinearLayout,android.widget.LinearLayout,android.widget.ImageView,android.widget.ImageView,android.widget.ImageView,android.widget.ImageView,android.widget.ImageView)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.FilterStrengthBinding: android.widget.LinearLayout getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.FilterStrengthBinding: com.vrem.wifianalyzer.databinding.FilterStrengthBinding inflate(android.view.LayoutInflater)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.FilterStrengthBinding: com.vrem.wifianalyzer.databinding.FilterStrengthBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.FilterStrengthBinding: com.vrem.wifianalyzer.databinding.FilterStrengthBinding bind(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.FilterStrengthBinding: android.view.View getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.databinding.AccessPointViewPopupBinding",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.AccessPointViewPopupBinding: void <init>(android.widget.LinearLayout,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.AccessPointViewPopupBinding: android.widget.LinearLayout getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.AccessPointViewPopupBinding: com.vrem.wifianalyzer.databinding.AccessPointViewPopupBinding inflate(android.view.LayoutInflater)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.AccessPointViewPopupBinding: com.vrem.wifianalyzer.databinding.AccessPointViewPopupBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.AccessPointViewPopupBinding: com.vrem.wifianalyzer.databinding.AccessPointViewPopupBinding bind(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.AccessPointViewPopupBinding: android.view.View getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.databinding.MainWarningBinding",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainWarningBinding: void <init>(android.widget.LinearLayout,android.widget.LinearLayout,android.widget.LinearLayout,android.widget.LinearLayout)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainWarningBinding: android.widget.LinearLayout getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainWarningBinding: com.vrem.wifianalyzer.databinding.MainWarningBinding inflate(android.view.LayoutInflater)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainWarningBinding: com.vrem.wifianalyzer.databinding.MainWarningBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainWarningBinding: com.vrem.wifianalyzer.databinding.MainWarningBinding bind(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainWarningBinding: android.view.View getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.databinding.ChannelRatingHeaderBinding",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.ChannelRatingHeaderBinding: void <init>(android.widget.LinearLayout)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.ChannelRatingHeaderBinding: android.widget.LinearLayout getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.ChannelRatingHeaderBinding: com.vrem.wifianalyzer.databinding.ChannelRatingHeaderBinding inflate(android.view.LayoutInflater)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.ChannelRatingHeaderBinding: com.vrem.wifianalyzer.databinding.ChannelRatingHeaderBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.ChannelRatingHeaderBinding: com.vrem.wifianalyzer.databinding.ChannelRatingHeaderBinding bind(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.ChannelRatingHeaderBinding: android.view.View getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.databinding.AccessPointViewCompactBinding",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.AccessPointViewCompactBinding: void <init>(android.widget.LinearLayout,android.widget.LinearLayout,android.widget.TextView,android.widget.TextView,android.widget.ImageView,android.widget.TextView,android.widget.TextView,android.widget.ImageView,android.widget.TextView,android.widget.TextView)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.AccessPointViewCompactBinding: android.widget.LinearLayout getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.AccessPointViewCompactBinding: com.vrem.wifianalyzer.databinding.AccessPointViewCompactBinding inflate(android.view.LayoutInflater)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.AccessPointViewCompactBinding: com.vrem.wifianalyzer.databinding.AccessPointViewCompactBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.AccessPointViewCompactBinding: com.vrem.wifianalyzer.databinding.AccessPointViewCompactBinding bind(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.AccessPointViewCompactBinding: android.view.View getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.databinding.FilterWifiBandBinding",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.FilterWifiBandBinding: void <init>(android.widget.LinearLayout,android.widget.LinearLayout,android.widget.TextView,android.widget.TextView,android.widget.TextView)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.FilterWifiBandBinding: android.widget.LinearLayout getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.FilterWifiBandBinding: com.vrem.wifianalyzer.databinding.FilterWifiBandBinding inflate(android.view.LayoutInflater)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.FilterWifiBandBinding: com.vrem.wifianalyzer.databinding.FilterWifiBandBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.FilterWifiBandBinding: com.vrem.wifianalyzer.databinding.FilterWifiBandBinding bind(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.FilterWifiBandBinding: android.view.View getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.databinding.ChannelRatingBestBinding",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.ChannelRatingBestBinding: void <init>(android.widget.LinearLayout,android.widget.TextView)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.ChannelRatingBestBinding: android.widget.LinearLayout getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.ChannelRatingBestBinding: com.vrem.wifianalyzer.databinding.ChannelRatingBestBinding inflate(android.view.LayoutInflater)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.ChannelRatingBestBinding: com.vrem.wifianalyzer.databinding.ChannelRatingBestBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.ChannelRatingBestBinding: com.vrem.wifianalyzer.databinding.ChannelRatingBestBinding bind(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.ChannelRatingBestBinding: android.view.View getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.databinding.InfoLocationBinding",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.InfoLocationBinding: void <init>(android.widget.LinearLayout)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.InfoLocationBinding: android.widget.LinearLayout getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.InfoLocationBinding: com.vrem.wifianalyzer.databinding.InfoLocationBinding inflate(android.view.LayoutInflater)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.InfoLocationBinding: com.vrem.wifianalyzer.databinding.InfoLocationBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.InfoLocationBinding: com.vrem.wifianalyzer.databinding.InfoLocationBinding bind(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.InfoLocationBinding: android.view.View getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.databinding.SeparatorLineBinding",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.SeparatorLineBinding: void <init>(android.view.View)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.SeparatorLineBinding: android.view.View getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.SeparatorLineBinding: com.vrem.wifianalyzer.databinding.SeparatorLineBinding inflate(android.view.LayoutInflater)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.SeparatorLineBinding: com.vrem.wifianalyzer.databinding.SeparatorLineBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.SeparatorLineBinding: com.vrem.wifianalyzer.databinding.SeparatorLineBinding bind(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.databinding.VendorDetailsBinding",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.VendorDetailsBinding: void <init>(android.widget.LinearLayout,android.widget.TextView,android.widget.TextView)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.VendorDetailsBinding: android.widget.LinearLayout getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.VendorDetailsBinding: com.vrem.wifianalyzer.databinding.VendorDetailsBinding inflate(android.view.LayoutInflater)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.VendorDetailsBinding: com.vrem.wifianalyzer.databinding.VendorDetailsBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.VendorDetailsBinding: com.vrem.wifianalyzer.databinding.VendorDetailsBinding bind(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.VendorDetailsBinding: android.view.View getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.databinding.ChannelAvailableContentBinding",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.ChannelAvailableContentBinding: void <init>(android.widget.LinearLayout,android.widget.ListView)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.ChannelAvailableContentBinding: android.widget.LinearLayout getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.ChannelAvailableContentBinding: com.vrem.wifianalyzer.databinding.ChannelAvailableContentBinding inflate(android.view.LayoutInflater)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.ChannelAvailableContentBinding: com.vrem.wifianalyzer.databinding.ChannelAvailableContentBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.ChannelAvailableContentBinding: com.vrem.wifianalyzer.databinding.ChannelAvailableContentBinding bind(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.ChannelAvailableContentBinding: android.view.View getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.databinding.InfoPermissionBinding",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.InfoPermissionBinding: void <init>(android.widget.ScrollView)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.InfoPermissionBinding: android.widget.ScrollView getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.InfoPermissionBinding: com.vrem.wifianalyzer.databinding.InfoPermissionBinding inflate(android.view.LayoutInflater)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.InfoPermissionBinding: com.vrem.wifianalyzer.databinding.InfoPermissionBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.InfoPermissionBinding: com.vrem.wifianalyzer.databinding.InfoPermissionBinding bind(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.InfoPermissionBinding: android.view.View getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.databinding.MainWifiSupportBinding",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainWifiSupportBinding: void <init>(android.widget.LinearLayout,android.widget.TextView)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainWifiSupportBinding: android.widget.LinearLayout getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainWifiSupportBinding: com.vrem.wifianalyzer.databinding.MainWifiSupportBinding inflate(android.view.LayoutInflater)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainWifiSupportBinding: com.vrem.wifianalyzer.databinding.MainWifiSupportBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainWifiSupportBinding: com.vrem.wifianalyzer.databinding.MainWifiSupportBinding bind(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainWifiSupportBinding: android.view.View getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.databinding.MainContentBinding",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainContentBinding: void <init>(android.widget.LinearLayout,android.widget.FrameLayout,com.google.android.material.bottomnavigation.BottomNavigationView)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainContentBinding: android.widget.LinearLayout getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainContentBinding: com.vrem.wifianalyzer.databinding.MainContentBinding inflate(android.view.LayoutInflater)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainContentBinding: com.vrem.wifianalyzer.databinding.MainContentBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainContentBinding: com.vrem.wifianalyzer.databinding.MainContentBinding bind(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainContentBinding: android.view.View getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.databinding.ChannelRatingContentBinding",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.ChannelRatingContentBinding: void <init>(android.widget.LinearLayout,com.vrem.wifianalyzer.databinding.ChannelRatingBestBinding,androidx.swiperefreshlayout.widget.SwipeRefreshLayout,android.widget.ListView)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.ChannelRatingContentBinding: android.widget.LinearLayout getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.ChannelRatingContentBinding: com.vrem.wifianalyzer.databinding.ChannelRatingContentBinding inflate(android.view.LayoutInflater)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.ChannelRatingContentBinding: com.vrem.wifianalyzer.databinding.ChannelRatingContentBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.ChannelRatingContentBinding: com.vrem.wifianalyzer.databinding.ChannelRatingContentBinding bind(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.ChannelRatingContentBinding: android.view.View getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.databinding.MainActivityBinding",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainActivityBinding: void <init>(androidx.drawerlayout.widget.DrawerLayout,androidx.drawerlayout.widget.DrawerLayout,com.google.android.material.navigation.NavigationView)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainActivityBinding: androidx.drawerlayout.widget.DrawerLayout getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainActivityBinding: com.vrem.wifianalyzer.databinding.MainActivityBinding inflate(android.view.LayoutInflater)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainActivityBinding: com.vrem.wifianalyzer.databinding.MainActivityBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainActivityBinding: com.vrem.wifianalyzer.databinding.MainActivityBinding bind(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainActivityBinding: android.view.View getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.databinding.ChannelAvailableDetailsBinding",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.ChannelAvailableDetailsBinding: void <init>(android.widget.LinearLayout,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.ChannelAvailableDetailsBinding: android.widget.LinearLayout getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.ChannelAvailableDetailsBinding: com.vrem.wifianalyzer.databinding.ChannelAvailableDetailsBinding inflate(android.view.LayoutInflater)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.ChannelAvailableDetailsBinding: com.vrem.wifianalyzer.databinding.ChannelAvailableDetailsBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.ChannelAvailableDetailsBinding: com.vrem.wifianalyzer.databinding.ChannelAvailableDetailsBinding bind(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.ChannelAvailableDetailsBinding: android.view.View getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.databinding.MainConnectionBinding",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainConnectionBinding: void <init>(android.widget.LinearLayout,android.widget.LinearLayout,android.widget.LinearLayout,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.LinearLayout)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainConnectionBinding: android.widget.LinearLayout getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainConnectionBinding: com.vrem.wifianalyzer.databinding.MainConnectionBinding inflate(android.view.LayoutInflater)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainConnectionBinding: com.vrem.wifianalyzer.databinding.MainConnectionBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainConnectionBinding: com.vrem.wifianalyzer.databinding.MainConnectionBinding bind(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainConnectionBinding: android.view.View getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.databinding.FilterPopupBinding",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.FilterPopupBinding: void <init>(android.widget.ScrollView)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.FilterPopupBinding: android.widget.ScrollView getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.FilterPopupBinding: com.vrem.wifianalyzer.databinding.FilterPopupBinding inflate(android.view.LayoutInflater)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.FilterPopupBinding: com.vrem.wifianalyzer.databinding.FilterPopupBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.FilterPopupBinding: com.vrem.wifianalyzer.databinding.FilterPopupBinding bind(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.FilterPopupBinding: android.view.View getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.databinding.InfoFaqBinding",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.InfoFaqBinding: void <init>(android.widget.LinearLayout)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.InfoFaqBinding: android.widget.LinearLayout getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.InfoFaqBinding: com.vrem.wifianalyzer.databinding.InfoFaqBinding inflate(android.view.LayoutInflater)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.InfoFaqBinding: com.vrem.wifianalyzer.databinding.InfoFaqBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.InfoFaqBinding: com.vrem.wifianalyzer.databinding.InfoFaqBinding bind(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.InfoFaqBinding: android.view.View getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.databinding.GraphContentBinding",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.GraphContentBinding: void <init>(android.widget.LinearLayout,android.widget.ViewFlipper,androidx.appcompat.widget.ButtonBarLayout,android.widget.LinearLayout,android.widget.LinearLayout,android.widget.Button,android.widget.Button,android.widget.Button,android.widget.Button,android.widget.Button,android.widget.Button,android.widget.Button,androidx.swiperefreshlayout.widget.SwipeRefreshLayout)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.GraphContentBinding: android.widget.LinearLayout getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.GraphContentBinding: com.vrem.wifianalyzer.databinding.GraphContentBinding inflate(android.view.LayoutInflater)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.GraphContentBinding: com.vrem.wifianalyzer.databinding.GraphContentBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.GraphContentBinding: com.vrem.wifianalyzer.databinding.GraphContentBinding bind(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.GraphContentBinding: android.view.View getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.databinding.ChannelRatingDetailsBinding",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.ChannelRatingDetailsBinding: void <init>(android.widget.LinearLayout,android.widget.TextView,android.widget.TextView,android.widget.RatingBar)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.ChannelRatingDetailsBinding: android.widget.LinearLayout getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.ChannelRatingDetailsBinding: com.vrem.wifianalyzer.databinding.ChannelRatingDetailsBinding inflate(android.view.LayoutInflater)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.ChannelRatingDetailsBinding: com.vrem.wifianalyzer.databinding.ChannelRatingDetailsBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.ChannelRatingDetailsBinding: com.vrem.wifianalyzer.databinding.ChannelRatingDetailsBinding bind(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.ChannelRatingDetailsBinding: android.view.View getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.databinding.MainNavigationBinding",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainNavigationBinding: void <init>(android.widget.LinearLayout)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainNavigationBinding: android.widget.LinearLayout getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainNavigationBinding: com.vrem.wifianalyzer.databinding.MainNavigationBinding inflate(android.view.LayoutInflater)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainNavigationBinding: com.vrem.wifianalyzer.databinding.MainNavigationBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainNavigationBinding: com.vrem.wifianalyzer.databinding.MainNavigationBinding bind(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainNavigationBinding: android.view.View getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.databinding.MainWifiThrottlingBinding",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainWifiThrottlingBinding: void <init>(android.widget.LinearLayout,android.widget.TextView)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainWifiThrottlingBinding: android.widget.LinearLayout getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainWifiThrottlingBinding: com.vrem.wifianalyzer.databinding.MainWifiThrottlingBinding inflate(android.view.LayoutInflater)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainWifiThrottlingBinding: com.vrem.wifianalyzer.databinding.MainWifiThrottlingBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainWifiThrottlingBinding: com.vrem.wifianalyzer.databinding.MainWifiThrottlingBinding bind(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.databinding.MainWifiThrottlingBinding: android.view.View getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.util.CompatUtilsKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.util.CompatUtilsKt: android.content.Context createContext(android.content.Context,java.util.Locale)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.util.CompatUtilsKt: android.content.pm.PackageInfo packageInfo(android.content.Context)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.util.CompatUtilsKt: android.content.pm.PackageInfo packageInfoAndroidT(android.content.Context)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.util.CompatUtilsKt: android.content.pm.PackageInfo packageInfoLegacy(android.content.Context)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.util.CompatUtilsKt: java.lang.String ssid(android.net.wifi.ScanResult)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.util.CompatUtilsKt: java.lang.String ssidAndroidT(android.net.wifi.ScanResult)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.util.CompatUtilsKt: java.lang.String ssidLegacy(android.net.wifi.ScanResult)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.util.StringUtilsKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.util.StringUtilsKt: java.lang.String getEMPTY(kotlin.jvm.internal.StringCompanionObject)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.util.StringUtilsKt: java.lang.String getSPACE_SEPARATOR(kotlin.jvm.internal.StringCompanionObject)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.util.StringUtilsKt: java.lang.String nullToEmpty(kotlin.jvm.internal.StringCompanionObject,java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.util.StringUtilsKt: java.lang.String specialTrim(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.util.StringUtilsKt: java.lang.String toCapitalize(java.lang.String,java.util.Locale)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.util.BuildUtilsKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.util.BuildUtilsKt: boolean buildMinVersionT()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.util.BuildUtilsKt: boolean buildMinVersionR()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.util.BuildUtilsKt: boolean buildMinVersionQ()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.util.BuildUtilsKt: boolean buildMinVersionP()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.util.BuildUtilsKt: boolean buildVersionP()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.util.EnumUtilsKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.util.EnumUtilsKt: java.util.Set findSet(kotlin.enums.EnumEntries,java.util.Set,java.lang.Enum)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.util.EnumUtilsKt: java.lang.Enum findOne(kotlin.enums.EnumEntries,int,java.lang.Enum)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.util.EnumUtilsKt: java.util.Set ordinals(kotlin.enums.EnumEntries)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.util.EnumUtilsKt: java.util.Set ordinals(java.util.Set)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.util.LocaleUtilsKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.util.LocaleUtilsKt: java.util.Locale getBULGARIAN()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.util.LocaleUtilsKt: java.util.Locale getGREEK()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.util.LocaleUtilsKt: java.util.Locale getPOLISH()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.util.LocaleUtilsKt: java.util.Locale getPORTUGUESE()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.util.LocaleUtilsKt: java.util.Locale getSPANISH()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.util.LocaleUtilsKt: java.util.Locale getRUSSIAN()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.util.LocaleUtilsKt: java.util.Locale getTURKISH()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.util.LocaleUtilsKt: java.util.Locale getUKRAINIAN()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.util.LocaleUtilsKt: java.util.Locale findByCountryCode(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.util.LocaleUtilsKt: java.util.List allCountries()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.util.LocaleUtilsKt: java.util.Locale findByLanguageTag(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.util.LocaleUtilsKt: java.util.List supportedLanguages()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.util.LocaleUtilsKt: java.lang.String defaultCountryCode()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.util.LocaleUtilsKt: java.lang.String defaultLanguageTag()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.util.LocaleUtilsKt: java.lang.String toLanguageTag(java.util.Locale)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.util.LocaleUtilsKt: java.util.Locale fromLanguageTag(java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.util.LocaleUtilsKt: boolean findByLanguageTag$lambda$1(java.lang.String,java.util.Locale)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.util.LocaleUtilsKt: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.util.SyncAvoid",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "NON_PUBLIC_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.util.SyncAvoid: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.util.SyncAvoid: java.util.Locale getDefaultLocale()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.util.SyncAvoid: java.util.Set getCountryCodes()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.util.SyncAvoid: java.util.List getAvailableLocales()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.util.SyncAvoid: java.util.SortedMap getCountriesLocales()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.util.SyncAvoid: java.util.List getSupportedLocales()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.util.SyncAvoid: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.util.FileUtilsKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.util.FileUtilsKt: java.lang.String readFile(android.content.res.Resources,int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.util.FileUtilsKt: java.lang.String read(java.io.InputStream)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.ActivityUtilsKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.ActivityUtilsKt: void keepScreenOn(com.vrem.wifianalyzer.MainActivity)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.ActivityUtilsKt: androidx.appcompat.widget.Toolbar setupToolbar(com.vrem.wifianalyzer.MainActivity)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.ActivityUtilsKt: android.content.Intent makeIntent(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.ActivityUtilsKt: void startWiFiSettings(com.vrem.wifianalyzer.MainActivity)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.ActivityUtilsKt: void startLocationSettings(com.vrem.wifianalyzer.MainActivity)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.MainActivity",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.MainActivity: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainActivity: com.vrem.wifianalyzer.DrawerNavigation getDrawerNavigation$app_debug()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainActivity: void setDrawerNavigation$app_debug(com.vrem.wifianalyzer.DrawerNavigation)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainActivity: com.vrem.wifianalyzer.MainReload getMainReload$app_debug()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainActivity: void setMainReload$app_debug(com.vrem.wifianalyzer.MainReload)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainActivity: com.vrem.wifianalyzer.navigation.NavigationMenuController getNavigationMenuController$app_debug()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainActivity: void setNavigationMenuController$app_debug(com.vrem.wifianalyzer.navigation.NavigationMenuController)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainActivity: com.vrem.wifianalyzer.navigation.options.OptionMenu getOptionMenu$app_debug()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainActivity: void setOptionMenu$app_debug(com.vrem.wifianalyzer.navigation.options.OptionMenu)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainActivity: com.vrem.wifianalyzer.wifi.accesspoint.ConnectionView getConnectionView$app_debug()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainActivity: void setConnectionView$app_debug(com.vrem.wifianalyzer.wifi.accesspoint.ConnectionView)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainActivity: void attachBaseContext(android.content.Context)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainActivity: void onCreate(android.os.Bundle)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainActivity: void onPostCreate(android.os.Bundle)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainActivity: void onConfigurationChanged(android.content.res.Configuration)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainActivity: void setWiFiChannelPairs(com.vrem.wifianalyzer.MainContext)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainActivity: boolean getLargeScreen()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainActivity: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainActivity: void update()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainActivity: boolean onNavigationItemSelected(android.view.MenuItem)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainActivity: boolean closeDrawer()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainActivity: void onPause()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainActivity: void onResume()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainActivity: void onStop()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainActivity: void onStart()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainActivity: boolean onCreateOptionsMenu(android.view.Menu)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainActivity: boolean onOptionsItemSelected(android.view.MenuItem)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainActivity: void updateActionBar()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainActivity: android.view.MenuItem currentMenuItem()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainActivity: com.vrem.wifianalyzer.navigation.NavigationMenu currentNavigationMenu()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainActivity: void currentNavigationMenu(com.vrem.wifianalyzer.navigation.NavigationMenu)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainActivity: com.google.android.material.navigation.NavigationView navigationView()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainActivity: void mainConnectionVisibility(int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.navigation.NavigationMenuControl",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.NavigationMenuControl: android.view.MenuItem currentMenuItem()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.NavigationMenuControl: com.vrem.wifianalyzer.navigation.NavigationMenu currentNavigationMenu()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.NavigationMenuControl: void currentNavigationMenu(com.vrem.wifianalyzer.navigation.NavigationMenu)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.NavigationMenuControl: com.google.android.material.navigation.NavigationView navigationView()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.NavigationMenuControl: android.view.View findViewById(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.MainContext",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.MainContext: void <init>(java.lang.String,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainContext: com.vrem.wifianalyzer.settings.Settings getSettings()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainContext: void setSettings(com.vrem.wifianalyzer.settings.Settings)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainContext: com.vrem.wifianalyzer.MainActivity getMainActivity()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainContext: void setMainActivity(com.vrem.wifianalyzer.MainActivity)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainContext: com.vrem.wifianalyzer.wifi.manager.WiFiManagerWrapper getWiFiManagerWrapper()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainContext: void setWiFiManagerWrapper(com.vrem.wifianalyzer.wifi.manager.WiFiManagerWrapper)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainContext: com.vrem.wifianalyzer.permission.PermissionService getPermissionService()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainContext: void setPermissionService(com.vrem.wifianalyzer.permission.PermissionService)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainContext: com.vrem.wifianalyzer.wifi.scanner.ScannerService getScannerService()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainContext: void setScannerService(com.vrem.wifianalyzer.wifi.scanner.ScannerService)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainContext: com.vrem.wifianalyzer.vendor.model.VendorService getVendorService()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainContext: void setVendorService(com.vrem.wifianalyzer.vendor.model.VendorService)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainContext: com.vrem.wifianalyzer.Configuration getConfiguration()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainContext: void setConfiguration(com.vrem.wifianalyzer.Configuration)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainContext: com.vrem.wifianalyzer.wifi.filter.adapter.FiltersAdapter getFiltersAdapter()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainContext: void setFiltersAdapter(com.vrem.wifianalyzer.wifi.filter.adapter.FiltersAdapter)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainContext: android.content.Context getContext()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainContext: android.content.res.Resources getResources()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainContext: android.view.LayoutInflater getLayoutInflater()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainContext: android.net.wifi.WifiManager getWiFiManager()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainContext: void initialize(com.vrem.wifianalyzer.MainActivity,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainContext: com.vrem.wifianalyzer.MainContext[] values()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainContext: com.vrem.wifianalyzer.MainContext valueOf(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainContext: kotlin.enums.EnumEntries getEntries()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainContext: com.vrem.wifianalyzer.MainContext[] $values()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainContext: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.settings.Settings",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Settings: void <init>(com.vrem.wifianalyzer.settings.Repository)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Settings: void initializeDefaultValues()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Settings: void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Settings: int scanSpeed()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Settings: boolean cacheOff()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Settings: int graphMaximumY()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Settings: void wiFiBand(com.vrem.wifianalyzer.wifi.band.WiFiBand)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Settings: java.lang.String countryCode()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Settings: java.util.Locale languageLocale()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Settings: com.vrem.wifianalyzer.wifi.model.SortBy sortBy()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Settings: com.vrem.wifianalyzer.wifi.model.GroupBy groupBy()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Settings: com.vrem.wifianalyzer.wifi.accesspoint.AccessPointViewType accessPointView()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Settings: com.vrem.wifianalyzer.wifi.accesspoint.ConnectionViewType connectionViewType()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Settings: com.vrem.wifianalyzer.wifi.graphutils.GraphLegend channelGraphLegend()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Settings: com.vrem.wifianalyzer.wifi.graphutils.GraphLegend timeGraphLegend()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Settings: com.vrem.wifianalyzer.wifi.band.WiFiBand wiFiBand()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Settings: boolean wiFiOffOnExit()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Settings: boolean keepScreenOn()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Settings: com.vrem.wifianalyzer.settings.ThemeStyle themeStyle()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Settings: com.vrem.wifianalyzer.navigation.NavigationMenu selectedMenu()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Settings: void saveSelectedMenu(com.vrem.wifianalyzer.navigation.NavigationMenu)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Settings: java.util.Set findSSIDs()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Settings: void saveSSIDs(java.util.Set)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Settings: java.util.Set findWiFiBands()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Settings: void saveWiFiBands(java.util.Set)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Settings: java.util.Set findStrengths()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Settings: void saveStrengths(java.util.Set)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Settings: java.util.Set findSecurities()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Settings: void saveSecurities(java.util.Set)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Settings: java.lang.Enum find(kotlin.enums.EnumEntries,int,java.lang.Enum)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Settings: java.util.Set findSet(kotlin.enums.EnumEntries,int,java.lang.Enum)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Settings: void saveSet(int,java.util.Set)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Settings: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.manager.WiFiManagerWrapper",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.manager.WiFiManagerWrapper: void <init>(android.net.wifi.WifiManager,com.vrem.wifianalyzer.wifi.manager.WiFiSwitch)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.manager.WiFiManagerWrapper: void <init>(android.net.wifi.WifiManager,com.vrem.wifianalyzer.wifi.manager.WiFiSwitch,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.manager.WiFiManagerWrapper: boolean wiFiEnabled()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.manager.WiFiManagerWrapper: boolean enableWiFi()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.manager.WiFiManagerWrapper: boolean disableWiFi()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.manager.WiFiManagerWrapper: boolean startScan()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.manager.WiFiManagerWrapper: java.util.List scanResults()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.manager.WiFiManagerWrapper: android.net.wifi.WifiInfo wiFiInfo()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.manager.WiFiManagerWrapper: boolean is5GHzBandSupported()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.manager.WiFiManagerWrapper: boolean is6GHzBandSupported()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.manager.WiFiManagerWrapper: boolean isScanThrottleEnabled()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.manager.WiFiManagerWrapper: boolean minVersionR()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.permission.PermissionService",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.permission.PermissionService: void <init>(android.app.Activity,com.vrem.wifianalyzer.permission.LocationPermission,com.vrem.wifianalyzer.permission.ApplicationPermission)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.permission.PermissionService: void <init>(android.app.Activity,com.vrem.wifianalyzer.permission.LocationPermission,com.vrem.wifianalyzer.permission.ApplicationPermission,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.permission.PermissionService: boolean enabled()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.permission.PermissionService: boolean locationEnabled()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.permission.PermissionService: void check()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.permission.PermissionService: boolean granted(int,int[])>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.permission.PermissionService: boolean permissionGranted()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.scanner.ScannerService",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.ScannerService: void update()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.ScannerService: com.vrem.wifianalyzer.wifi.model.WiFiData wiFiData()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.ScannerService: boolean register(com.vrem.wifianalyzer.wifi.scanner.UpdateNotifier)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.ScannerService: boolean unregister(com.vrem.wifianalyzer.wifi.scanner.UpdateNotifier)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.ScannerService: void pause()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.ScannerService: boolean running()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.ScannerService: void resume()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.ScannerService: void resumeWithDelay()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.ScannerService: void stop()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.ScannerService: void toggle()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.vendor.model.VendorService",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.vendor.model.VendorService: void <init>(android.content.res.Resources)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.vendor.model.VendorService: com.vrem.wifianalyzer.vendor.model.VendorService$VendorData getVendorData()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.vendor.model.VendorService: java.lang.String findVendorName(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.vendor.model.VendorService: java.lang.String findVendorName$default(com.vrem.wifianalyzer.vendor.model.VendorService,java.lang.String,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.vendor.model.VendorService: java.util.List findMacAddresses(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.vendor.model.VendorService: java.util.List findMacAddresses$default(com.vrem.wifianalyzer.vendor.model.VendorService,java.lang.String,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.vendor.model.VendorService: java.util.List findVendors(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.vendor.model.VendorService: java.util.List findVendors$default(com.vrem.wifianalyzer.vendor.model.VendorService,java.lang.String,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.vendor.model.VendorService: java.util.List findMacs$app_debug()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.vendor.model.VendorService: boolean filter(java.lang.String,java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.vendor.model.VendorService: boolean macContains(java.lang.String,java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.vendor.model.VendorService: com.vrem.wifianalyzer.vendor.model.VendorService$VendorData load(android.content.res.Resources)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.vendor.model.VendorService: com.vrem.wifianalyzer.vendor.model.VendorService$VendorData vendorData_delegate$lambda$0(com.vrem.wifianalyzer.vendor.model.VendorService)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.Configuration",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.Configuration: void <init>(boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.Configuration: boolean getLargeScreen()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.Configuration: int getSize()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.Configuration: void setSize(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.Configuration: boolean getSizeAvailable()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.Configuration: void wiFiChannelPair(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.Configuration: kotlin.Pair wiFiChannelPair(com.vrem.wifianalyzer.wifi.band.WiFiBand)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.Configuration: void wiFiChannelPair(com.vrem.wifianalyzer.wifi.band.WiFiBand,kotlin.Pair)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.filter.adapter.FiltersAdapter",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.adapter.FiltersAdapter: void <init>(com.vrem.wifianalyzer.settings.Settings)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.adapter.FiltersAdapter: void reload()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.adapter.FiltersAdapter: void reset()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.adapter.FiltersAdapter: void save()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.adapter.FiltersAdapter: com.vrem.wifianalyzer.wifi.filter.adapter.SSIDAdapter ssidAdapter()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.adapter.FiltersAdapter: com.vrem.wifianalyzer.wifi.filter.adapter.WiFiBandAdapter wiFiBandAdapter()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.adapter.FiltersAdapter: com.vrem.wifianalyzer.wifi.filter.adapter.StrengthAdapter strengthAdapter()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.adapter.FiltersAdapter: com.vrem.wifianalyzer.wifi.filter.adapter.SecurityAdapter securityAdapter()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.adapter.FiltersAdapter: boolean isActive$app_debug()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.adapter.FiltersAdapter: java.util.List filterAdapters$app_debug(boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.adapter.FiltersAdapter: boolean isAccessPoints()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.settings.Settings$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Settings$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Settings$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.settings.Repository",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Repository: void <init>(android.content.Context)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Repository: void initializeDefaultValues()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Repository: void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Repository: void save(int,int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Repository: void save(int,java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Repository: int stringAsInteger(int,int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Repository: java.lang.String string(int,java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Repository: boolean 'boolean'(int,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Repository: boolean resourceBoolean(int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Repository: int integer(int,int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Repository: java.util.Set stringSet(int,java.util.Set)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Repository: void saveStringSet(int,java.util.Set)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Repository: void defaultValues(android.content.Context,int,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Repository: android.content.SharedPreferences defaultSharedPreferences(android.content.Context)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Repository: android.content.SharedPreferences sharedPreferences()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.band.WiFiBand",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiBand: void <init>(java.lang.String,int,int,com.vrem.wifianalyzer.wifi.band.WiFiChannels,kotlin.jvm.functions.Function0)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiBand: int getTextResource()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiBand: com.vrem.wifianalyzer.wifi.band.WiFiChannels getWiFiChannels()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiBand: kotlin.jvm.functions.Function0 getAvailable()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiBand: boolean getGhz2()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiBand: boolean getGhz5()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiBand: boolean getGhz6()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiBand: com.vrem.wifianalyzer.wifi.band.WiFiBand[] values()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiBand: com.vrem.wifianalyzer.wifi.band.WiFiBand valueOf(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiBand: kotlin.enums.EnumEntries getEntries()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiBand: com.vrem.wifianalyzer.wifi.band.WiFiBand[] $values()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiBand: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.SortBy",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.SortBy: void <init>(java.lang.String,int,java.util.Comparator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.SortBy: java.util.Comparator getSort()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.SortBy: com.vrem.wifianalyzer.wifi.model.SortBy[] values()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.SortBy: com.vrem.wifianalyzer.wifi.model.SortBy valueOf(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.SortBy: kotlin.enums.EnumEntries getEntries()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.SortBy: com.vrem.wifianalyzer.wifi.model.SortBy[] $values()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.SortBy: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.GroupBy",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.GroupBy: void <init>(java.lang.String,int,java.util.Comparator,kotlin.jvm.functions.Function1)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.GroupBy: java.util.Comparator getSort()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.GroupBy: kotlin.jvm.functions.Function1 getGroup()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.GroupBy: boolean getNone()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.GroupBy: com.vrem.wifianalyzer.wifi.model.GroupBy[] values()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.GroupBy: com.vrem.wifianalyzer.wifi.model.GroupBy valueOf(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.GroupBy: kotlin.enums.EnumEntries getEntries()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.GroupBy: com.vrem.wifianalyzer.wifi.model.GroupBy[] $values()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.GroupBy: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.accesspoint.AccessPointViewType",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointViewType: void <init>(java.lang.String,int,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointViewType: int getLayout()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointViewType: com.vrem.wifianalyzer.wifi.accesspoint.AccessPointViewType[] values()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointViewType: com.vrem.wifianalyzer.wifi.accesspoint.AccessPointViewType valueOf(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointViewType: kotlin.enums.EnumEntries getEntries()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointViewType: com.vrem.wifianalyzer.wifi.accesspoint.AccessPointViewType[] $values()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointViewType: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.accesspoint.ConnectionViewType",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.ConnectionViewType: void <init>(java.lang.String,int,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.ConnectionViewType: int getLayout()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.ConnectionViewType: boolean getHide()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.ConnectionViewType: com.vrem.wifianalyzer.wifi.accesspoint.ConnectionViewType[] values()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.ConnectionViewType: com.vrem.wifianalyzer.wifi.accesspoint.ConnectionViewType valueOf(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.ConnectionViewType: kotlin.enums.EnumEntries getEntries()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.ConnectionViewType: com.vrem.wifianalyzer.wifi.accesspoint.ConnectionViewType[] $values()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.ConnectionViewType: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.graphutils.GraphLegend",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphLegend: void <init>(java.lang.String,int,kotlin.jvm.functions.Function1)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphLegend: kotlin.jvm.functions.Function1 getLegendDisplay()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphLegend: void display(com.jjoe64.graphview.LegendRenderer)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphLegend: com.vrem.wifianalyzer.wifi.graphutils.GraphLegend[] values()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphLegend: com.vrem.wifianalyzer.wifi.graphutils.GraphLegend valueOf(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphLegend: kotlin.enums.EnumEntries getEntries()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphLegend: com.vrem.wifianalyzer.wifi.graphutils.GraphLegend[] $values()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphLegend: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.settings.ThemeStyle",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.ThemeStyle: void <init>(java.lang.String,int,int,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.ThemeStyle: int getTheme()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.ThemeStyle: int getThemeNoActionBar()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.ThemeStyle: com.vrem.wifianalyzer.settings.ThemeStyle[] values()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.ThemeStyle: com.vrem.wifianalyzer.settings.ThemeStyle valueOf(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.ThemeStyle: kotlin.enums.EnumEntries getEntries()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.ThemeStyle: com.vrem.wifianalyzer.settings.ThemeStyle[] $values()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.ThemeStyle: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.navigation.NavigationMenu",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.NavigationMenu: void <init>(java.lang.String,int,int,int,com.vrem.wifianalyzer.navigation.items.NavigationItem,java.util.List)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.NavigationMenu: void <init>(java.lang.String,int,int,int,com.vrem.wifianalyzer.navigation.items.NavigationItem,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.NavigationMenu: int getIcon()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.NavigationMenu: int getTitle()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.NavigationMenu: com.vrem.wifianalyzer.navigation.items.NavigationItem getNavigationItem()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.NavigationMenu: java.util.List getNavigationOptions()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.NavigationMenu: void activateNavigationMenu(com.vrem.wifianalyzer.MainActivity,android.view.MenuItem)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.NavigationMenu: void activateOptions(com.vrem.wifianalyzer.MainActivity)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.NavigationMenu: boolean wiFiBandSwitchable()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.NavigationMenu: boolean registered()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.NavigationMenu: com.vrem.wifianalyzer.navigation.NavigationMenu[] values()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.NavigationMenu: com.vrem.wifianalyzer.navigation.NavigationMenu valueOf(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.NavigationMenu: kotlin.enums.EnumEntries getEntries()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.NavigationMenu: com.vrem.wifianalyzer.navigation.NavigationMenu[] $values()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.NavigationMenu: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.DrawerNavigation",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.DrawerNavigation: void <init>(com.vrem.wifianalyzer.MainActivity,androidx.appcompat.widget.Toolbar)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.DrawerNavigation: void syncState()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.DrawerNavigation: void onConfigurationChanged(android.content.res.Configuration)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.DrawerNavigation: void create()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.DrawerNavigation: androidx.appcompat.app.ActionBarDrawerToggle createDrawerToggle(androidx.drawerlayout.widget.DrawerLayout)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.MainReload",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.MainReload: void <init>(com.vrem.wifianalyzer.settings.Settings)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainReload: com.vrem.wifianalyzer.settings.ThemeStyle getThemeStyle()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainReload: com.vrem.wifianalyzer.wifi.accesspoint.ConnectionViewType getConnectionViewType()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainReload: java.util.Locale getLanguageLocale()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainReload: boolean shouldReload(com.vrem.wifianalyzer.settings.Settings)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainReload: boolean connectionViewTypeChanged(com.vrem.wifianalyzer.settings.Settings)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainReload: boolean themeChanged(com.vrem.wifianalyzer.settings.Settings)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainReload: boolean languageChanged(com.vrem.wifianalyzer.settings.Settings)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.navigation.NavigationMenuController",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.NavigationMenuController: void <init>(com.vrem.wifianalyzer.navigation.NavigationMenuControl,com.google.android.material.navigation.NavigationView,com.google.android.material.bottomnavigation.BottomNavigationView)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.NavigationMenuController: void <init>(com.vrem.wifianalyzer.navigation.NavigationMenuControl,com.google.android.material.navigation.NavigationView,com.google.android.material.bottomnavigation.BottomNavigationView,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.NavigationMenuController: com.google.android.material.navigation.NavigationView getNavigationView()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.NavigationMenuController: com.google.android.material.bottomnavigation.BottomNavigationView getBottomNavigationView()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.NavigationMenuController: android.view.MenuItem currentMenuItem()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.NavigationMenuController: com.vrem.wifianalyzer.navigation.NavigationMenu currentNavigationMenu()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.NavigationMenuController: void currentNavigationMenu(com.vrem.wifianalyzer.navigation.NavigationMenu)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.NavigationMenuController: void selectCurrentMenuItem(com.vrem.wifianalyzer.navigation.NavigationMenu,android.view.Menu)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.navigation.options.OptionMenu",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.options.OptionMenu: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.options.OptionMenu: android.view.Menu getMenu()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.options.OptionMenu: void setMenu(android.view.Menu)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.options.OptionMenu: void create(android.app.Activity,android.view.Menu)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.options.OptionMenu: void select(android.view.MenuItem)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.options.OptionMenu: void iconsVisible(android.view.Menu)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.accesspoint.ConnectionView",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.ConnectionView: void <init>(com.vrem.wifianalyzer.MainActivity,com.vrem.wifianalyzer.wifi.accesspoint.AccessPointDetail,com.vrem.wifianalyzer.wifi.accesspoint.AccessPointPopup,com.vrem.wifianalyzer.wifi.accesspoint.WarningView)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.ConnectionView: void <init>(com.vrem.wifianalyzer.MainActivity,com.vrem.wifianalyzer.wifi.accesspoint.AccessPointDetail,com.vrem.wifianalyzer.wifi.accesspoint.AccessPointPopup,com.vrem.wifianalyzer.wifi.accesspoint.WarningView,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.ConnectionView: void update(com.vrem.wifianalyzer.wifi.model.WiFiData)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.ConnectionView: void displayWiFiSupport(com.vrem.wifianalyzer.settings.Settings)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.ConnectionView: void displayConnection(com.vrem.wifianalyzer.wifi.model.WiFiData,com.vrem.wifianalyzer.settings.Settings)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.ConnectionView: void setViewConnection(android.view.View,com.vrem.wifianalyzer.wifi.model.WiFiConnection)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.ConnectionView: void attachPopup(android.view.View,com.vrem.wifianalyzer.wifi.model.WiFiDetail)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.scanner.UpdateNotifier",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.UpdateNotifier: void update(com.vrem.wifianalyzer.wifi.model.WiFiData)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.band.WiFiChannels",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannels: void <init>(kotlin.Pair,java.util.List)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannels: boolean inRange(int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannels: com.vrem.wifianalyzer.wifi.band.WiFiChannel wiFiChannelByFrequency(int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannels: com.vrem.wifianalyzer.wifi.band.WiFiChannel wiFiChannelByChannel(int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannels: com.vrem.wifianalyzer.wifi.band.WiFiChannel wiFiChannelFirst()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannels: com.vrem.wifianalyzer.wifi.band.WiFiChannel wiFiChannelLast()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannels: com.vrem.wifianalyzer.wifi.band.WiFiChannel wiFiChannel(int,kotlin.Pair)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannels: java.util.List availableChannels(java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannels: boolean channelAvailable(java.lang.String,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannels: java.util.List wiFiChannelPairs()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannels: kotlin.Pair wiFiChannelPairFirst(java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannels: com.vrem.wifianalyzer.wifi.band.WiFiChannel wiFiChannelByFrequency(int,kotlin.Pair)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannels: java.util.List availableChannels(java.util.Set)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannels: java.util.List wiFiChannels()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannels: java.util.List transform(kotlin.Pair)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannels: kotlin.Pair access$getUNKNOWN$cp()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannels: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.annotation.OpenClass",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": []
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.band.WiFiChannels$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannels$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannels$Companion: kotlin.Pair getUNKNOWN()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannels$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.band.WiFiBand$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiBand$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiBand$Companion: com.vrem.wifianalyzer.wifi.band.WiFiBand find(int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiBand$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.band.WiFiChannel",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "DATA_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannel: void <init>(int,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannel: void <init>(int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannel: int getChannel()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannel: int getFrequency()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannel: boolean inRange(int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannel: int compareTo(com.vrem.wifianalyzer.wifi.band.WiFiChannel)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannel: int component1()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannel: int component2()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannel: com.vrem.wifianalyzer.wifi.band.WiFiChannel copy(int,int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannel: com.vrem.wifianalyzer.wifi.band.WiFiChannel copy$default(com.vrem.wifianalyzer.wifi.band.WiFiChannel,int,int,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannel: java.lang.String toString()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannel: int hashCode()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannel: boolean equals(java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannel: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannel: int compareTo(java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannel: com.vrem.wifianalyzer.wifi.band.WiFiChannel access$getUNKNOWN$cp()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannel: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.ConfigurationKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": []
    },
    {
      "className": "com.vrem.wifianalyzer.export.Export",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.export.Export: void <init>(com.vrem.wifianalyzer.export.ExportIntent)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.export.Export: void <init>(com.vrem.wifianalyzer.export.ExportIntent,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.export.Export: android.content.Intent export(com.vrem.wifianalyzer.MainActivity,java.util.List)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.export.Export: android.content.Intent export(com.vrem.wifianalyzer.MainActivity,java.util.List,java.util.Date)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.export.Export: java.lang.String data$app_debug(android.content.Context,java.util.List,java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.export.Export: java.lang.String title$app_debug(android.content.Context,java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.export.Export: java.lang.String timestamp$app_debug(java.util.Date)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.export.Export: kotlin.jvm.functions.Function1 toExportString(android.content.Context,java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.export.Export: java.lang.String toExportString$lambda$1(java.lang.String,android.content.Context,com.vrem.wifianalyzer.wifi.model.WiFiDetail)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.export.Export: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.export.Export: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.export.Export$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.export.Export$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.export.Export$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.export.ExportIntent",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.export.ExportIntent: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.export.ExportIntent: android.content.Intent intent$app_debug(java.lang.String,java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.export.ExportIntent: android.content.Intent intentSend$app_debug()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.export.ExportIntent: android.content.Intent intentChooser$app_debug(android.content.Intent,java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.WiFiDetail",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "DATA_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiDetail: void <init>(com.vrem.wifianalyzer.wifi.model.WiFiIdentifier,com.vrem.wifianalyzer.wifi.model.WiFiSecurity,com.vrem.wifianalyzer.wifi.model.WiFiSignal,com.vrem.wifianalyzer.wifi.model.WiFiAdditional,java.util.List)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiDetail: void <init>(com.vrem.wifianalyzer.wifi.model.WiFiIdentifier,com.vrem.wifianalyzer.wifi.model.WiFiSecurity,com.vrem.wifianalyzer.wifi.model.WiFiSignal,com.vrem.wifianalyzer.wifi.model.WiFiAdditional,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiDetail: com.vrem.wifianalyzer.wifi.model.WiFiIdentifier getWiFiIdentifier()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiDetail: com.vrem.wifianalyzer.wifi.model.WiFiSecurity getWiFiSecurity()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiDetail: com.vrem.wifianalyzer.wifi.model.WiFiSignal getWiFiSignal()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiDetail: com.vrem.wifianalyzer.wifi.model.WiFiAdditional getWiFiAdditional()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiDetail: java.util.List getChildren()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiDetail: void <init>(com.vrem.wifianalyzer.wifi.model.WiFiDetail,com.vrem.wifianalyzer.wifi.model.WiFiAdditional)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiDetail: void <init>(com.vrem.wifianalyzer.wifi.model.WiFiDetail,java.util.List)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiDetail: boolean getNoChildren()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiDetail: boolean equals(java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiDetail: int hashCode()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiDetail: int compareTo(com.vrem.wifianalyzer.wifi.model.WiFiDetail)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiDetail: com.vrem.wifianalyzer.wifi.model.WiFiIdentifier component1()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiDetail: com.vrem.wifianalyzer.wifi.model.WiFiSecurity component2()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiDetail: com.vrem.wifianalyzer.wifi.model.WiFiSignal component3()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiDetail: com.vrem.wifianalyzer.wifi.model.WiFiAdditional component4()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiDetail: java.util.List component5()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiDetail: com.vrem.wifianalyzer.wifi.model.WiFiDetail copy(com.vrem.wifianalyzer.wifi.model.WiFiIdentifier,com.vrem.wifianalyzer.wifi.model.WiFiSecurity,com.vrem.wifianalyzer.wifi.model.WiFiSignal,com.vrem.wifianalyzer.wifi.model.WiFiAdditional,java.util.List)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiDetail: com.vrem.wifianalyzer.wifi.model.WiFiDetail copy$default(com.vrem.wifianalyzer.wifi.model.WiFiDetail,com.vrem.wifianalyzer.wifi.model.WiFiIdentifier,com.vrem.wifianalyzer.wifi.model.WiFiSecurity,com.vrem.wifianalyzer.wifi.model.WiFiSignal,com.vrem.wifianalyzer.wifi.model.WiFiAdditional,java.util.List,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiDetail: java.lang.String toString()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiDetail: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiDetail: int compareTo(java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiDetail: com.vrem.wifianalyzer.wifi.model.WiFiDetail access$getEMPTY$cp()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiDetail: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.WiFiSignalExtra",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "DATA_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignalExtra: void <init>(boolean,com.vrem.wifianalyzer.wifi.model.WiFiStandard,java.util.List)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignalExtra: void <init>(boolean,com.vrem.wifianalyzer.wifi.model.WiFiStandard,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignalExtra: boolean is80211mc()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignalExtra: com.vrem.wifianalyzer.wifi.model.WiFiStandard getWiFiStandard()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignalExtra: java.util.List getFastRoaming()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignalExtra: java.lang.String wiFiStandardDisplay(android.content.Context)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignalExtra: java.lang.String fastRoamingDisplay(android.content.Context)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignalExtra: boolean component1()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignalExtra: com.vrem.wifianalyzer.wifi.model.WiFiStandard component2()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignalExtra: java.util.List component3()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignalExtra: com.vrem.wifianalyzer.wifi.model.WiFiSignalExtra copy(boolean,com.vrem.wifianalyzer.wifi.model.WiFiStandard,java.util.List)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignalExtra: com.vrem.wifianalyzer.wifi.model.WiFiSignalExtra copy$default(com.vrem.wifianalyzer.wifi.model.WiFiSignalExtra,boolean,com.vrem.wifianalyzer.wifi.model.WiFiStandard,java.util.List,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignalExtra: java.lang.String toString()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignalExtra: int hashCode()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignalExtra: boolean equals(java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignalExtra: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignalExtra: com.vrem.wifianalyzer.wifi.model.WiFiSignalExtra access$getEMPTY$cp()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignalExtra: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.WiFiSecurity",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "DATA_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurity: void <init>(java.lang.String,java.util.List)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurity: void <init>(java.lang.String,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurity: java.lang.String getCapabilities()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurity: java.util.List getSecurityTypes()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurity: com.vrem.wifianalyzer.wifi.model.Security getSecurity()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurity: java.util.Set getSecurities()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurity: java.util.Set getWiFiSecurityTypes()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurity: java.lang.String wiFiSecurityTypesDisplay(android.content.Context)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurity: java.util.Set transformCapabilities()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurity: com.vrem.wifianalyzer.wifi.model.Security transformCapability(java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurity: java.util.Set transformSecurityTypes()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurity: java.lang.String component1()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurity: java.util.List component2()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurity: com.vrem.wifianalyzer.wifi.model.WiFiSecurity copy(java.lang.String,java.util.List)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurity: com.vrem.wifianalyzer.wifi.model.WiFiSecurity copy$default(com.vrem.wifianalyzer.wifi.model.WiFiSecurity,java.lang.String,java.util.List,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurity: java.lang.String toString()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurity: int hashCode()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurity: boolean equals(java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurity: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurity: com.vrem.wifianalyzer.wifi.model.WiFiSecurity access$getEMPTY$cp()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurity: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.WiFiIdentifier",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "DATA_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiIdentifier: void <init>(java.lang.String,java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiIdentifier: void <init>(java.lang.String,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiIdentifier: java.lang.String getSsidRaw()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiIdentifier: java.lang.String getBssid()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiIdentifier: java.lang.String getSsid()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiIdentifier: java.lang.String getTitle()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiIdentifier: boolean equals(com.vrem.wifianalyzer.wifi.model.WiFiIdentifier,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiIdentifier: boolean equals$default(com.vrem.wifianalyzer.wifi.model.WiFiIdentifier,com.vrem.wifianalyzer.wifi.model.WiFiIdentifier,boolean,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiIdentifier: int compareTo(com.vrem.wifianalyzer.wifi.model.WiFiIdentifier)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiIdentifier: java.lang.String component1()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiIdentifier: java.lang.String component2()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiIdentifier: com.vrem.wifianalyzer.wifi.model.WiFiIdentifier copy(java.lang.String,java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiIdentifier: com.vrem.wifianalyzer.wifi.model.WiFiIdentifier copy$default(com.vrem.wifianalyzer.wifi.model.WiFiIdentifier,java.lang.String,java.lang.String,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiIdentifier: java.lang.String toString()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiIdentifier: int hashCode()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiIdentifier: boolean equals(java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiIdentifier: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiIdentifier: int compareTo(java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiIdentifier: com.vrem.wifianalyzer.wifi.model.WiFiIdentifier access$getEMPTY$cp()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiIdentifier: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.WiFiWidth",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiWidth: void <init>(java.lang.String,int,int,int,int,kotlin.jvm.functions.Function2)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiWidth: int getChannelWidth()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiWidth: int getFrequencyWidth()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiWidth: int getGuardBand()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiWidth: kotlin.jvm.functions.Function2 getCalculateCenter()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiWidth: int getFrequencyWidthHalf()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiWidth: com.vrem.wifianalyzer.wifi.model.WiFiWidth[] values()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiWidth: com.vrem.wifianalyzer.wifi.model.WiFiWidth valueOf(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiWidth: kotlin.enums.EnumEntries getEntries()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiWidth: com.vrem.wifianalyzer.wifi.model.WiFiWidth[] $values()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiWidth: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.WiFiSignal",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "DATA_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignal: void <init>(int,int,com.vrem.wifianalyzer.wifi.model.WiFiWidth,int,com.vrem.wifianalyzer.wifi.model.WiFiSignalExtra)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignal: void <init>(int,int,com.vrem.wifianalyzer.wifi.model.WiFiWidth,int,com.vrem.wifianalyzer.wifi.model.WiFiSignalExtra,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignal: int getPrimaryFrequency()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignal: int getCenterFrequency()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignal: com.vrem.wifianalyzer.wifi.model.WiFiWidth getWiFiWidth()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignal: int getLevel()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignal: com.vrem.wifianalyzer.wifi.model.WiFiSignalExtra getExtra()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignal: com.vrem.wifianalyzer.wifi.band.WiFiBand getWiFiBand()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignal: int getFrequencyStart()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignal: int getFrequencyEnd()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignal: com.vrem.wifianalyzer.wifi.band.WiFiChannel getPrimaryWiFiChannel()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignal: com.vrem.wifianalyzer.wifi.band.WiFiChannel getCenterWiFiChannel()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignal: com.vrem.wifianalyzer.wifi.model.Strength getStrength()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignal: java.lang.String getDistance()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignal: boolean inRange(int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignal: java.lang.String channelDisplay()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignal: boolean equals(java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignal: int hashCode()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignal: int component1()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignal: int component2()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignal: com.vrem.wifianalyzer.wifi.model.WiFiWidth component3()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignal: int component4()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignal: com.vrem.wifianalyzer.wifi.model.WiFiSignalExtra component5()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignal: com.vrem.wifianalyzer.wifi.model.WiFiSignal copy(int,int,com.vrem.wifianalyzer.wifi.model.WiFiWidth,int,com.vrem.wifianalyzer.wifi.model.WiFiSignalExtra)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignal: com.vrem.wifianalyzer.wifi.model.WiFiSignal copy$default(com.vrem.wifianalyzer.wifi.model.WiFiSignal,int,int,com.vrem.wifianalyzer.wifi.model.WiFiWidth,int,com.vrem.wifianalyzer.wifi.model.WiFiSignalExtra,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignal: java.lang.String toString()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignal: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignal: com.vrem.wifianalyzer.wifi.model.WiFiSignal access$getEMPTY$cp()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignal: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.WiFiSignalExtra$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignalExtra$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignalExtra$Companion: com.vrem.wifianalyzer.wifi.model.WiFiSignalExtra getEMPTY()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignalExtra$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.WiFiStandard",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiStandard: void <init>(java.lang.String,int,int,int,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiStandard: int getWiFiStandardId()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiStandard: int getFullResource()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiStandard: int getValueResource()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiStandard: com.vrem.wifianalyzer.wifi.model.WiFiStandard[] values()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiStandard: com.vrem.wifianalyzer.wifi.model.WiFiStandard valueOf(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiStandard: kotlin.enums.EnumEntries getEntries()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiStandard: com.vrem.wifianalyzer.wifi.model.WiFiStandard[] $values()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiStandard: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.WiFiSecurity$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurity$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurity$Companion: com.vrem.wifianalyzer.wifi.model.WiFiSecurity getEMPTY()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurity$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.Security",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.Security: void <init>(java.lang.String,int,int,java.util.List)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.Security: void <init>(java.lang.String,int,int,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.Security: int getImageResource()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.Security: java.util.List getExtras()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.Security: com.vrem.wifianalyzer.wifi.model.Security[] values()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.Security: com.vrem.wifianalyzer.wifi.model.Security valueOf(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.Security: kotlin.enums.EnumEntries getEntries()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.Security: com.vrem.wifianalyzer.wifi.model.Security[] $values()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.Security: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.WiFiDetail$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiDetail$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiDetail$Companion: com.vrem.wifianalyzer.wifi.model.WiFiDetail getEMPTY()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiDetail$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.WiFiAdditional",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiAdditional: void <init>(java.lang.String,com.vrem.wifianalyzer.wifi.model.WiFiConnection)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiAdditional: void <init>(java.lang.String,com.vrem.wifianalyzer.wifi.model.WiFiConnection,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiAdditional: java.lang.String getVendorName()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiAdditional: com.vrem.wifianalyzer.wifi.model.WiFiConnection getWiFiConnection()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiAdditional: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiAdditional: com.vrem.wifianalyzer.wifi.model.WiFiAdditional access$getEMPTY$cp()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiAdditional: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.WiFiIdentifier$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiIdentifier$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiIdentifier$Companion: com.vrem.wifianalyzer.wifi.model.WiFiIdentifier getEMPTY()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiIdentifier$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.WiFiWidth$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiWidth$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiWidth$Companion: com.vrem.wifianalyzer.wifi.model.WiFiWidth findOne(int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiWidth$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.band.WiFiChannel$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannel$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannel$Companion: com.vrem.wifianalyzer.wifi.band.WiFiChannel getUNKNOWN()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannel$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.WiFiSignal$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignal$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignal$Companion: com.vrem.wifianalyzer.wifi.model.WiFiSignal getEMPTY()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSignal$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.Strength",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.Strength: void <init>(java.lang.String,int,int,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.Strength: int getImageResource()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.Strength: int getColorResource()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.Strength: boolean weak()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.Strength: com.vrem.wifianalyzer.wifi.model.Strength[] values()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.Strength: com.vrem.wifianalyzer.wifi.model.Strength valueOf(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.Strength: kotlin.enums.EnumEntries getEntries()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.Strength: com.vrem.wifianalyzer.wifi.model.Strength[] $values()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.Strength: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.settings.Data$compareTo$$inlined$thenBy$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Data$compareTo$$inlined$thenBy$1: void <init>(java.util.Comparator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Data$compareTo$$inlined$thenBy$1: int compare(java.lang.Object,java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.settings.Data",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "DATA_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Data: void <init>(java.lang.String,java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Data: java.lang.String getCode()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Data: java.lang.String getName()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Data: int compareTo(com.vrem.wifianalyzer.settings.Data)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Data: java.lang.String component1()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Data: java.lang.String component2()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Data: com.vrem.wifianalyzer.settings.Data copy(java.lang.String,java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Data: com.vrem.wifianalyzer.settings.Data copy$default(com.vrem.wifianalyzer.settings.Data,java.lang.String,java.lang.String,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Data: java.lang.String toString()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Data: int hashCode()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Data: boolean equals(java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Data: int compareTo(java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.settings.Data$compareTo$$inlined$compareBy$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Data$compareTo$$inlined$compareBy$1: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.Data$compareTo$$inlined$compareBy$1: int compare(java.lang.Object,java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.navigation.NavigationGroup",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.NavigationGroup: void <init>(java.lang.String,int,java.util.List)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.NavigationGroup: java.util.List getNavigationMenus()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.NavigationGroup: com.vrem.wifianalyzer.navigation.NavigationMenu next(com.vrem.wifianalyzer.navigation.NavigationMenu)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.NavigationGroup: com.vrem.wifianalyzer.navigation.NavigationMenu previous(com.vrem.wifianalyzer.navigation.NavigationMenu)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.NavigationGroup: void populateMenuItems(android.view.Menu)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.NavigationGroup: com.vrem.wifianalyzer.navigation.NavigationGroup[] values()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.NavigationGroup: com.vrem.wifianalyzer.navigation.NavigationGroup valueOf(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.NavigationGroup: kotlin.enums.EnumEntries getEntries()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.NavigationGroup: com.vrem.wifianalyzer.navigation.NavigationGroup[] $values()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.NavigationGroup: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.navigation.items.NavigationItem",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.items.NavigationItem: void activate(com.vrem.wifianalyzer.MainActivity,android.view.MenuItem,com.vrem.wifianalyzer.navigation.NavigationMenu)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.items.NavigationItem: boolean getRegistered()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.items.NavigationItem: int getVisibility()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.Strength$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.Strength$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.Strength$Companion: com.vrem.wifianalyzer.wifi.model.Strength calculate(int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.Strength$Companion: com.vrem.wifianalyzer.wifi.model.Strength reverse(com.vrem.wifianalyzer.wifi.model.Strength)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.Strength$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.settings.CustomPreference",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.CustomPreference: void <init>(android.content.Context,android.util.AttributeSet,java.util.List,java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.CustomPreference: java.lang.CharSequence[] codes(java.util.List)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.CustomPreference: java.lang.CharSequence[] names(java.util.List)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.settings.SettingsFragment",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.SettingsFragment: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.SettingsFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.settings.CountryPreference",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.CountryPreference: void <init>(android.content.Context,android.util.AttributeSet)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.settings.CountryPreferenceKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.CountryPreferenceKt: java.util.List data()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.CountryPreferenceKt: java.util.List access$data()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.settings.LanguagePreference",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.LanguagePreference: void <init>(android.content.Context,android.util.AttributeSet)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.settings.LanguagePreferenceKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.LanguagePreferenceKt: java.util.List data()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.LanguagePreferenceKt: com.vrem.wifianalyzer.settings.Data map(java.util.Locale)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.LanguagePreferenceKt: java.util.List access$data()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.band.WiFiChannelCountry$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelCountry$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelCountry$Companion: com.vrem.wifianalyzer.wifi.band.WiFiChannelCountry find(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelCountry$Companion: java.util.List findAll()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelCountry$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.band.WiFiChannelCountry",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelCountry: void <init>(java.util.Locale)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelCountry: java.lang.String countryCode()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelCountry: java.lang.String countryName(java.util.Locale)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelCountry: java.util.SortedSet channelsGHZ2()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelCountry: java.util.SortedSet channelsGHZ5()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelCountry: java.util.SortedSet channelsGHZ6()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelCountry: boolean channelAvailableGHZ2(int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelCountry: boolean channelAvailableGHZ5(int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelCountry: boolean channelAvailableGHZ6(int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelCountry: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.band.WiFiChannelCountryGHZ2",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelCountryGHZ2: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelCountryGHZ2: java.util.SortedSet findChannels(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.band.WiFiChannelCountryGHZ5",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelCountryGHZ5: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelCountryGHZ5: java.util.SortedSet findChannels(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.band.WiFiChannelCountryGHZ6",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelCountryGHZ6: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelCountryGHZ6: java.util.SortedSet findChannels()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.settings.SharedPreferencesKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.settings.SharedPreferencesKt: void edit(android.content.SharedPreferences,kotlin.jvm.functions.Function1)>",
          "methodType": "NEED_BUT_UNABLE",
          "methodReason": "UNSUPPORTED_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.scanner.ScannerServiceKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.ScannerServiceKt: com.vrem.wifianalyzer.wifi.scanner.ScannerService makeScannerService(com.vrem.wifianalyzer.MainActivity,com.vrem.wifianalyzer.wifi.manager.WiFiManagerWrapper,android.os.Handler,com.vrem.wifianalyzer.settings.Settings)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.permission.ApplicationPermission",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.permission.ApplicationPermission: void <init>(android.app.Activity,com.vrem.wifianalyzer.permission.PermissionDialog)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.permission.ApplicationPermission: void <init>(android.app.Activity,com.vrem.wifianalyzer.permission.PermissionDialog,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.permission.ApplicationPermission: void check()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.permission.ApplicationPermission: boolean granted(int,int[])>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.permission.ApplicationPermission: boolean granted()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.permission.ApplicationPermission: boolean granted(java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.permission.ApplicationPermission: java.lang.String[] access$getPERMISSIONS$cp()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.permission.ApplicationPermission: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.manager.WiFiSwitch",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.manager.WiFiSwitch: void <init>(android.net.wifi.WifiManager)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.manager.WiFiSwitch: boolean on()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.manager.WiFiSwitch: boolean off()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.manager.WiFiSwitch: void startWiFiSettings()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.manager.WiFiSwitch: boolean minVersionQ()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.manager.WiFiSwitch: boolean enable(boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.manager.WiFiSwitch: boolean enableWiFiAndroidQ()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.manager.WiFiSwitch: boolean enableWiFiLegacy(boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.permission.LocationPermission",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.permission.LocationPermission: void <init>(android.app.Activity)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.permission.LocationPermission: boolean enabled()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.permission.LocationPermission: boolean gpsProviderEnabled(android.location.LocationManager)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.permission.LocationPermission: boolean networkProviderEnabled(android.location.LocationManager)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.permission.LocationPermission: boolean locationEnabled(android.location.LocationManager)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.WiFiData",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiData: void <init>(java.util.List,com.vrem.wifianalyzer.wifi.model.WiFiConnection)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiData: java.util.List getWiFiDetails()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiData: com.vrem.wifianalyzer.wifi.model.WiFiConnection getWiFiConnection()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiData: com.vrem.wifianalyzer.wifi.model.WiFiDetail connection()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiData: java.util.List wiFiDetails(kotlin.jvm.functions.Function1,com.vrem.wifianalyzer.wifi.model.SortBy)>",
          "methodType": "NEED_BUT_UNABLE",
          "methodReason": "UNSUPPORTED_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiData: java.util.List wiFiDetails(kotlin.jvm.functions.Function1,com.vrem.wifianalyzer.wifi.model.SortBy,com.vrem.wifianalyzer.wifi.model.GroupBy)>",
          "methodType": "NEED_BUT_UNABLE",
          "methodReason": "UNSUPPORTED_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiData: java.util.List sortAndGroup(java.util.List,com.vrem.wifianalyzer.wifi.model.SortBy,com.vrem.wifianalyzer.wifi.model.GroupBy)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiData: kotlin.jvm.functions.Function1 map(com.vrem.wifianalyzer.wifi.model.SortBy,com.vrem.wifianalyzer.wifi.model.GroupBy)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiData: com.vrem.wifianalyzer.wifi.model.WiFiDetail transform(com.vrem.wifianalyzer.wifi.model.WiFiDetail,com.vrem.wifianalyzer.wifi.model.WiFiDetail)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiData: boolean connected(com.vrem.wifianalyzer.wifi.model.WiFiDetail)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiData: com.vrem.wifianalyzer.wifi.model.WiFiDetail copy(com.vrem.wifianalyzer.wifi.model.WiFiDetail)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiData: com.vrem.wifianalyzer.wifi.model.WiFiDetail map$lambda$5(com.vrem.wifianalyzer.wifi.model.GroupBy,com.vrem.wifianalyzer.wifi.model.SortBy,java.util.List)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiData: com.vrem.wifianalyzer.wifi.model.WiFiData access$getEMPTY$cp()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiData: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.vendor.model.VendorService$VendorData",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.vendor.model.VendorService$VendorData: void <init>(java.util.Map,java.util.Map)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.vendor.model.VendorService$VendorData: java.util.Map getVendors()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.vendor.model.VendorService$VendorData: java.util.Map getMacs()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.filter.adapter.SSIDAdapter",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.adapter.SSIDAdapter: void <init>(java.util.Set)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.adapter.SSIDAdapter: java.util.Set getSelections()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.adapter.SSIDAdapter: void setSelections(java.util.Set)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.adapter.SSIDAdapter: boolean isActive()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.adapter.SSIDAdapter: void reset()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.adapter.SSIDAdapter: void save(com.vrem.wifianalyzer.settings.Settings)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.filter.adapter.WiFiBandAdapter",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.adapter.WiFiBandAdapter: void <init>(java.util.Set)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.adapter.WiFiBandAdapter: void save(com.vrem.wifianalyzer.settings.Settings)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.filter.adapter.StrengthAdapter",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.adapter.StrengthAdapter: void <init>(java.util.Set)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.adapter.StrengthAdapter: int color(com.vrem.wifianalyzer.wifi.model.Strength)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.adapter.StrengthAdapter: void save(com.vrem.wifianalyzer.settings.Settings)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.adapter.StrengthAdapter: int color(java.lang.Enum)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.filter.adapter.SecurityAdapter",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.adapter.SecurityAdapter: void <init>(java.util.Set)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.adapter.SecurityAdapter: void save(com.vrem.wifianalyzer.settings.Settings)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.permission.ApplicationPermission$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.permission.ApplicationPermission$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.permission.ApplicationPermission$Companion: java.lang.String[] getPERMISSIONS$app_debug()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.permission.ApplicationPermission$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.permission.PermissionDialog",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.permission.PermissionDialog: void <init>(android.app.Activity)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.permission.PermissionDialog: android.view.View show()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.filter.adapter.BasicFilterAdapter",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.adapter.BasicFilterAdapter: void <init>(java.util.Set)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.adapter.BasicFilterAdapter: java.util.Set getSelections()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.adapter.BasicFilterAdapter: void setSelections(java.util.Set)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.adapter.BasicFilterAdapter: void selections(java.util.Set)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.adapter.BasicFilterAdapter: boolean isActive()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.adapter.BasicFilterAdapter: void reset()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.adapter.BasicFilterAdapter: void save(com.vrem.wifianalyzer.settings.Settings)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.filter.adapter.EnumFilterAdapter",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.adapter.EnumFilterAdapter: void <init>(java.util.Set,kotlin.enums.EnumEntries)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.adapter.EnumFilterAdapter: kotlin.enums.EnumEntries getDefaults()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.adapter.EnumFilterAdapter: boolean isActive()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.adapter.EnumFilterAdapter: boolean toggle(java.lang.Enum)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.adapter.EnumFilterAdapter: void reset()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.adapter.EnumFilterAdapter: int color(java.lang.Enum)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.adapter.EnumFilterAdapter: boolean contains(java.lang.Enum)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.predicate.PredicateKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.predicate.PredicateKt: kotlin.jvm.functions.Function1 getTruePredicate()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.predicate.PredicateKt: kotlin.jvm.functions.Function1 getFalsePredicate()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.predicate.PredicateKt: kotlin.jvm.functions.Function1 anyPredicate(java.util.List)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.predicate.PredicateKt: kotlin.jvm.functions.Function1 allPredicate(java.util.List)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.predicate.PredicateKt: kotlin.jvm.functions.Function1 predicate(com.vrem.wifianalyzer.wifi.band.WiFiBand)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.predicate.PredicateKt: kotlin.jvm.functions.Function1 predicate(com.vrem.wifianalyzer.wifi.model.Strength)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.predicate.PredicateKt: kotlin.jvm.functions.Function1 predicate(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.predicate.PredicateKt: kotlin.jvm.functions.Function1 predicate(com.vrem.wifianalyzer.wifi.model.Security)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.predicate.PredicateKt: kotlin.jvm.functions.Function1 ssidPredicate(java.util.Set)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.predicate.PredicateKt: kotlin.jvm.functions.Function1 makePredicate(kotlin.enums.EnumEntries,java.util.Set,kotlin.jvm.functions.Function1)>",
          "methodType": "NEED_BUT_UNABLE",
          "methodReason": "UNSUPPORTED_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.predicate.PredicateKt: java.util.List predicates(com.vrem.wifianalyzer.settings.Settings,java.util.Set)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.predicate.PredicateKt: kotlin.jvm.functions.Function1 makeAccessPointsPredicate(com.vrem.wifianalyzer.settings.Settings)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.predicate.PredicateKt: kotlin.jvm.functions.Function1 makeOtherPredicate(com.vrem.wifianalyzer.settings.Settings)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.predicate.PredicateKt: boolean truePredicate$lambda$0(com.vrem.wifianalyzer.wifi.model.WiFiDetail)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.predicate.PredicateKt: boolean falsePredicate$lambda$1(com.vrem.wifianalyzer.wifi.model.WiFiDetail)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.predicate.PredicateKt: boolean anyPredicate$lambda$3(java.util.List,com.vrem.wifianalyzer.wifi.model.WiFiDetail)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.predicate.PredicateKt: boolean allPredicate$lambda$5(java.util.List,com.vrem.wifianalyzer.wifi.model.WiFiDetail)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.predicate.PredicateKt: boolean predicate$lambda$6(com.vrem.wifianalyzer.wifi.band.WiFiBand,com.vrem.wifianalyzer.wifi.model.WiFiDetail)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.predicate.PredicateKt: boolean predicate$lambda$7(com.vrem.wifianalyzer.wifi.model.Strength,com.vrem.wifianalyzer.wifi.model.WiFiDetail)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.predicate.PredicateKt: boolean predicate$lambda$8(java.lang.String,com.vrem.wifianalyzer.wifi.model.WiFiDetail)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.predicate.PredicateKt: boolean predicate$lambda$9(com.vrem.wifianalyzer.wifi.model.Security,com.vrem.wifianalyzer.wifi.model.WiFiDetail)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.predicate.PredicateKt: kotlin.jvm.functions.Function1 predicates$lambda$12(com.vrem.wifianalyzer.wifi.band.WiFiBand)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.predicate.PredicateKt: kotlin.jvm.functions.Function1 predicates$lambda$13(com.vrem.wifianalyzer.wifi.model.Strength)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.predicate.PredicateKt: kotlin.jvm.functions.Function1 predicates$lambda$14(com.vrem.wifianalyzer.wifi.model.Security)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.predicate.PredicateKt: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.channelavailable.ChannelAvailableAdapterBinding",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelavailable.ChannelAvailableAdapterBinding: android.view.View getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelavailable.ChannelAvailableAdapterBinding: android.widget.TextView getChannelAvailableCountry()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelavailable.ChannelAvailableAdapterBinding: android.widget.TextView getChannelAvailableTitleGhz2()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelavailable.ChannelAvailableAdapterBinding: android.widget.TextView getChannelAvailableGhz2()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelavailable.ChannelAvailableAdapterBinding: android.widget.TextView getChannelAvailableTitleGhz5()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelavailable.ChannelAvailableAdapterBinding: android.widget.TextView getChannelAvailableGhz5()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelavailable.ChannelAvailableAdapterBinding: android.widget.TextView getChannelAvailableTitleGhz6()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelavailable.ChannelAvailableAdapterBinding: android.widget.TextView getChannelAvailableGhz6()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelavailable.ChannelAvailableAdapterBinding: void <init>(com.vrem.wifianalyzer.databinding.ChannelAvailableDetailsBinding)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelavailable.ChannelAvailableAdapterBinding: void <init>(android.view.View)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.channelavailable.ChannelAvailableFragment",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelavailable.ChannelAvailableFragment: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelavailable.ChannelAvailableFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelavailable.ChannelAvailableFragment: void onResume()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelavailable.ChannelAvailableFragment: java.util.List channelAvailable()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.channelavailable.ChannelAvailableAdapter",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelavailable.ChannelAvailableAdapter: void <init>(android.content.Context,java.util.List)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelavailable.ChannelAvailableAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelavailable.ChannelAvailableAdapter: com.vrem.wifianalyzer.databinding.ChannelAvailableDetailsBinding create(android.view.ViewGroup)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.filter.Filter$Reset",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.Filter$Reset: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.Filter$Reset: void onClick(android.content.DialogInterface,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.filter.Filter",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.Filter: void <init>(android.app.AlertDialog)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.Filter: android.app.AlertDialog getAlertDialog()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.Filter: com.vrem.wifianalyzer.wifi.filter.WiFiBandFilter getWiFiBandFilter$app_debug()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.Filter: com.vrem.wifianalyzer.wifi.filter.StrengthFilter getStrengthFilter$app_debug()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.Filter: com.vrem.wifianalyzer.wifi.filter.SecurityFilter getSecurityFilter$app_debug()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.Filter: void show()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.Filter: com.vrem.wifianalyzer.wifi.filter.SSIDFilter addSSIDFilter(android.app.AlertDialog)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.Filter: com.vrem.wifianalyzer.wifi.filter.WiFiBandFilter addWiFiBandFilter(android.app.AlertDialog)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.Filter: com.vrem.wifianalyzer.wifi.filter.StrengthFilter addStrengthFilter(android.app.AlertDialog)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.Filter: com.vrem.wifianalyzer.wifi.filter.SecurityFilter addSecurityFilter(android.app.AlertDialog)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.Filter: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.filter.Filter$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.Filter$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.Filter$Companion: com.vrem.wifianalyzer.wifi.filter.Filter build()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.Filter$Companion: android.app.AlertDialog buildAlertDialog()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.Filter$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.filter.SSIDFilter",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.SSIDFilter: void <init>(com.vrem.wifianalyzer.wifi.filter.adapter.SSIDAdapter,android.app.AlertDialog)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.filter.WiFiBandFilter",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.WiFiBandFilter: void <init>(com.vrem.wifianalyzer.wifi.filter.adapter.WiFiBandAdapter,android.app.AlertDialog)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.filter.StrengthFilter",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.StrengthFilter: void <init>(com.vrem.wifianalyzer.wifi.filter.adapter.StrengthAdapter,android.app.AlertDialog)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.filter.SecurityFilter",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.SecurityFilter: void <init>(com.vrem.wifianalyzer.wifi.filter.adapter.SecurityAdapter,android.app.AlertDialog)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.filter.EnumFilter",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.EnumFilter: void <init>(java.util.Map,com.vrem.wifianalyzer.wifi.filter.adapter.EnumFilterAdapter,android.app.AlertDialog,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.EnumFilter: java.util.Map getIds$app_debug()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.EnumFilter: void setColor(android.view.View,java.lang.Enum)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.EnumFilter: void process(android.app.AlertDialog,int,java.lang.Enum)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.EnumFilter: void onClickListener(java.lang.Enum,android.view.View)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.EnumFilter: void process$lambda$3(com.vrem.wifianalyzer.wifi.filter.EnumFilter,java.lang.Enum,android.view.View)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.filter.SSIDFilter$OnChange",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.SSIDFilter$OnChange: void <init>(com.vrem.wifianalyzer.wifi.filter.adapter.SSIDAdapter)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.SSIDFilter$OnChange: void beforeTextChanged(java.lang.CharSequence,int,int,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.SSIDFilter$OnChange: void onTextChanged(java.lang.CharSequence,int,int,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.SSIDFilter$OnChange: void afterTextChanged(android.text.Editable)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.filter.Filter$Close",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.Filter$Close: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.Filter$Close: void onClick(android.content.DialogInterface,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.filter.Filter$Apply",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.Filter$Apply: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.filter.Filter$Apply: void onClick(android.content.DialogInterface,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.accesspoint.AccessPointDetail",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointDetail: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointDetail: android.view.View makeView(android.view.View,android.view.ViewGroup,com.vrem.wifianalyzer.wifi.model.WiFiDetail,boolean,int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointDetail: android.view.View makeView$default(com.vrem.wifianalyzer.wifi.accesspoint.AccessPointDetail,android.view.View,android.view.ViewGroup,com.vrem.wifianalyzer.wifi.model.WiFiDetail,boolean,int,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointDetail: android.view.View makeViewDetailed(com.vrem.wifianalyzer.wifi.model.WiFiDetail)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointDetail: kotlin.Unit enableTextSelection(android.view.View)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointDetail: kotlin.Unit setViewCompact(android.view.View,com.vrem.wifianalyzer.wifi.model.WiFiDetail,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointDetail: kotlin.Unit setSecurityImage(android.view.View,com.vrem.wifianalyzer.wifi.model.WiFiDetail)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointDetail: kotlin.Unit setViewExtra(android.view.View,com.vrem.wifianalyzer.wifi.model.WiFiDetail)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointDetail: kotlin.Unit setWiFiStandardImage(android.view.View,com.vrem.wifianalyzer.wifi.model.WiFiSignal)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointDetail: kotlin.Unit setLevelText(android.view.View,com.vrem.wifianalyzer.wifi.model.WiFiSignal)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointDetail: kotlin.Unit setLevelImage(android.view.View,com.vrem.wifianalyzer.wifi.model.WiFiSignal)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointDetail: kotlin.Unit setViewVendorShort(android.view.View,com.vrem.wifianalyzer.wifi.model.WiFiAdditional)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointDetail: kotlin.Unit setViewCapabilitiesLong(android.view.View,com.vrem.wifianalyzer.wifi.model.WiFiSecurity)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointDetail: kotlin.Unit setViewSecurityTypes(android.view.View,com.vrem.wifianalyzer.wifi.model.WiFiSecurity)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointDetail: kotlin.Unit setViewVendorLong(android.view.View,com.vrem.wifianalyzer.wifi.model.WiFiAdditional)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointDetail: kotlin.Unit setViewWiFiBand(android.view.View,com.vrem.wifianalyzer.wifi.model.WiFiSignal)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointDetail: kotlin.Unit setViewFastRoaming(android.view.View,com.vrem.wifianalyzer.wifi.model.WiFiSignal)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointDetail: kotlin.Unit setViewWiFiStandard(android.view.View,com.vrem.wifianalyzer.wifi.model.WiFiSignal)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointDetail: kotlin.Unit setView80211mc(android.view.View,com.vrem.wifianalyzer.wifi.model.WiFiSignal)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.accesspoint.AccessPointPopup",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointPopup: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointPopup: android.app.AlertDialog show(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointPopup: void attach(android.view.View,com.vrem.wifianalyzer.wifi.model.WiFiDetail)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointPopup: void show$lambda$0(android.content.DialogInterface,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointPopup: void attach$lambda$1(com.vrem.wifianalyzer.wifi.accesspoint.AccessPointPopup,com.vrem.wifianalyzer.wifi.model.WiFiDetail,android.view.View)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.accesspoint.WarningView",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.WarningView: void <init>(com.vrem.wifianalyzer.MainActivity)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.WarningView: boolean update(com.vrem.wifianalyzer.wifi.model.WiFiData)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.WarningView: void throttling$app_debug(boolean,com.vrem.wifianalyzer.wifi.manager.WiFiManagerWrapper)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.WarningView: boolean noData$app_debug(boolean,java.util.List)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.WarningView: boolean noLocation$app_debug(boolean,com.vrem.wifianalyzer.permission.PermissionService)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.WiFiConnection",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "DATA_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiConnection: void <init>(com.vrem.wifianalyzer.wifi.model.WiFiIdentifier,java.lang.String,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiConnection: void <init>(com.vrem.wifianalyzer.wifi.model.WiFiIdentifier,java.lang.String,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiConnection: com.vrem.wifianalyzer.wifi.model.WiFiIdentifier getWiFiIdentifier()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiConnection: java.lang.String getIpAddress()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiConnection: int getLinkSpeed()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiConnection: boolean getConnected()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiConnection: boolean equals(java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiConnection: int hashCode()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiConnection: int compareTo(com.vrem.wifianalyzer.wifi.model.WiFiConnection)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiConnection: com.vrem.wifianalyzer.wifi.model.WiFiIdentifier component1()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiConnection: java.lang.String component2()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiConnection: int component3()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiConnection: com.vrem.wifianalyzer.wifi.model.WiFiConnection copy(com.vrem.wifianalyzer.wifi.model.WiFiIdentifier,java.lang.String,int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiConnection: com.vrem.wifianalyzer.wifi.model.WiFiConnection copy$default(com.vrem.wifianalyzer.wifi.model.WiFiConnection,com.vrem.wifianalyzer.wifi.model.WiFiIdentifier,java.lang.String,int,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiConnection: java.lang.String toString()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiConnection: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiConnection: int compareTo(java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiConnection: com.vrem.wifianalyzer.wifi.model.WiFiConnection access$getEMPTY$cp()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiConnection: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.WiFiData$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiData$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiData$Companion: com.vrem.wifianalyzer.wifi.model.WiFiData getEMPTY()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiData$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.WiFiConnection$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiConnection$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiConnection$Companion: com.vrem.wifianalyzer.wifi.model.WiFiConnection getEMPTY()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiConnection$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.WiFiAdditional$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiAdditional$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiAdditional$Companion: com.vrem.wifianalyzer.wifi.model.WiFiAdditional getEMPTY()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiAdditional$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapterData",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapterData: void <init>(com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapterGroup,java.util.List)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapterData: void <init>(com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapterGroup,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapterData: java.util.List getWiFiDetails()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapterData: void update(com.vrem.wifianalyzer.wifi.model.WiFiData,android.widget.ExpandableListView)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapterData: int parentsCount()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapterData: com.vrem.wifianalyzer.wifi.model.WiFiDetail parent(int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapterData: int childrenCount(int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapterData: com.vrem.wifianalyzer.wifi.model.WiFiDetail child(int,int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapterData: void onGroupCollapsed(int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapterData: void onGroupExpanded(int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapterData: int calculateChildType()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapterData: int type(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapterData: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapterGroup",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapterGroup: void <init>(java.util.Set,com.vrem.wifianalyzer.wifi.model.GroupBy)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapterGroup: void <init>(java.util.Set,com.vrem.wifianalyzer.wifi.model.GroupBy,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapterGroup: java.util.Set getExpanded()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapterGroup: com.vrem.wifianalyzer.wifi.model.GroupBy getGroupBy()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapterGroup: void setGroupBy(com.vrem.wifianalyzer.wifi.model.GroupBy)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapterGroup: void update(java.util.List,android.widget.ExpandableListView)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapterGroup: void updateGroupBy()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapterGroup: void onGroupCollapsed(java.util.List,int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapterGroup: void onGroupExpanded(java.util.List,int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapterGroup: void toggle(java.util.List,android.widget.ExpandableListView)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapterGroup: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapter",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapter: void <init>(com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapterData,com.vrem.wifianalyzer.wifi.accesspoint.AccessPointDetail,com.vrem.wifianalyzer.wifi.accesspoint.AccessPointPopup)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapter: void <init>(com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapterData,com.vrem.wifianalyzer.wifi.accesspoint.AccessPointDetail,com.vrem.wifianalyzer.wifi.accesspoint.AccessPointPopup,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapter: android.widget.ExpandableListView getExpandableListView()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapter: void setExpandableListView(android.widget.ExpandableListView)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapter: android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapter: android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapter: void update(com.vrem.wifianalyzer.wifi.model.WiFiData)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapter: int getGroupCount()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapter: int getChildrenCount(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapter: com.vrem.wifianalyzer.wifi.model.WiFiDetail getGroup(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapter: com.vrem.wifianalyzer.wifi.model.WiFiDetail getChild(int,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapter: long getGroupId(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapter: long getChildId(int,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapter: boolean hasStableIds()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapter: boolean isChildSelectable(int,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapter: void onGroupCollapsed(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapter: void onGroupExpanded(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapter: void attachPopup(android.view.View,com.vrem.wifianalyzer.wifi.model.WiFiDetail)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapter: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapter: java.lang.Object getGroup(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapter: java.lang.Object getChild(int,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.WiFiStandard$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiStandard$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiStandard$Companion: com.vrem.wifianalyzer.wifi.model.WiFiStandard findOne(android.net.wifi.ScanResult)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiStandard$Companion: com.vrem.wifianalyzer.wifi.model.WiFiStandard find(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiStandard$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsFragment",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsFragment: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsFragment: com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsAdapter getAccessPointsAdapter()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsFragment: void onRefresh()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsFragment: void onResume()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.accesspoint.AccessPointsFragment: void onPause()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.SortByKt$sortBySSID$$inlined$compareBy$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.SortByKt$sortBySSID$$inlined$compareBy$1: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.SortByKt$sortBySSID$$inlined$compareBy$1: int compare(java.lang.Object,java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.SortByKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.SortByKt: java.util.Comparator sortBySSID()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.SortByKt: java.util.Comparator sortByStrength()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.SortByKt: java.util.Comparator sortByChannel()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.SortByKt: java.util.Comparator sortByDefault()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.GroupByKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.GroupByKt: kotlin.jvm.functions.Function1 getGroupByChannel()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.GroupByKt: kotlin.jvm.functions.Function1 getGroupBySSID()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.GroupByKt: kotlin.jvm.functions.Function1 getGroupByVirtual()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.GroupByKt: java.lang.String groupByChannel$lambda$0(com.vrem.wifianalyzer.wifi.model.WiFiDetail)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.GroupByKt: java.lang.String groupBySSID$lambda$1(com.vrem.wifianalyzer.wifi.model.WiFiDetail)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.GroupByKt: java.lang.String groupByVirtual$lambda$2(com.vrem.wifianalyzer.wifi.model.WiFiDetail)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.GroupByKt: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.SortByKt$sortByDefault$$inlined$compareBy$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.SortByKt$sortByDefault$$inlined$compareBy$1: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.SortByKt$sortByDefault$$inlined$compareBy$1: int compare(java.lang.Object,java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.WiFiIdentifierKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": []
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.SortByKt$sortByDefault$$inlined$thenBy$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.SortByKt$sortByDefault$$inlined$thenBy$1: void <init>(java.util.Comparator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.SortByKt$sortByDefault$$inlined$thenBy$1: int compare(java.lang.Object,java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.WiFiSecurityKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurityKt: java.util.List access$getExtras$p()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurityKt: kotlin.text.Regex access$getRegex$p()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurityKt: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.SortByKt$sortByChannel$$inlined$thenByDescending$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.SortByKt$sortByChannel$$inlined$thenByDescending$1: void <init>(java.util.Comparator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.SortByKt$sortByChannel$$inlined$thenByDescending$1: int compare(java.lang.Object,java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.WiFiSecurityType$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurityType$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurityType$Companion: com.vrem.wifianalyzer.wifi.model.WiFiSecurityType findOne(int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurityType$Companion: java.util.Set findAll(java.util.List)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurityType$Companion: java.util.List find(android.net.wifi.ScanResult)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurityType$Companion: java.util.List securityTypeValues(android.net.wifi.ScanResult)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurityType$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.WiFiSecurityType",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurityType: void <init>(java.lang.String,int,int,int,com.vrem.wifianalyzer.wifi.model.Security)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurityType: void <init>(java.lang.String,int,int,int,com.vrem.wifianalyzer.wifi.model.Security,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurityType: int getSecurityTypeId()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurityType: int getTextResource()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurityType: com.vrem.wifianalyzer.wifi.model.Security getSecurity()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurityType: com.vrem.wifianalyzer.wifi.model.WiFiSecurityType[] values()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurityType: com.vrem.wifianalyzer.wifi.model.WiFiSecurityType valueOf(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurityType: kotlin.enums.EnumEntries getEntries()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurityType: com.vrem.wifianalyzer.wifi.model.WiFiSecurityType[] $values()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiSecurityType: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.SortByKt$sortBySSID$$inlined$thenBy$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.SortByKt$sortBySSID$$inlined$thenBy$1: void <init>(java.util.Comparator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.SortByKt$sortBySSID$$inlined$thenBy$1: int compare(java.lang.Object,java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.WiFiUtilsKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiUtilsKt: double calculateDistance(int,int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiUtilsKt: int calculateSignalLevel(int,int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiUtilsKt: java.lang.String convertSSID(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiUtilsKt: java.lang.String convertIpV4Address(int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.FastRoaming",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.FastRoaming: void <init>(java.lang.String,int,int,kotlin.jvm.functions.Function2)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.FastRoaming: int getTextResource()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.FastRoaming: kotlin.jvm.functions.Function2 getAvailable()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.FastRoaming: com.vrem.wifianalyzer.wifi.model.FastRoaming[] values()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.FastRoaming: com.vrem.wifianalyzer.wifi.model.FastRoaming valueOf(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.FastRoaming: kotlin.enums.EnumEntries getEntries()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.FastRoaming: com.vrem.wifianalyzer.wifi.model.FastRoaming[] $values()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.FastRoaming: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.FastRoaming$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.FastRoaming$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.FastRoaming$Companion: java.util.List find(android.net.wifi.ScanResult)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.FastRoaming$Companion: java.util.List find(java.util.List)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.FastRoaming$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.WiFiVirtualKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiVirtualKt: com.vrem.wifianalyzer.wifi.model.WiFiVirtual getWiFiVirtual(com.vrem.wifianalyzer.wifi.model.WiFiDetail)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.WiFiVirtual",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "DATA_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiVirtual: void <init>(java.lang.String,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiVirtual: java.lang.String getBssid()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiVirtual: int getFrequency()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiVirtual: java.lang.String getKey()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiVirtual: java.lang.String component1()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiVirtual: int component2()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiVirtual: com.vrem.wifianalyzer.wifi.model.WiFiVirtual copy(java.lang.String,int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiVirtual: com.vrem.wifianalyzer.wifi.model.WiFiVirtual copy$default(com.vrem.wifianalyzer.wifi.model.WiFiVirtual,java.lang.String,int,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiVirtual: java.lang.String toString()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiVirtual: int hashCode()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiVirtual: boolean equals(java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.FastRoamingKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.FastRoamingKt: boolean contains(java.nio.ByteBuffer,int,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.FastRoamingKt: boolean available802_11k$lambda$0(int,java.nio.ByteBuffer)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.FastRoamingKt: boolean available802_11r$lambda$1(int,java.nio.ByteBuffer)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.FastRoamingKt: boolean available802_11v$lambda$2(int,java.nio.ByteBuffer)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.FastRoamingKt: kotlin.jvm.functions.Function2 access$getAvailable802_11k$p()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.FastRoamingKt: kotlin.jvm.functions.Function2 access$getAvailable802_11r$p()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.FastRoamingKt: kotlin.jvm.functions.Function2 access$getAvailable802_11v$p()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.FastRoamingKt: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.WiFiIdentifier$compareTo$$inlined$thenBy$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiIdentifier$compareTo$$inlined$thenBy$1: void <init>(java.util.Comparator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiIdentifier$compareTo$$inlined$thenBy$1: int compare(java.lang.Object,java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.SortByKt$sortByStrength$$inlined$thenBy$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.SortByKt$sortByStrength$$inlined$thenBy$1: void <init>(java.util.Comparator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.SortByKt$sortByStrength$$inlined$thenBy$1: int compare(java.lang.Object,java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.ChannelAPCount$compareTo$$inlined$compareBy$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.ChannelAPCount$compareTo$$inlined$compareBy$1: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.ChannelAPCount$compareTo$$inlined$compareBy$1: int compare(java.lang.Object,java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.ChannelAPCount",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "DATA_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.ChannelAPCount: void <init>(com.vrem.wifianalyzer.wifi.band.WiFiChannel,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.ChannelAPCount: com.vrem.wifianalyzer.wifi.band.WiFiChannel getWiFiChannel()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.ChannelAPCount: int getCount()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.ChannelAPCount: int compareTo(com.vrem.wifianalyzer.wifi.model.ChannelAPCount)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.ChannelAPCount: com.vrem.wifianalyzer.wifi.band.WiFiChannel component1()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.ChannelAPCount: int component2()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.ChannelAPCount: com.vrem.wifianalyzer.wifi.model.ChannelAPCount copy(com.vrem.wifianalyzer.wifi.band.WiFiChannel,int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.ChannelAPCount: com.vrem.wifianalyzer.wifi.model.ChannelAPCount copy$default(com.vrem.wifianalyzer.wifi.model.ChannelAPCount,com.vrem.wifianalyzer.wifi.band.WiFiChannel,int,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.ChannelAPCount: java.lang.String toString()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.ChannelAPCount: int hashCode()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.ChannelAPCount: boolean equals(java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.ChannelAPCount: int compareTo(java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.SortByKt$sortBySSID$$inlined$thenByDescending$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.SortByKt$sortBySSID$$inlined$thenByDescending$1: void <init>(java.util.Comparator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.SortByKt$sortBySSID$$inlined$thenByDescending$1: int compare(java.lang.Object,java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.SortByKt$sortByChannel$$inlined$compareBy$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.SortByKt$sortByChannel$$inlined$compareBy$1: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.SortByKt$sortByChannel$$inlined$compareBy$1: int compare(java.lang.Object,java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.SortByKt$sortByStrength$$inlined$compareByDescending$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.SortByKt$sortByStrength$$inlined$compareByDescending$1: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.SortByKt$sortByStrength$$inlined$compareByDescending$1: int compare(java.lang.Object,java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.WiFiIdentifier$compareTo$$inlined$compareBy$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiIdentifier$compareTo$$inlined$compareBy$1: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiIdentifier$compareTo$$inlined$compareBy$1: int compare(java.lang.Object,java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.SortByKt$sortByChannel$$inlined$thenBy$2",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.SortByKt$sortByChannel$$inlined$thenBy$2: void <init>(java.util.Comparator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.SortByKt$sortByChannel$$inlined$thenBy$2: int compare(java.lang.Object,java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.SortByKt$sortByChannel$$inlined$thenBy$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.SortByKt$sortByChannel$$inlined$thenBy$1: void <init>(java.util.Comparator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.SortByKt$sortByChannel$$inlined$thenBy$1: int compare(java.lang.Object,java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.SortByKt$sortByStrength$$inlined$thenBy$2",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.SortByKt$sortByStrength$$inlined$thenBy$2: void <init>(java.util.Comparator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.SortByKt$sortByStrength$$inlined$thenBy$2: int compare(java.lang.Object,java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.ChannelRating",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.ChannelRating: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.ChannelRating: int count(com.vrem.wifianalyzer.wifi.band.WiFiChannel)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.ChannelRating: com.vrem.wifianalyzer.wifi.model.Strength strength(com.vrem.wifianalyzer.wifi.band.WiFiChannel)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.ChannelRating: java.util.List wiFiDetails()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.ChannelRating: void wiFiDetails(java.util.List)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.ChannelRating: java.util.List bestChannels(java.util.List)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.ChannelRating: java.util.List removeSame(java.util.List)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.ChannelRating: java.util.List collectOverlapping(com.vrem.wifianalyzer.wifi.band.WiFiChannel)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.ChannelRating: boolean bestChannel(com.vrem.wifianalyzer.wifi.band.WiFiChannel)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.ChannelAPCount$compareTo$$inlined$thenBy$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.ChannelAPCount$compareTo$$inlined$thenBy$1: void <init>(java.util.Comparator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.ChannelAPCount$compareTo$$inlined$thenBy$1: int compare(java.lang.Object,java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.WiFiWidthKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiWidthKt: kotlin.jvm.functions.Function2 getCalculateCenter20()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiWidthKt: kotlin.jvm.functions.Function2 getCalculateCenter40()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiWidthKt: kotlin.jvm.functions.Function2 getCalculateCenter80()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiWidthKt: kotlin.jvm.functions.Function2 getCalculateCenter160()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiWidthKt: int calculateCenter20$lambda$0(int,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiWidthKt: int calculateCenter40$lambda$1(int,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiWidthKt: int calculateCenter80$lambda$2(int,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiWidthKt: int calculateCenter160$lambda$3(int,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.model.WiFiWidthKt: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.model.WiFiStandardKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": []
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.band.WiFiChannel$compareTo$$inlined$compareBy$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannel$compareTo$$inlined$compareBy$1: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannel$compareTo$$inlined$compareBy$1: int compare(java.lang.Object,java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.band.WiFiChannelsKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsKt: int channelCount(kotlin.Pair)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.band.WiFiChannelCountryGHZ5Kt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelCountryGHZ5Kt: java.util.Set find(kotlin.Pair,java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelCountryGHZ5Kt: java.util.Set access$getCountriesETSI$p()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelCountryGHZ5Kt: java.util.Set access$find(kotlin.Pair,java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelCountryGHZ5Kt: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.band.WiFiChannel$compareTo$$inlined$thenBy$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannel$compareTo$$inlined$thenBy$1: void <init>(java.util.Comparator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannel$compareTo$$inlined$thenBy$1: int compare(java.lang.Object,java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ5",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ5: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ5: java.util.List wiFiChannelPairs()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ5: kotlin.Pair wiFiChannelPairFirst(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ5: java.util.List availableChannels(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ5: boolean channelAvailable(java.lang.String,int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ5: com.vrem.wifianalyzer.wifi.band.WiFiChannel wiFiChannelByFrequency(int,kotlin.Pair)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ5: kotlin.Pair access$getSET1$cp()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ5: kotlin.Pair access$getSET2$cp()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ5: kotlin.Pair access$getSET3$cp()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ5: java.util.List access$getSETS$cp()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ5: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ5$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ5$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ5$Companion: kotlin.Pair getSET1()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ5$Companion: kotlin.Pair getSET2()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ5$Companion: kotlin.Pair getSET3()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ5$Companion: java.util.List getSETS()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ5$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ6",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ6: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ6: java.util.List wiFiChannelPairs()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ6: kotlin.Pair wiFiChannelPairFirst(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ6: java.util.List availableChannels(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ6: boolean channelAvailable(java.lang.String,int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ6: com.vrem.wifianalyzer.wifi.band.WiFiChannel wiFiChannelByFrequency(int,kotlin.Pair)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ6: kotlin.Pair access$getSET1$cp()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ6: kotlin.Pair access$getSET2$cp()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ6: kotlin.Pair access$getSET3$cp()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ6: kotlin.Pair access$getSET4$cp()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ6: kotlin.Pair access$getSET5$cp()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ6: kotlin.Pair access$getSET6$cp()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ6: kotlin.Pair access$getSET7$cp()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ6: java.util.List access$getSETS$cp()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ6: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ6$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ6$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ6$Companion: kotlin.Pair getSET1()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ6$Companion: kotlin.Pair getSET2()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ6$Companion: kotlin.Pair getSET3()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ6$Companion: kotlin.Pair getSET4()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ6$Companion: kotlin.Pair getSET5()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ6$Companion: kotlin.Pair getSET6()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ6$Companion: kotlin.Pair getSET7()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ6$Companion: java.util.List getSETS()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ6$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ2$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ2$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ2$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ2",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ2: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ2: java.util.List wiFiChannelPairs()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ2: kotlin.Pair wiFiChannelPairFirst(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ2: java.util.List availableChannels(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ2: boolean channelAvailable(java.lang.String,int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ2: com.vrem.wifianalyzer.wifi.band.WiFiChannel wiFiChannelByFrequency(int,kotlin.Pair)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiChannelsGHZ2: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.band.WiFiBandKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiBandKt: kotlin.jvm.functions.Function0 getAvailableGHZ2()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiBandKt: kotlin.jvm.functions.Function0 getAvailableGHZ5()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiBandKt: kotlin.jvm.functions.Function0 getAvailableGHZ6()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiBandKt: boolean availableGHZ2$lambda$0()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiBandKt: boolean availableGHZ5$lambda$1()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiBandKt: boolean availableGHZ6$lambda$2()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.band.WiFiBandKt: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.timegraph.TimeAxisLabel",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.timegraph.TimeAxisLabel: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.timegraph.TimeAxisLabel: java.lang.String formatLabel(double,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.timegraph.TimeAxisLabel: void setViewport(com.jjoe64.graphview.Viewport)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.timegraph.DataManager",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.timegraph.DataManager: void <init>(com.vrem.wifianalyzer.wifi.timegraph.TimeGraphCache)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.timegraph.DataManager: void <init>(com.vrem.wifianalyzer.wifi.timegraph.TimeGraphCache,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.timegraph.DataManager: int getScanCount()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.timegraph.DataManager: void setScanCount(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.timegraph.DataManager: int getXValue()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.timegraph.DataManager: void setXValue(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.timegraph.DataManager: java.util.Set addSeriesData(com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper,java.util.List,int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.timegraph.DataManager: void adjustData(com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper,java.util.Set)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.timegraph.DataManager: java.util.Set newSeries(java.util.Set)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.timegraph.DataManager: void addData(com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper,com.vrem.wifianalyzer.wifi.model.WiFiDetail,int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.timegraph.DataManager: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.timegraph.TimeGraphCache",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.timegraph.TimeGraphCache: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.timegraph.TimeGraphCache: java.util.Set active()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.timegraph.TimeGraphCache: void clear()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.timegraph.TimeGraphCache: void add(com.vrem.wifianalyzer.wifi.model.WiFiDetail)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.timegraph.TimeGraphCache: void reset(com.vrem.wifianalyzer.wifi.model.WiFiDetail)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.timegraph.TimeGraphCache: java.util.Set getWiFiDetails()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper: void <init>(com.jjoe64.graphview.GraphView,com.vrem.wifianalyzer.wifi.graphutils.GraphLegend,com.vrem.wifianalyzer.settings.ThemeStyle,com.vrem.wifianalyzer.wifi.graphutils.SeriesCache,com.vrem.wifianalyzer.wifi.graphutils.SeriesOptions)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper: void <init>(com.jjoe64.graphview.GraphView,com.vrem.wifianalyzer.wifi.graphutils.GraphLegend,com.vrem.wifianalyzer.settings.ThemeStyle,com.vrem.wifianalyzer.wifi.graphutils.SeriesCache,com.vrem.wifianalyzer.wifi.graphutils.SeriesOptions,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper: com.jjoe64.graphview.GraphView getGraphView()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper: com.vrem.wifianalyzer.wifi.graphutils.GraphLegend getGraphLegend()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper: void setGraphLegend(com.vrem.wifianalyzer.wifi.graphutils.GraphLegend)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper: void removeSeries(java.util.Set)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper: java.util.List differenceSeries(java.util.Set)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper: boolean addSeries(com.vrem.wifianalyzer.wifi.model.WiFiDetail,com.jjoe64.graphview.series.BaseSeries,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper: boolean updateSeries(com.vrem.wifianalyzer.wifi.model.WiFiDetail,com.vrem.wifianalyzer.wifi.graphutils.GraphDataPoint[],boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper: boolean appendToSeries(com.vrem.wifianalyzer.wifi.model.WiFiDetail,com.vrem.wifianalyzer.wifi.graphutils.GraphDataPoint,int,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper: boolean newSeries(com.vrem.wifianalyzer.wifi.model.WiFiDetail)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper: void setViewport()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper: void setViewport(int,int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper: int getViewportCntX()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper: void addSeries(com.jjoe64.graphview.series.BaseSeries)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper: void updateLegend(com.vrem.wifianalyzer.wifi.graphutils.GraphLegend)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper: int calculateGraphType()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper: void setHorizontalLabelsVisible(boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper: void visibility(int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper: int size(int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper: com.jjoe64.graphview.LegendRenderer newLegendRenderer()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper: void resetLegendRenderer(com.vrem.wifianalyzer.wifi.graphutils.GraphLegend)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper: boolean seriesExists(com.vrem.wifianalyzer.wifi.model.WiFiDetail)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper: void popup(com.jjoe64.graphview.series.Series)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper: void addSeries$lambda$1(com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper,com.jjoe64.graphview.series.Series,com.jjoe64.graphview.series.DataPointInterface)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.graphutils.GraphDataPoint",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "DATA_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphDataPoint: void <init>(int,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphDataPoint: int getX()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphDataPoint: int getY()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphDataPoint: int component1()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphDataPoint: int component2()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphDataPoint: com.vrem.wifianalyzer.wifi.graphutils.GraphDataPoint copy(int,int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphDataPoint: com.vrem.wifianalyzer.wifi.graphutils.GraphDataPoint copy$default(com.vrem.wifianalyzer.wifi.graphutils.GraphDataPoint,int,int,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphDataPoint: java.lang.String toString()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphDataPoint: int hashCode()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphDataPoint: boolean equals(java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.graphutils.SeriesCache",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.SeriesCache: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.SeriesCache: java.util.List difference(java.util.Set)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.SeriesCache: java.util.List remove(java.util.List)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.SeriesCache: com.vrem.wifianalyzer.wifi.model.WiFiDetail find(com.jjoe64.graphview.series.Series)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.SeriesCache: boolean contains(com.vrem.wifianalyzer.wifi.model.WiFiDetail)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.SeriesCache: com.jjoe64.graphview.series.BaseSeries get(com.vrem.wifianalyzer.wifi.model.WiFiDetail)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.SeriesCache: com.jjoe64.graphview.series.BaseSeries put(com.vrem.wifianalyzer.wifi.model.WiFiDetail,com.jjoe64.graphview.series.BaseSeries)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.graphutils.SeriesOptions",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.SeriesOptions: void <init>(com.vrem.wifianalyzer.wifi.graphutils.GraphColors)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.SeriesOptions: void <init>(com.vrem.wifianalyzer.wifi.graphutils.GraphColors,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.SeriesOptions: void highlightConnected(com.jjoe64.graphview.series.BaseSeries,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.SeriesOptions: void setSeriesColor(com.jjoe64.graphview.series.BaseSeries)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.SeriesOptions: void drawBackground(com.jjoe64.graphview.series.BaseSeries,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.SeriesOptions: void removeSeriesColor(com.jjoe64.graphview.series.BaseSeries)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.SeriesOptions: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.timegraph.TimeGraphViewKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.timegraph.TimeGraphViewKt: com.jjoe64.graphview.GraphView makeGraphView(com.vrem.wifianalyzer.MainContext,int,com.vrem.wifianalyzer.settings.ThemeStyle)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.timegraph.TimeGraphViewKt: com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper makeGraphViewWrapper()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.graphutils.GraphViewBuilder",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewBuilder: void <init>(int,int,com.vrem.wifianalyzer.settings.ThemeStyle,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewBuilder: void <init>(int,int,com.vrem.wifianalyzer.settings.ThemeStyle,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewBuilder: com.vrem.wifianalyzer.wifi.graphutils.GraphViewBuilder setLabelFormatter(com.jjoe64.graphview.LabelFormatter)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewBuilder: com.vrem.wifianalyzer.wifi.graphutils.GraphViewBuilder setVerticalTitle(java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewBuilder: com.vrem.wifianalyzer.wifi.graphutils.GraphViewBuilder setHorizontalTitle(java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewBuilder: com.jjoe64.graphview.GraphView build(android.content.Context)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewBuilder: com.jjoe64.graphview.GraphView viewportInitialize(com.jjoe64.graphview.GraphView)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewBuilder: com.jjoe64.graphview.GraphView gridLabelInitialize(com.jjoe64.graphview.GraphView)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewBuilder: int getNumVerticalLabels()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewBuilder: int getMaximumPortY()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewBuilder: android.view.ViewGroup$LayoutParams getLayoutParams()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.graphutils.GraphColors",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphColors: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphColors: java.util.List availableGraphColors()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphColors: com.vrem.wifianalyzer.wifi.graphutils.GraphColor graphColor()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphColors: void addColor(long)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.timegraph.TimeGraphAdapter",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.timegraph.TimeGraphAdapter: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.graphutils.GraphAdapter",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphAdapter: void <init>(java.util.List)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphAdapter: java.util.List graphViews()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphAdapter: void update(com.vrem.wifianalyzer.wifi.model.WiFiData)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphAdapter: java.util.List graphViewNotifiers()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.timegraph.TimeGraphFragmentKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.timegraph.TimeGraphFragmentKt: java.util.List timeGraphViews()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.timegraph.TimeGraphFragmentKt: java.util.List access$timeGraphViews()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.timegraph.TimeGraphView",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.timegraph.TimeGraphView: void <init>(com.vrem.wifianalyzer.wifi.band.WiFiBand,com.vrem.wifianalyzer.wifi.timegraph.DataManager,com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.timegraph.TimeGraphView: void <init>(com.vrem.wifianalyzer.wifi.band.WiFiBand,com.vrem.wifianalyzer.wifi.timegraph.DataManager,com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.timegraph.TimeGraphView: void update(com.vrem.wifianalyzer.wifi.model.WiFiData)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.timegraph.TimeGraphView: kotlin.jvm.functions.Function1 predicate(com.vrem.wifianalyzer.settings.Settings)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.timegraph.TimeGraphView: boolean selected()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.timegraph.TimeGraphView: com.jjoe64.graphview.GraphView graphView()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.graphutils.GraphViewNotifier",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewNotifier: com.jjoe64.graphview.GraphView graphView()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewNotifier: void update(com.vrem.wifianalyzer.wifi.model.WiFiData)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.timegraph.TimeGraphFragment",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.timegraph.TimeGraphFragment: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.timegraph.TimeGraphFragment: com.vrem.wifianalyzer.wifi.timegraph.TimeGraphAdapter getTimeGraphAdapter()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.timegraph.TimeGraphFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.timegraph.TimeGraphFragment: void onRefresh()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.timegraph.TimeGraphFragment: void onResume()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.timegraph.TimeGraphFragment: void onPause()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.channelrating.ChannelRatingAdapter$Message",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelrating.ChannelRatingAdapter$Message: void <init>(java.lang.String,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelrating.ChannelRatingAdapter$Message: java.lang.String getMessage()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelrating.ChannelRatingAdapter$Message: int getColor()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.channelrating.ChannelRatingAdapter",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelrating.ChannelRatingAdapter: void <init>(android.content.Context,android.widget.TextView,com.vrem.wifianalyzer.wifi.model.ChannelRating)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelrating.ChannelRatingAdapter: void <init>(android.content.Context,android.widget.TextView,com.vrem.wifianalyzer.wifi.model.ChannelRating,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelrating.ChannelRatingAdapter: void update(com.vrem.wifianalyzer.wifi.model.WiFiData)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelrating.ChannelRatingAdapter: java.util.List wiFiChannels(com.vrem.wifianalyzer.wifi.band.WiFiBand,java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelrating.ChannelRatingAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelrating.ChannelRatingAdapter: void ratingBar(com.vrem.wifianalyzer.wifi.band.WiFiChannel,android.widget.RatingBar)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelrating.ChannelRatingAdapter: com.vrem.wifianalyzer.wifi.channelrating.ChannelRatingAdapter$Message bestChannels$app_debug(com.vrem.wifianalyzer.wifi.band.WiFiBand,java.util.List)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelrating.ChannelRatingAdapter: java.lang.String errorMessage(com.vrem.wifianalyzer.wifi.band.WiFiBand)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelrating.ChannelRatingAdapter: com.vrem.wifianalyzer.databinding.ChannelRatingDetailsBinding create(android.view.ViewGroup)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.channelrating.ChannelRatingAdapterBinding",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelrating.ChannelRatingAdapterBinding: android.view.View getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelrating.ChannelRatingAdapterBinding: android.widget.TextView getChannelNumber()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelrating.ChannelRatingAdapterBinding: android.widget.TextView getAccessPointCount()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelrating.ChannelRatingAdapterBinding: android.widget.RatingBar getChannelRating()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelrating.ChannelRatingAdapterBinding: void <init>(com.vrem.wifianalyzer.databinding.ChannelRatingDetailsBinding)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelrating.ChannelRatingAdapterBinding: void <init>(android.view.View)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.channelrating.ChannelRatingFragment",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelrating.ChannelRatingFragment: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelrating.ChannelRatingFragment: com.vrem.wifianalyzer.wifi.channelrating.ChannelRatingAdapter getChannelRatingAdapter()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelrating.ChannelRatingFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelrating.ChannelRatingFragment: void onRefresh()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelrating.ChannelRatingFragment: void onResume()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelrating.ChannelRatingFragment: void onPause()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.scanner.CacheResult",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.CacheResult: void <init>(android.net.wifi.ScanResult,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.CacheResult: android.net.wifi.ScanResult getScanResult()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.CacheResult: int getAverage()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.scanner.Cache$comparator$$inlined$thenBy$2",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Cache$comparator$$inlined$thenBy$2: void <init>(java.util.Comparator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Cache$comparator$$inlined$thenBy$2: int compare(java.lang.Object,java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.scanner.Cache",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Cache: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Cache: android.net.wifi.WifiInfo getWifiInfo()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Cache: void setWifiInfo(android.net.wifi.WifiInfo)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Cache: java.util.List scanResults()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Cache: void add(java.util.List)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Cache: java.util.List first()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Cache: java.util.List last()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Cache: int size()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Cache: int calculate(boolean,android.net.wifi.ScanResult,com.vrem.wifianalyzer.wifi.scanner.CacheResult)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Cache: java.util.List combineCache()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Cache: java.util.Comparator comparator()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Cache: boolean getSizeAvailable()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Cache: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.scanner.Cache$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Cache$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Cache$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.scanner.Transformer",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Transformer: void <init>(com.vrem.wifianalyzer.wifi.scanner.Cache)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Transformer: com.vrem.wifianalyzer.wifi.model.WiFiConnection transformWifiInfo$app_debug()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Transformer: java.util.List transformCacheResults$app_debug()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Transformer: com.vrem.wifianalyzer.wifi.model.WiFiData transformToWiFiData$app_debug()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Transformer: com.vrem.wifianalyzer.wifi.model.WiFiDetail transform(com.vrem.wifianalyzer.wifi.scanner.CacheResult)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.scanner.TransformerKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.TransformerKt: int ipV4Address(android.net.wifi.WifiInfo)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.scanner.PeriodicScan",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.PeriodicScan: void <init>(com.vrem.wifianalyzer.wifi.scanner.ScannerService,android.os.Handler,com.vrem.wifianalyzer.settings.Settings)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.PeriodicScan: boolean getRunning$app_debug()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.PeriodicScan: void setRunning$app_debug(boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.PeriodicScan: void stop()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.PeriodicScan: void start()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.PeriodicScan: void startWithDelay()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.PeriodicScan: void run()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.PeriodicScan: void nextRun(long)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.PeriodicScan: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.scanner.PeriodicScan$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.PeriodicScan$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.PeriodicScan$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.scanner.Callback",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Callback: void onSuccess()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.scanner.ScanResultsReceiver",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.ScanResultsReceiver: void <init>(com.vrem.wifianalyzer.MainActivity,com.vrem.wifianalyzer.wifi.scanner.Callback)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.ScanResultsReceiver: void register()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.ScanResultsReceiver: void unregister()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.ScanResultsReceiver: android.content.IntentFilter makeIntentFilter(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.ScanResultsReceiver: void onReceive(android.content.Context,android.content.Intent)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.scanner.Cache$comparator$$inlined$compareBy$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Cache$comparator$$inlined$compareBy$1: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Cache$comparator$$inlined$compareBy$1: int compare(java.lang.Object,java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.scanner.Cache$scanResults$$inlined$groupingBy$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Cache$scanResults$$inlined$groupingBy$1: void <init>(java.lang.Iterable)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Cache$scanResults$$inlined$groupingBy$1: java.util.Iterator sourceIterator()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Cache$scanResults$$inlined$groupingBy$1: java.lang.Object keyOf(java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.scanner.CacheKey",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "DATA_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.CacheKey: void <init>(java.lang.String,java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.CacheKey: java.lang.String getBssid()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.CacheKey: java.lang.String getSsid()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.CacheKey: java.lang.String component1()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.CacheKey: java.lang.String component2()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.CacheKey: com.vrem.wifianalyzer.wifi.scanner.CacheKey copy(java.lang.String,java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.CacheKey: com.vrem.wifianalyzer.wifi.scanner.CacheKey copy$default(com.vrem.wifianalyzer.wifi.scanner.CacheKey,java.lang.String,java.lang.String,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.CacheKey: java.lang.String toString()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.CacheKey: int hashCode()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.CacheKey: boolean equals(java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.scanner.Cache$comparator$$inlined$thenBy$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Cache$comparator$$inlined$thenBy$1: void <init>(java.util.Comparator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Cache$comparator$$inlined$thenBy$1: int compare(java.lang.Object,java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.scanner.Scanner",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Scanner: void <init>(com.vrem.wifianalyzer.wifi.manager.WiFiManagerWrapper,com.vrem.wifianalyzer.settings.Settings,com.vrem.wifianalyzer.permission.PermissionService,com.vrem.wifianalyzer.wifi.scanner.Transformer)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Scanner: com.vrem.wifianalyzer.wifi.manager.WiFiManagerWrapper getWiFiManagerWrapper()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Scanner: com.vrem.wifianalyzer.settings.Settings getSettings()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Scanner: com.vrem.wifianalyzer.permission.PermissionService getPermissionService()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Scanner: com.vrem.wifianalyzer.wifi.scanner.Transformer getTransformer()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Scanner: com.vrem.wifianalyzer.wifi.scanner.PeriodicScan getPeriodicScan()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Scanner: void setPeriodicScan(com.vrem.wifianalyzer.wifi.scanner.PeriodicScan)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Scanner: com.vrem.wifianalyzer.wifi.scanner.ScannerCallback getScannerCallback()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Scanner: void setScannerCallback(com.vrem.wifianalyzer.wifi.scanner.ScannerCallback)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Scanner: com.vrem.wifianalyzer.wifi.scanner.ScanResultsReceiver getScanResultsReceiver()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Scanner: void setScanResultsReceiver(com.vrem.wifianalyzer.wifi.scanner.ScanResultsReceiver)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Scanner: void update()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Scanner: com.vrem.wifianalyzer.wifi.model.WiFiData wiFiData()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Scanner: boolean register(com.vrem.wifianalyzer.wifi.scanner.UpdateNotifier)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Scanner: boolean unregister(com.vrem.wifianalyzer.wifi.scanner.UpdateNotifier)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Scanner: void pause()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Scanner: boolean running()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Scanner: void resume()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Scanner: void resumeWithDelay()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Scanner: void stop()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Scanner: void toggle()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.Scanner: int registered()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.scanner.ScannerCallback",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.ScannerCallback: void <init>(com.vrem.wifianalyzer.wifi.manager.WiFiManagerWrapper,com.vrem.wifianalyzer.wifi.scanner.Cache)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.scanner.ScannerCallback: void onSuccess()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.channelgraph.ChannelAxisLabel",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelgraph.ChannelAxisLabel: void <init>(com.vrem.wifianalyzer.wifi.band.WiFiBand,kotlin.Pair)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelgraph.ChannelAxisLabel: java.lang.String formatLabel(double,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelgraph.ChannelAxisLabel: void setViewport(com.jjoe64.graphview.Viewport)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelgraph.ChannelAxisLabel: java.lang.String findChannel(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphAdapterKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphAdapterKt: java.util.List channelGraphViews()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphAdapterKt: java.util.List access$channelGraphViews()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphView",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphView: void <init>(com.vrem.wifianalyzer.wifi.band.WiFiBand,kotlin.Pair,com.vrem.wifianalyzer.wifi.channelgraph.DataManager,com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphView: void <init>(com.vrem.wifianalyzer.wifi.band.WiFiBand,kotlin.Pair,com.vrem.wifianalyzer.wifi.channelgraph.DataManager,com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphView: void update(com.vrem.wifianalyzer.wifi.model.WiFiData)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphView: boolean selected()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphView: kotlin.jvm.functions.Function1 predicate(com.vrem.wifianalyzer.settings.Settings)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphView: com.jjoe64.graphview.GraphView graphView()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.channelgraph.DataManager",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelgraph.DataManager: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelgraph.DataManager: java.util.Set newSeries(java.util.List,kotlin.Pair)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelgraph.DataManager: com.vrem.wifianalyzer.wifi.graphutils.GraphDataPoint[] graphDataPoints(com.vrem.wifianalyzer.wifi.model.WiFiDetail,int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelgraph.DataManager: void addSeriesData(com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper,java.util.Set,int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphNavigation$WhenMappings",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphNavigation$WhenMappings: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphNavigation",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphNavigation: void <init>(android.view.View,android.content.Context)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphNavigation: void update$app_debug()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphNavigation: void buttons(java.util.Map,com.vrem.wifianalyzer.wifi.band.WiFiBand,kotlin.Pair)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphNavigation: int visibility(java.util.Map)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphNavigation: void onClickListener$app_debug(com.vrem.wifianalyzer.wifi.band.WiFiBand,kotlin.Pair)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphNavigation: java.util.Map navigationLines(com.vrem.wifianalyzer.wifi.band.WiFiBand)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphNavigation: void buttons$lambda$3$lambda$2$lambda$1(com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphNavigation,com.vrem.wifianalyzer.wifi.band.WiFiBand,kotlin.Pair,android.view.View)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphAdapter",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphAdapter: void <init>(com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphNavigation)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphAdapter: void update(com.vrem.wifianalyzer.wifi.model.WiFiData)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.channelgraph.DataManagerKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelgraph.DataManagerKt: boolean inRange(kotlin.Pair,com.vrem.wifianalyzer.wifi.model.WiFiDetail)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphViewKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphViewKt: int numX(kotlin.Pair)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphViewKt: boolean selected(kotlin.Pair,com.vrem.wifianalyzer.wifi.band.WiFiBand)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphViewKt: com.jjoe64.graphview.GraphView makeGraphView(com.vrem.wifianalyzer.MainContext,int,com.vrem.wifianalyzer.settings.ThemeStyle,com.vrem.wifianalyzer.wifi.band.WiFiBand,kotlin.Pair)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphViewKt: com.jjoe64.graphview.series.TitleLineGraphSeries makeDefaultSeries(int,int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphViewKt: com.vrem.wifianalyzer.wifi.graphutils.GraphViewWrapper makeGraphViewWrapper(com.vrem.wifianalyzer.wifi.band.WiFiBand,kotlin.Pair)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.graphutils.GraphColorsKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphColorsKt: long toColor(java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphColorsKt: com.vrem.wifianalyzer.wifi.graphutils.GraphColor getTransparent()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphColorsKt: long access$toColor(java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphColorsKt: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.graphutils.GraphColor",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "DATA_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphColor: void <init>(long,long)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphColor: long getPrimary()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphColor: long getBackground()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphColor: long component1()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphColor: long component2()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphColor: com.vrem.wifianalyzer.wifi.graphutils.GraphColor copy(long,long)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphColor: com.vrem.wifianalyzer.wifi.graphutils.GraphColor copy$default(com.vrem.wifianalyzer.wifi.graphutils.GraphColor,long,long,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphColor: java.lang.String toString()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphColor: int hashCode()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphColor: boolean equals(java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphNavigationKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphNavigationKt: java.util.Map getNavigationGHZ2Lines()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphNavigationKt: java.util.Map getNavigationGHZ5Lines()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphNavigationKt: java.util.Map getNavigationGHZ6Lines()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphNavigationKt: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphFragment",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphFragment: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphFragment: com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphAdapter getChannelGraphAdapter()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphFragment: void onRefresh()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphFragment: void onResume()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.channelgraph.ChannelGraphFragment: void onPause()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.graphutils.GraphViewBuilderKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewBuilderKt: com.jjoe64.graphview.GraphView layout(com.jjoe64.graphview.GraphView,android.view.ViewGroup$LayoutParams)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewBuilderKt: com.jjoe64.graphview.Viewport initialize(com.jjoe64.graphview.Viewport,int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewBuilderKt: com.jjoe64.graphview.GridLabelRenderer colors(com.jjoe64.graphview.GridLabelRenderer,com.vrem.wifianalyzer.settings.ThemeStyle)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewBuilderKt: com.jjoe64.graphview.GridLabelRenderer horizontalTitle(com.jjoe64.graphview.GridLabelRenderer,java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewBuilderKt: com.jjoe64.graphview.GridLabelRenderer verticalTitle(com.jjoe64.graphview.GridLabelRenderer,java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewBuilderKt: com.jjoe64.graphview.GridLabelRenderer labelFormat(com.jjoe64.graphview.GridLabelRenderer,com.jjoe64.graphview.LabelFormatter)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphViewBuilderKt: com.jjoe64.graphview.GridLabelRenderer labels(com.jjoe64.graphview.GridLabelRenderer,int,int,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.graphutils.SeriesOptionsKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.SeriesOptionsKt: void removeSeriesColor(com.jjoe64.graphview.series.BaseSeries,com.vrem.wifianalyzer.wifi.graphutils.GraphColors)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.SeriesOptionsKt: void highlightConnected(com.jjoe64.graphview.series.BaseSeries,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.SeriesOptionsKt: void seriesColor(com.jjoe64.graphview.series.BaseSeries,com.vrem.wifianalyzer.wifi.graphutils.GraphColors)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.SeriesOptionsKt: void drawBackground(com.jjoe64.graphview.series.BaseSeries,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.SeriesOptionsKt: void access$highlightConnected(com.jjoe64.graphview.series.BaseSeries,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.SeriesOptionsKt: void access$seriesColor(com.jjoe64.graphview.series.BaseSeries,com.vrem.wifianalyzer.wifi.graphutils.GraphColors)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.SeriesOptionsKt: void access$drawBackground(com.jjoe64.graphview.series.BaseSeries,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.SeriesOptionsKt: void access$removeSeriesColor(com.jjoe64.graphview.series.BaseSeries,com.vrem.wifianalyzer.wifi.graphutils.GraphColors)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.graphutils.GraphLegendKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphLegendKt: kotlin.jvm.functions.Function1 getLegendDisplayNone()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphLegendKt: kotlin.jvm.functions.Function1 getLegendDisplayLeft()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphLegendKt: kotlin.jvm.functions.Function1 getLegendDisplayRight()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphLegendKt: kotlin.Unit legendDisplayNone$lambda$0(com.jjoe64.graphview.LegendRenderer)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphLegendKt: kotlin.Unit legendDisplayLeft$lambda$1(com.jjoe64.graphview.LegendRenderer)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphLegendKt: kotlin.Unit legendDisplayRight$lambda$2(com.jjoe64.graphview.LegendRenderer)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.wifi.graphutils.GraphLegendKt: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.wifi.graphutils.GraphConstantsKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": []
    },
    {
      "className": "com.vrem.wifianalyzer.permission.PermissionDialog$OkClick",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.permission.PermissionDialog$OkClick: void <init>(android.app.Activity)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.permission.PermissionDialog$OkClick: void onClick(android.content.DialogInterface,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.permission.PermissionDialog$CancelClick",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.permission.PermissionDialog$CancelClick: void <init>(android.app.Activity)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.permission.PermissionDialog$CancelClick: void onClick(android.content.DialogInterface,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.MainActivityBackPressed",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.MainActivityBackPressed: void <init>(com.vrem.wifianalyzer.MainActivity)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainActivityBackPressed: com.vrem.wifianalyzer.MainActivity getMainActivity()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.MainActivityBackPressed: void handleOnBackPressed()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.vendor.VendorFragment$Listener",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.vendor.VendorFragment$Listener: void <init>(com.vrem.wifianalyzer.vendor.VendorAdapter)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.vendor.VendorFragment$Listener: boolean onQueryTextSubmit(java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.vendor.VendorFragment$Listener: boolean onQueryTextChange(java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.vendor.VendorFragment",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.vendor.VendorFragment: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.vendor.VendorFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.vendor.VendorAdapter",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.vendor.VendorAdapter: void <init>(android.content.Context,com.vrem.wifianalyzer.vendor.model.VendorService)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.vendor.VendorAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.vendor.VendorAdapter: void update(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.vendor.VendorAdapter: com.vrem.wifianalyzer.databinding.VendorDetailsBinding create(android.view.ViewGroup)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.vendor.VendorAdapter$Binding",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.vendor.VendorAdapter$Binding: android.view.View getRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.vendor.VendorAdapter$Binding: android.widget.TextView getVendorName()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.vendor.VendorAdapter$Binding: android.widget.TextView getVendorMacs()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.vendor.VendorAdapter$Binding: void <init>(com.vrem.wifianalyzer.databinding.VendorDetailsBinding)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.vendor.VendorAdapter$Binding: void <init>(android.view.View)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.vendor.model.VendorUtilsKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.vendor.model.VendorUtilsKt: java.lang.String clean(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.vendor.model.VendorUtilsKt: java.lang.String toMacAddress(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.navigation.options.OptionAction$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.options.OptionAction$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.options.OptionAction$Companion: com.vrem.wifianalyzer.navigation.options.OptionAction findOptionAction(int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.options.OptionAction$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.navigation.options.OptionAction",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.options.OptionAction: void <init>(java.lang.String,int,int,kotlin.jvm.functions.Function0)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.options.OptionAction: int getKey()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.options.OptionAction: kotlin.jvm.functions.Function0 getAction()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.options.OptionAction: com.vrem.wifianalyzer.navigation.options.OptionAction[] values()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.options.OptionAction: com.vrem.wifianalyzer.navigation.options.OptionAction valueOf(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.options.OptionAction: kotlin.enums.EnumEntries getEntries()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.options.OptionAction: com.vrem.wifianalyzer.navigation.options.OptionAction[] $values()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.options.OptionAction: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.navigation.options.OptionActionKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.options.OptionActionKt: kotlin.jvm.functions.Function0 getNoAction()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.options.OptionActionKt: kotlin.jvm.functions.Function0 getFilterAction()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.options.OptionActionKt: kotlin.jvm.functions.Function0 getScannerAction()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.options.OptionActionKt: kotlin.jvm.functions.Function0 getWiFiBandAction2()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.options.OptionActionKt: kotlin.jvm.functions.Function0 getWiFiBandAction5()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.options.OptionActionKt: kotlin.jvm.functions.Function0 getWiFiBandAction6()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.options.OptionActionKt: kotlin.Unit noAction$lambda$0()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.options.OptionActionKt: kotlin.Unit filterAction$lambda$1()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.options.OptionActionKt: kotlin.Unit scannerAction$lambda$2()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.options.OptionActionKt: kotlin.Unit wiFiBandAction2$lambda$3()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.options.OptionActionKt: kotlin.Unit wiFiBandAction5$lambda$4()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.options.OptionActionKt: kotlin.Unit wiFiBandAction6$lambda$5()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.options.OptionActionKt: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.navigation.items.FragmentItem",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.items.FragmentItem: void <init>(androidx.fragment.app.Fragment,boolean,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.items.FragmentItem: void <init>(androidx.fragment.app.Fragment,boolean,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.items.FragmentItem: androidx.fragment.app.Fragment getFragment()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.items.FragmentItem: boolean getRegistered()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.items.FragmentItem: int getVisibility()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.items.FragmentItem: void activate(com.vrem.wifianalyzer.MainActivity,android.view.MenuItem,com.vrem.wifianalyzer.navigation.NavigationMenu)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.items.FragmentItem: void startFragment(androidx.fragment.app.FragmentManager)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.items.FragmentItem: void updateMainActivity(com.vrem.wifianalyzer.MainActivity,android.view.MenuItem,com.vrem.wifianalyzer.navigation.NavigationMenu)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.navigation.items.NavigationItem$DefaultImpls",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.items.NavigationItem$DefaultImpls: boolean getRegistered(com.vrem.wifianalyzer.navigation.items.NavigationItem)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.items.NavigationItem$DefaultImpls: int getVisibility(com.vrem.wifianalyzer.navigation.items.NavigationItem)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.navigation.items.ExportItem",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.items.ExportItem: void <init>(com.vrem.wifianalyzer.export.Export)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.items.ExportItem: void activate(com.vrem.wifianalyzer.MainActivity,android.view.MenuItem,com.vrem.wifianalyzer.navigation.NavigationMenu)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.items.ExportItem: boolean exportAvailable(com.vrem.wifianalyzer.MainActivity,android.content.Intent)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.items.ExportItem: boolean getRegistered()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.items.ExportItem: int getVisibility()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.navigation.items.NavigationItemsKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.items.NavigationItemsKt: com.vrem.wifianalyzer.navigation.items.NavigationItem getNavigationItemAccessPoints()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.items.NavigationItemsKt: com.vrem.wifianalyzer.navigation.items.NavigationItem getNavigationItemChannelRating()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.items.NavigationItemsKt: com.vrem.wifianalyzer.navigation.items.NavigationItem getNavigationItemChannelGraph()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.items.NavigationItemsKt: com.vrem.wifianalyzer.navigation.items.NavigationItem getNavigationItemTimeGraph()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.items.NavigationItemsKt: com.vrem.wifianalyzer.navigation.items.NavigationItem getNavigationItemExport()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.items.NavigationItemsKt: com.vrem.wifianalyzer.navigation.items.NavigationItem getNavigationItemChannelAvailable()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.items.NavigationItemsKt: com.vrem.wifianalyzer.navigation.items.NavigationItem getNavigationItemVendors()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.items.NavigationItemsKt: com.vrem.wifianalyzer.navigation.items.NavigationItem getNavigationItemSettings()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.items.NavigationItemsKt: com.vrem.wifianalyzer.navigation.items.NavigationItem getNavigationItemAbout()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.items.NavigationItemsKt: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.about.AboutFragment",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.about.AboutFragment: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.about.AboutFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.about.AboutFragment: void setTexts(com.vrem.wifianalyzer.databinding.AboutContentBinding,androidx.fragment.app.FragmentActivity)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.about.AboutFragment: java.lang.String device()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.about.AboutFragment: void wiFiState(com.vrem.wifianalyzer.databinding.AboutContentBinding)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.about.AboutFragment: void toggle(boolean,android.widget.TextView,android.widget.TextView)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.about.AboutFragment: void setOnClicks(com.vrem.wifianalyzer.databinding.AboutContentBinding,androidx.fragment.app.FragmentActivity)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.about.AboutFragment: java.lang.String copyright()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.about.AboutFragment: java.lang.String version(androidx.fragment.app.FragmentActivity)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.about.AboutFragment: java.lang.String applicationVersion(androidx.fragment.app.FragmentActivity)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.about.AboutFragment: java.lang.String ifElse(boolean,java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.about.AboutFragment: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.about.AboutFragment$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.about.AboutFragment$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.about.AboutFragment$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.navigation.availability.WiFiSwitchKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.availability.WiFiSwitchKt: kotlin.jvm.functions.Function1 getNavigationOptionWiFiSwitchOff()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.availability.WiFiSwitchKt: kotlin.jvm.functions.Function1 getNavigationOptionWiFiSwitchOn()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.availability.WiFiSwitchKt: void updateMenuItem(com.vrem.wifianalyzer.MainActivity,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.availability.WiFiSwitchKt: kotlin.Unit navigationOptionWiFiSwitchOff$lambda$0(com.vrem.wifianalyzer.MainActivity)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.availability.WiFiSwitchKt: kotlin.Unit navigationOptionWiFiSwitchOn$lambda$1(com.vrem.wifianalyzer.MainActivity)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.availability.WiFiSwitchKt: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.navigation.availability.NavigationOptionsKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.availability.NavigationOptionsKt: java.util.List getNavigationOptionAp()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.availability.NavigationOptionsKt: java.util.List getNavigationOptionOff()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.availability.NavigationOptionsKt: java.util.List getNavigationOptionOther()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.availability.NavigationOptionsKt: java.util.List getNavigationOptionRating()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.availability.NavigationOptionsKt: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.navigation.availability.FilterKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.availability.FilterKt: kotlin.jvm.functions.Function1 getNavigationOptionFilterOff()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.availability.FilterKt: kotlin.jvm.functions.Function1 getNavigationOptionFilterOn()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.availability.FilterKt: kotlin.Unit navigationOptionFilterOff$lambda$1(com.vrem.wifianalyzer.MainActivity)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.availability.FilterKt: kotlin.Unit navigationOptionFilterOn$lambda$3(com.vrem.wifianalyzer.MainActivity)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.availability.FilterKt: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.navigation.availability.BottomNavKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.availability.BottomNavKt: kotlin.jvm.functions.Function1 getNavigationOptionBottomNavOff()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.availability.BottomNavKt: kotlin.jvm.functions.Function1 getNavigationOptionBottomNavOn()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.availability.BottomNavKt: kotlin.Unit navigationOptionBottomNavOff$lambda$0(com.vrem.wifianalyzer.MainActivity)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.availability.BottomNavKt: kotlin.Unit navigationOptionBottomNavOn$lambda$1(com.vrem.wifianalyzer.MainActivity)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.availability.BottomNavKt: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.navigation.availability.ScannerSwitchKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.availability.ScannerSwitchKt: kotlin.jvm.functions.Function1 getNavigationOptionScannerSwitchOff()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.availability.ScannerSwitchKt: kotlin.jvm.functions.Function1 getNavigationOptionScannerSwitchOn()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.availability.ScannerSwitchKt: kotlin.Unit navigationOptionScannerSwitchOff$lambda$1(com.vrem.wifianalyzer.MainActivity)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.availability.ScannerSwitchKt: kotlin.Unit navigationOptionScannerSwitchOn$lambda$3(com.vrem.wifianalyzer.MainActivity)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.navigation.availability.ScannerSwitchKt: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.navigation.availability.NavigationOptionKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": []
    },
    {
      "className": "com.vrem.wifianalyzer.about.AboutFragment$AlertDialogClickListener",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.about.AboutFragment$AlertDialogClickListener: void <init>(android.app.Activity,int,int,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.about.AboutFragment$AlertDialogClickListener: void <init>(android.app.Activity,int,int,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.about.AboutFragment$AlertDialogClickListener: void onClick(android.view.View)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.about.AboutFragment$AlertDialogClickListener: void onClick$lambda$0(android.content.DialogInterface,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.vrem.wifianalyzer.about.AboutFragment$WriteReviewClickListener",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.vrem.wifianalyzer.about.AboutFragment$WriteReviewClickListener: void <init>(android.app.Activity)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.vrem.wifianalyzer.about.AboutFragment$WriteReviewClickListener: void onClick(android.view.View)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    }
  ]
}