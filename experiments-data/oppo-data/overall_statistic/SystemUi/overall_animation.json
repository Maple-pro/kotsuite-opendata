{
  "module": "/Users/oneplus/WorkSpace/SystemUi/animation",
  "classes": [
    {
      "className": "com.android.systemui.animation.BuildConfig",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.BuildConfig: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.BuildConfig: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.util.DimensionKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.util.DimensionKt: float dpToPx(java.lang.Number,android.content.Context)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.DimensionKt: float dpToPx(java.lang.Number,android.content.res.Resources)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.DimensionKt: float dpToPx(java.lang.Number,android.util.DisplayMetrics)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.util.AnimatorExtensionsKt$doOnStart$$inlined$addListener$default$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt$doOnStart$$inlined$addListener$default$1: void <init>(kotlin.jvm.functions.Function1)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt$doOnStart$$inlined$addListener$default$1: void onAnimationRepeat(androidx.core.animation.Animator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt$doOnStart$$inlined$addListener$default$1: void onAnimationEnd(androidx.core.animation.Animator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt$doOnStart$$inlined$addListener$default$1: void onAnimationCancel(androidx.core.animation.Animator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt$doOnStart$$inlined$addListener$default$1: void onAnimationStart(androidx.core.animation.Animator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.util.AnimatorExtensionsKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt: androidx.core.animation.Animator$AnimatorListener doOnEnd(androidx.core.animation.Animator,kotlin.jvm.functions.Function1)>",
          "methodType": "NEED_BUT_UNABLE",
          "methodReason": "UNSUPPORTED_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt: androidx.core.animation.Animator$AnimatorListener doOnStart(androidx.core.animation.Animator,kotlin.jvm.functions.Function1)>",
          "methodType": "NEED_BUT_UNABLE",
          "methodReason": "UNSUPPORTED_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt: androidx.core.animation.Animator$AnimatorListener doOnCancel(androidx.core.animation.Animator,kotlin.jvm.functions.Function1)>",
          "methodType": "NEED_BUT_UNABLE",
          "methodReason": "UNSUPPORTED_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt: androidx.core.animation.Animator$AnimatorListener doOnRepeat(androidx.core.animation.Animator,kotlin.jvm.functions.Function1)>",
          "methodType": "NEED_BUT_UNABLE",
          "methodReason": "UNSUPPORTED_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt: androidx.core.animation.Animator$AnimatorListener addListener(androidx.core.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)>",
          "methodType": "NEED_BUT_UNABLE",
          "methodReason": "UNSUPPORTED_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt: androidx.core.animation.Animator$AnimatorListener addListener$default(androidx.core.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.util.DialogKt$registerAnimationOnBackInvoked$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.util.DialogKt$registerAnimationOnBackInvoked$1: void <init>(android.view.View)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.DialogKt$registerAnimationOnBackInvoked$1: void invoke(com.android.systemui.animation.back.BackTransformation)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.DialogKt$registerAnimationOnBackInvoked$1: java.lang.Object invoke(java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.util.DialogKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.util.DialogKt: void registerAnimationOnBackInvoked(android.app.Dialog,android.view.View,com.android.systemui.animation.back.BackAnimationSpec)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.DialogKt: void registerAnimationOnBackInvoked$default(android.app.Dialog,android.view.View,com.android.systemui.animation.back.BackAnimationSpec,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.DialogKt: void registerAnimationOnBackInvoked(android.app.Dialog,android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.back.BackTransformation",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "DATA_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.back.BackTransformation: void <init>(float,float,float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.back.BackTransformation: void <init>(float,float,float,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.back.BackTransformation: float getTranslateX()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.back.BackTransformation: void setTranslateX(float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.back.BackTransformation: float getTranslateY()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.back.BackTransformation: void setTranslateY(float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.back.BackTransformation: float getScale()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.back.BackTransformation: void setScale(float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.back.BackTransformation: float component1()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.back.BackTransformation: float component2()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.back.BackTransformation: float component3()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.back.BackTransformation: com.android.systemui.animation.back.BackTransformation copy(float,float,float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.back.BackTransformation: com.android.systemui.animation.back.BackTransformation copy$default(com.android.systemui.animation.back.BackTransformation,float,float,float,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.back.BackTransformation: java.lang.String toString()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.back.BackTransformation: int hashCode()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.back.BackTransformation: boolean equals(java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.back.BackTransformation: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.back.BackAnimationSpec",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.back.BackAnimationSpec: void getBackTransformation(android.window.BackEvent,float,com.android.systemui.animation.back.BackTransformation)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.back.BackAnimationSpec: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.back.BackTransformationKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.back.BackTransformationKt: void applyTo(com.android.systemui.animation.back.BackTransformation,android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.util.DialogKt$registerAnimationOnBackInvoked$2",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.util.DialogKt$registerAnimationOnBackInvoked$2: void <init>(android.app.Dialog)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.DialogKt$registerAnimationOnBackInvoked$2: void invoke()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.DialogKt$registerAnimationOnBackInvoked$2: java.lang.Object invoke()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.util.AnimatorExtensionsKt$doOnEnd$$inlined$addListener$default$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt$doOnEnd$$inlined$addListener$default$1: void <init>(kotlin.jvm.functions.Function1)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt$doOnEnd$$inlined$addListener$default$1: void onAnimationRepeat(androidx.core.animation.Animator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt$doOnEnd$$inlined$addListener$default$1: void onAnimationEnd(androidx.core.animation.Animator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt$doOnEnd$$inlined$addListener$default$1: void onAnimationCancel(androidx.core.animation.Animator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt$doOnEnd$$inlined$addListener$default$1: void onAnimationStart(androidx.core.animation.Animator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.util.AnimatorExtensionsKt$addListener$2",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt$addListener$2: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt$addListener$2: void invoke(androidx.core.animation.Animator)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt$addListener$2: java.lang.Object invoke(java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt$addListener$2: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.util.AnimatorExtensionsKt$addListener$listener$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt$addListener$listener$1: void <init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt$addListener$listener$1: void onAnimationRepeat(androidx.core.animation.Animator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt$addListener$listener$1: void onAnimationEnd(androidx.core.animation.Animator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt$addListener$listener$1: void onAnimationCancel(androidx.core.animation.Animator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt$addListener$listener$1: void onAnimationStart(androidx.core.animation.Animator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.util.AnimatorExtensionsKt$doOnRepeat$$inlined$addListener$default$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt$doOnRepeat$$inlined$addListener$default$1: void <init>(kotlin.jvm.functions.Function1)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt$doOnRepeat$$inlined$addListener$default$1: void onAnimationRepeat(androidx.core.animation.Animator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt$doOnRepeat$$inlined$addListener$default$1: void onAnimationEnd(androidx.core.animation.Animator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt$doOnRepeat$$inlined$addListener$default$1: void onAnimationCancel(androidx.core.animation.Animator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt$doOnRepeat$$inlined$addListener$default$1: void onAnimationStart(androidx.core.animation.Animator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.util.AnimatorExtensionsKt$addListener$4",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt$addListener$4: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt$addListener$4: void invoke(androidx.core.animation.Animator)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt$addListener$4: java.lang.Object invoke(java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt$addListener$4: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.util.AnimatorExtensionsKt$addListener$3",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt$addListener$3: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt$addListener$3: void invoke(androidx.core.animation.Animator)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt$addListener$3: java.lang.Object invoke(java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt$addListener$3: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.util.JankUtils",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.util.JankUtils: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.JankUtils: void latencySceneBegin(android.content.Context,int,java.lang.String,long)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.JankUtils: void latencySceneEnd(android.content.Context,int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.JankUtils: void gfxSceneBegin(android.content.Context,int,java.lang.String,long,long)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.JankUtils: void gfxSceneEnd(android.content.Context,int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.JankUtils: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.back.OnBackAnimationCallbackExtensionKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.back.OnBackAnimationCallbackExtensionKt: android.window.OnBackAnimationCallback onBackAnimationCallbackFrom(com.android.systemui.animation.back.BackAnimationSpec,android.util.DisplayMetrics,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0)>",
          "methodType": "NEED_BUT_UNABLE",
          "methodReason": "UNSUPPORTED_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.back.OnBackAnimationCallbackExtensionKt: android.window.OnBackAnimationCallback onBackAnimationCallbackFrom$default(com.android.systemui.animation.back.BackAnimationSpec,android.util.DisplayMetrics,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.back.OnBackAnimationCallbackExtensionKt: void registerOnBackInvokedCallbackOnViewAttached(android.view.View,android.window.OnBackInvokedDispatcher,android.window.OnBackAnimationCallback,int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.back.OnBackAnimationCallbackExtensionKt: void registerOnBackInvokedCallbackOnViewAttached$default(android.view.View,android.window.OnBackInvokedDispatcher,android.window.OnBackAnimationCallback,int,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.back.BackAnimationSpec$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.back.BackAnimationSpec$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.back.BackAnimationSpec$Companion: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.back.BackAnimationSpecForSysUiKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.back.BackAnimationSpecForSysUiKt: com.android.systemui.animation.back.BackAnimationSpec dismissAppForSysUi(com.android.systemui.animation.back.BackAnimationSpec$Companion,android.util.DisplayMetrics)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.back.BackAnimationSpecForSysUiKt: com.android.systemui.animation.back.BackAnimationSpec crossTaskForSysUi(com.android.systemui.animation.back.BackAnimationSpec$Companion,android.util.DisplayMetrics)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.back.BackAnimationSpecForSysUiKt: com.android.systemui.animation.back.BackAnimationSpec innerAreaDismissForSysUi(com.android.systemui.animation.back.BackAnimationSpec$Companion,android.util.DisplayMetrics)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.back.BackAnimationSpecForSysUiKt: com.android.systemui.animation.back.BackAnimationSpec floatingSystemSurfacesForSysUi(com.android.systemui.animation.back.BackAnimationSpec$Companion,android.util.DisplayMetrics)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.util.AnimatorExtensionsKt$doOnCancel$$inlined$addListener$default$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt$doOnCancel$$inlined$addListener$default$1: void <init>(kotlin.jvm.functions.Function1)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt$doOnCancel$$inlined$addListener$default$1: void onAnimationRepeat(androidx.core.animation.Animator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt$doOnCancel$$inlined$addListener$default$1: void onAnimationEnd(androidx.core.animation.Animator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt$doOnCancel$$inlined$addListener$default$1: void onAnimationCancel(androidx.core.animation.Animator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt$doOnCancel$$inlined$addListener$default$1: void onAnimationStart(androidx.core.animation.Animator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.util.AnimatorExtensionsKt$addListener$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt$addListener$1: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt$addListener$1: void invoke(androidx.core.animation.Animator)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt$addListener$1: java.lang.Object invoke(java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.util.AnimatorExtensionsKt$addListener$1: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.FontInterpolator$lerp$$inlined$sortBy$2",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$lerp$$inlined$sortBy$2: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$lerp$$inlined$sortBy$2: int compare(java.lang.Object,java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.FontInterpolator",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator: void <init>(java.lang.Integer)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator: void <init>(java.lang.Integer,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator: int getCacheMaxEntries()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator: android.graphics.fonts.Font lerp(android.graphics.fonts.Font,android.graphics.fonts.Font,float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator: java.util.List lerp(android.graphics.fonts.FontVariationAxis[],android.graphics.fonts.FontVariationAxis[],kotlin.jvm.functions.Function3)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator: float adjustItalic(float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator: float coerceInWithStep(float,float,float,float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator: float access$adjustItalic(com.android.systemui.animation.FontInterpolator,float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.FontInterpolator$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$Companion: boolean canInterpolate(android.graphics.fonts.Font,android.graphics.fonts.Font)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.FontInterpolator$InterpKey",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$InterpKey: void <init>(android.graphics.fonts.Font,android.graphics.fonts.Font,float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$InterpKey: android.graphics.fonts.Font getL()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$InterpKey: void setL(android.graphics.fonts.Font)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$InterpKey: android.graphics.fonts.Font getR()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$InterpKey: void setR(android.graphics.fonts.Font)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$InterpKey: float getProgress()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$InterpKey: void setProgress(float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$InterpKey: void set(android.graphics.fonts.Font,android.graphics.fonts.Font,float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$InterpKey: android.graphics.fonts.Font component1()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$InterpKey: android.graphics.fonts.Font component2()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$InterpKey: float component3()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$InterpKey: com.android.systemui.animation.FontInterpolator$InterpKey copy(android.graphics.fonts.Font,android.graphics.fonts.Font,float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$InterpKey: com.android.systemui.animation.FontInterpolator$InterpKey copy$default(com.android.systemui.animation.FontInterpolator$InterpKey,android.graphics.fonts.Font,android.graphics.fonts.Font,float,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$InterpKey: java.lang.String toString()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$InterpKey: int hashCode()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$InterpKey: boolean equals(java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.FontInterpolator$VarFontKey",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$VarFontKey: void <init>(int,int,java.util.List)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$VarFontKey: int getSourceId()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$VarFontKey: void setSourceId(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$VarFontKey: int getIndex()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$VarFontKey: void setIndex(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$VarFontKey: java.util.List getSortedAxes()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$VarFontKey: void <init>(android.graphics.fonts.Font,java.util.List)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$VarFontKey: void set(android.graphics.fonts.Font,java.util.List)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$VarFontKey: int component1()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$VarFontKey: int component2()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$VarFontKey: java.util.List component3()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$VarFontKey: com.android.systemui.animation.FontInterpolator$VarFontKey copy(int,int,java.util.List)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$VarFontKey: com.android.systemui.animation.FontInterpolator$VarFontKey copy$default(com.android.systemui.animation.FontInterpolator$VarFontKey,int,int,java.util.List,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$VarFontKey: java.lang.String toString()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$VarFontKey: int hashCode()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$VarFontKey: boolean equals(java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.ViewHierarchyAnimator$Bound$LEFT",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Bound$LEFT: void <init>(java.lang.String,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Bound$LEFT: void setValue(android.view.View,int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Bound$LEFT: int getValue(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.ViewHierarchyAnimator$Bound",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Bound: void <init>(java.lang.String,int,java.lang.String,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Bound: java.lang.String getLabel()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Bound: int getOverrideTag()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Bound: void setValue(android.view.View,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Bound: int getValue(android.view.View)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Bound: com.android.systemui.animation.ViewHierarchyAnimator$Bound[] values()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Bound: com.android.systemui.animation.ViewHierarchyAnimator$Bound valueOf(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Bound: com.android.systemui.animation.ViewHierarchyAnimator$Bound[] $values()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Bound: void <init>(java.lang.String,int,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Bound: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.ViewHierarchyAnimator",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator: android.view.animation.Interpolator access$getDEFAULT_INTERPOLATOR$cp()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator: android.view.animation.Interpolator access$getDEFAULT_ADDITION_INTERPOLATOR$cp()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator: android.view.animation.Interpolator access$getDEFAULT_FADE_IN_INTERPOLATOR$cp()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator: android.view.animation.Interpolator access$getDEFAULT_REMOVAL_INTERPOLATOR$cp()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator: java.util.Map access$getPROPERTIES$cp()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.ViewHierarchyAnimator$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: android.util.IntProperty createViewProperty(com.android.systemui.animation.ViewHierarchyAnimator$Bound)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: boolean animate(android.view.View,android.view.animation.Interpolator,long)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: boolean animate$default(com.android.systemui.animation.ViewHierarchyAnimator$Companion,android.view.View,android.view.animation.Interpolator,long,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: boolean animateNextUpdate(android.view.View,android.view.animation.Interpolator,long)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: boolean animateNextUpdate$default(com.android.systemui.animation.ViewHierarchyAnimator$Companion,android.view.View,android.view.animation.Interpolator,long,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: boolean animate(android.view.View,android.view.animation.Interpolator,long,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: android.view.View$OnLayoutChangeListener createUpdateListener(android.view.animation.Interpolator,long,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: void stopAnimating(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: boolean animateAddition(android.view.View,com.android.systemui.animation.ViewHierarchyAnimator$Hotspot,android.view.animation.Interpolator,long,boolean,boolean,android.view.animation.Interpolator,java.lang.Runnable)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: boolean animateAddition$default(com.android.systemui.animation.ViewHierarchyAnimator$Companion,android.view.View,com.android.systemui.animation.ViewHierarchyAnimator$Hotspot,android.view.animation.Interpolator,long,boolean,boolean,android.view.animation.Interpolator,java.lang.Runnable,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: android.view.View$OnLayoutChangeListener createAdditionListener(com.android.systemui.animation.ViewHierarchyAnimator$Hotspot,android.view.animation.Interpolator,long,boolean,java.lang.Runnable)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: android.view.View$OnLayoutChangeListener createAdditionListener$default(com.android.systemui.animation.ViewHierarchyAnimator$Companion,com.android.systemui.animation.ViewHierarchyAnimator$Hotspot,android.view.animation.Interpolator,long,boolean,java.lang.Runnable,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: android.view.View$OnLayoutChangeListener createListener(android.view.animation.Interpolator,long,boolean,com.android.systemui.animation.ViewHierarchyAnimator$Hotspot,boolean,java.lang.Runnable)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: android.view.View$OnLayoutChangeListener createListener$default(com.android.systemui.animation.ViewHierarchyAnimator$Companion,android.view.animation.Interpolator,long,boolean,com.android.systemui.animation.ViewHierarchyAnimator$Hotspot,boolean,java.lang.Runnable,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: boolean animateRemoval(android.view.View,com.android.systemui.animation.ViewHierarchyAnimator$Hotspot,android.view.animation.Interpolator,long,boolean,java.lang.Runnable)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: boolean animateRemoval$default(com.android.systemui.animation.ViewHierarchyAnimator$Companion,android.view.View,com.android.systemui.animation.ViewHierarchyAnimator$Hotspot,android.view.animation.Interpolator,long,boolean,java.lang.Runnable,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: void shiftChildrenForRemoval(android.view.ViewGroup,com.android.systemui.animation.ViewHierarchyAnimator$Hotspot,java.util.Map,android.view.animation.Interpolator,long)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: boolean occupiesSpace(int,int,int,int,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: java.util.Map processStartValues(com.android.systemui.animation.ViewHierarchyAnimator$Hotspot,int,int,int,int,int,int,int,int,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: java.util.Map processEndValuesForRemoval(com.android.systemui.animation.ViewHierarchyAnimator$Hotspot,android.view.View,int,int,int,int,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: java.util.Map processEndValuesForRemoval$default(com.android.systemui.animation.ViewHierarchyAnimator$Companion,com.android.systemui.animation.ViewHierarchyAnimator$Hotspot,android.view.View,int,int,int,int,boolean,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: java.util.Map processChildEndValuesForRemoval(com.android.systemui.animation.ViewHierarchyAnimator$Hotspot,int,int,int,int,int,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: void addListener(android.view.View,android.view.View$OnLayoutChangeListener,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: void addListener$default(com.android.systemui.animation.ViewHierarchyAnimator$Companion,android.view.View,android.view.View$OnLayoutChangeListener,boolean,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: void recursivelyRemoveListener(android.view.View)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: java.lang.Integer getBound(android.view.View,com.android.systemui.animation.ViewHierarchyAnimator$Bound)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: void setBound(android.view.View,com.android.systemui.animation.ViewHierarchyAnimator$Bound,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: void startAnimation(android.view.View,java.util.Set,java.util.Map,java.util.Map,android.view.animation.Interpolator,long,boolean,java.lang.Runnable)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: void startAnimation$default(com.android.systemui.animation.ViewHierarchyAnimator$Companion,android.view.View,java.util.Set,java.util.Map,java.util.Map,android.view.animation.Interpolator,long,boolean,java.lang.Runnable,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: void createAndStartFadeInAnimator(android.view.View,long,long,android.view.animation.Interpolator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: boolean animate(android.view.View,android.view.animation.Interpolator)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: boolean animate(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: boolean animateNextUpdate(android.view.View,android.view.animation.Interpolator)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: boolean animateNextUpdate(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: boolean animateAddition(android.view.View,com.android.systemui.animation.ViewHierarchyAnimator$Hotspot,android.view.animation.Interpolator,long,boolean,boolean,android.view.animation.Interpolator)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: boolean animateAddition(android.view.View,com.android.systemui.animation.ViewHierarchyAnimator$Hotspot,android.view.animation.Interpolator,long,boolean,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: boolean animateAddition(android.view.View,com.android.systemui.animation.ViewHierarchyAnimator$Hotspot,android.view.animation.Interpolator,long,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: boolean animateAddition(android.view.View,com.android.systemui.animation.ViewHierarchyAnimator$Hotspot,android.view.animation.Interpolator,long)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: boolean animateAddition(android.view.View,com.android.systemui.animation.ViewHierarchyAnimator$Hotspot,android.view.animation.Interpolator)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: boolean animateAddition(android.view.View,com.android.systemui.animation.ViewHierarchyAnimator$Hotspot)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: boolean animateAddition(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: boolean animateRemoval(android.view.View,com.android.systemui.animation.ViewHierarchyAnimator$Hotspot,android.view.animation.Interpolator,long,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: boolean animateRemoval(android.view.View,com.android.systemui.animation.ViewHierarchyAnimator$Hotspot,android.view.animation.Interpolator,long)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: boolean animateRemoval(android.view.View,com.android.systemui.animation.ViewHierarchyAnimator$Hotspot,android.view.animation.Interpolator)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: boolean animateRemoval(android.view.View,com.android.systemui.animation.ViewHierarchyAnimator$Hotspot)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: boolean animateRemoval(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: void animateRemoval$lambda$0(boolean,android.view.ViewGroup,android.view.View,java.lang.Runnable)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: void animateRemoval$lambda$1(android.view.View,float[],android.animation.ValueAnimator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: void access$setBound(com.android.systemui.animation.ViewHierarchyAnimator$Companion,android.view.View,com.android.systemui.animation.ViewHierarchyAnimator$Bound,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: java.lang.Integer access$getBound(com.android.systemui.animation.ViewHierarchyAnimator$Companion,android.view.View,com.android.systemui.animation.ViewHierarchyAnimator$Bound)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: boolean access$occupiesSpace(com.android.systemui.animation.ViewHierarchyAnimator$Companion,int,int,int,int,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: java.util.Map access$processStartValues(com.android.systemui.animation.ViewHierarchyAnimator$Companion,com.android.systemui.animation.ViewHierarchyAnimator$Hotspot,int,int,int,int,int,int,int,int,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: void access$startAnimation(com.android.systemui.animation.ViewHierarchyAnimator$Companion,android.view.View,java.util.Set,java.util.Map,java.util.Map,android.view.animation.Interpolator,long,boolean,java.lang.Runnable)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: void access$recursivelyRemoveListener(com.android.systemui.animation.ViewHierarchyAnimator$Companion,android.view.View)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion: android.util.IntProperty access$createViewProperty(com.android.systemui.animation.ViewHierarchyAnimator$Companion,com.android.systemui.animation.ViewHierarchyAnimator$Bound)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.R$id",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.R$id: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.R",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.R: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.AnimationFeatureFlags",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.AnimationFeatureFlags: boolean isPredictiveBackQsDialogAnim()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.FontInterpolator$VarFontKey$set$$inlined$sortBy$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$VarFontKey$set$$inlined$sortBy$1: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$VarFontKey$set$$inlined$sortBy$1: int compare(java.lang.Object,java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.FontInterpolator$VarFontKey$_init_$lambda$1$$inlined$sortBy$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$VarFontKey$_init_$lambda$1$$inlined$sortBy$1: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$VarFontKey$_init_$lambda$1$$inlined$sortBy$1: int compare(java.lang.Object,java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.LaunchAnimator$Interpolators",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$Interpolators: void <init>(android.view.animation.Interpolator,android.view.animation.Interpolator,android.view.animation.Interpolator,android.view.animation.Interpolator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$Interpolators: void <init>(android.view.animation.Interpolator,android.view.animation.Interpolator,android.view.animation.Interpolator,android.view.animation.Interpolator,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$Interpolators: android.view.animation.Interpolator getPositionInterpolator()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$Interpolators: android.view.animation.Interpolator getPositionXInterpolator()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$Interpolators: android.view.animation.Interpolator getContentBeforeFadeOutInterpolator()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$Interpolators: android.view.animation.Interpolator getContentAfterFadeInInterpolator()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$Interpolators: android.view.animation.Interpolator component1()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$Interpolators: android.view.animation.Interpolator component2()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$Interpolators: android.view.animation.Interpolator component3()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$Interpolators: android.view.animation.Interpolator component4()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$Interpolators: com.android.systemui.animation.LaunchAnimator$Interpolators copy(android.view.animation.Interpolator,android.view.animation.Interpolator,android.view.animation.Interpolator,android.view.animation.Interpolator)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$Interpolators: com.android.systemui.animation.LaunchAnimator$Interpolators copy$default(com.android.systemui.animation.LaunchAnimator$Interpolators,android.view.animation.Interpolator,android.view.animation.Interpolator,android.view.animation.Interpolator,android.view.animation.Interpolator,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$Interpolators: java.lang.String toString()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$Interpolators: int hashCode()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$Interpolators: boolean equals(java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.LaunchAnimator",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator: void <init>(com.android.systemui.animation.LaunchAnimator$Timings,com.android.systemui.animation.LaunchAnimator$Interpolators)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator: com.android.systemui.animation.LaunchAnimator$Animation startAnimation(com.android.systemui.animation.LaunchAnimator$Controller,com.android.systemui.animation.LaunchAnimator$State,int,boolean,boolean,com.android.systemui.animation.LaunchAnimator$State)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator: com.android.systemui.animation.LaunchAnimator$Animation startAnimation$default(com.android.systemui.animation.LaunchAnimator,com.android.systemui.animation.LaunchAnimator$Controller,com.android.systemui.animation.LaunchAnimator$State,int,boolean,boolean,com.android.systemui.animation.LaunchAnimator$State,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator: boolean isExpandingFullyAbove$SystemUI_debug(android.view.View,com.android.systemui.animation.LaunchAnimator$State)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator: void applyStateToWindowBackgroundLayer(android.graphics.drawable.GradientDrawable,com.android.systemui.animation.LaunchAnimator$State,float,android.view.View,boolean,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator: void startAnimation$maybeUpdateEndState(kotlin.jvm.internal.Ref$IntRef,com.android.systemui.animation.LaunchAnimator$State,kotlin.jvm.internal.Ref$IntRef,kotlin.jvm.internal.Ref$IntRef,kotlin.jvm.internal.Ref$IntRef,kotlin.jvm.internal.Ref$FloatRef,kotlin.jvm.internal.Ref$IntRef)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator: void startAnimation$lambda$1(kotlin.jvm.internal.Ref$BooleanRef,com.android.systemui.animation.LaunchAnimator,float,kotlin.jvm.internal.Ref$FloatRef,int,kotlin.jvm.internal.Ref$IntRef,com.android.systemui.animation.LaunchAnimator$State,int,kotlin.jvm.internal.Ref$IntRef,int,kotlin.jvm.internal.Ref$IntRef,float,float,float,float,boolean,kotlin.jvm.internal.Ref$BooleanRef,android.view.ViewGroupOverlay,android.graphics.drawable.GradientDrawable,android.view.ViewOverlay,android.view.ViewGroup,android.view.View,com.android.systemui.animation.LaunchAnimator$Controller,boolean,boolean,com.android.systemui.animation.LaunchAnimator$State,kotlin.jvm.internal.Ref$IntRef,kotlin.jvm.internal.Ref$IntRef,android.animation.ValueAnimator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator: float getProgress(com.android.systemui.animation.LaunchAnimator$Timings,float,long,long)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.LaunchAnimator$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$Companion: float getProgress(com.android.systemui.animation.LaunchAnimator$Timings,float,long,long)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.LaunchAnimator$Timings",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$Timings: void <init>(long,long,long,long,long)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$Timings: long getTotalDuration()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$Timings: long getContentBeforeFadeOutDelay()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$Timings: long getContentBeforeFadeOutDuration()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$Timings: long getContentAfterFadeInDelay()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$Timings: long getContentAfterFadeInDuration()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$Timings: long component1()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$Timings: long component2()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$Timings: long component3()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$Timings: long component4()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$Timings: long component5()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$Timings: com.android.systemui.animation.LaunchAnimator$Timings copy(long,long,long,long,long)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$Timings: com.android.systemui.animation.LaunchAnimator$Timings copy$default(com.android.systemui.animation.LaunchAnimator$Timings,long,long,long,long,long,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$Timings: java.lang.String toString()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$Timings: int hashCode()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$Timings: boolean equals(java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.LaunchAnimator$Animation",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$Animation: void cancel()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.LaunchAnimator$Controller",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$Controller: android.view.ViewGroup getLaunchContainer()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$Controller: void setLaunchContainer(android.view.ViewGroup)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$Controller: android.view.View getOpeningWindowSyncView()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$Controller: com.android.systemui.animation.LaunchAnimator$State createAnimatorState()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$Controller: void onLaunchAnimationStart(boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$Controller: void onLaunchAnimationProgress(com.android.systemui.animation.LaunchAnimator$State,float,float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$Controller: void onLaunchAnimationEnd(boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.LaunchAnimator$State",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$State: void <init>(int,int,int,int,float,float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$State: void <init>(int,int,int,int,float,float,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$State: int getTop()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$State: void setTop(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$State: int getBottom()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$State: void setBottom(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$State: int getLeft()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$State: void setLeft(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$State: int getRight()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$State: void setRight(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$State: float getTopCornerRadius()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$State: void setTopCornerRadius(float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$State: float getBottomCornerRadius()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$State: void setBottomCornerRadius(float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$State: int getWidth()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$State: int getHeight()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$State: int getTopChange()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$State: float getCenterX()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$State: float getCenterY()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$State: boolean getVisible()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$State: void setVisible(boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$State: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.DialogLaunchAnimator",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator: void <init>(com.android.systemui.animation.DialogLaunchAnimator$Callback,com.android.internal.jank.InteractionJankMonitor,com.android.systemui.animation.AnimationFeatureFlags,com.android.systemui.animation.LaunchAnimator,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator: void <init>(com.android.systemui.animation.DialogLaunchAnimator$Callback,com.android.internal.jank.InteractionJankMonitor,com.android.systemui.animation.AnimationFeatureFlags,com.android.systemui.animation.LaunchAnimator,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator: void showFromView(android.app.Dialog,android.view.View,com.android.systemui.animation.DialogCuj,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator: void showFromView$default(com.android.systemui.animation.DialogLaunchAnimator,android.app.Dialog,android.view.View,com.android.systemui.animation.DialogCuj,boolean,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator: void show(android.app.Dialog,com.android.systemui.animation.DialogLaunchAnimator$Controller,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator: void show$default(com.android.systemui.animation.DialogLaunchAnimator,android.app.Dialog,com.android.systemui.animation.DialogLaunchAnimator$Controller,boolean,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator: void showFromDialog(android.app.Dialog,android.app.Dialog,com.android.systemui.animation.DialogCuj,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator: void showFromDialog$default(com.android.systemui.animation.DialogLaunchAnimator,android.app.Dialog,android.app.Dialog,com.android.systemui.animation.DialogCuj,boolean,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator: com.android.systemui.animation.ActivityLaunchAnimator$Controller createActivityLaunchController(android.view.View,java.lang.Integer)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator: com.android.systemui.animation.ActivityLaunchAnimator$Controller createActivityLaunchController$default(com.android.systemui.animation.DialogLaunchAnimator,android.view.View,java.lang.Integer,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator: com.android.systemui.animation.ActivityLaunchAnimator$Controller createActivityLaunchController(android.app.Dialog,java.lang.Integer)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator: com.android.systemui.animation.ActivityLaunchAnimator$Controller createActivityLaunchController$default(com.android.systemui.animation.DialogLaunchAnimator,android.app.Dialog,java.lang.Integer,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator: com.android.systemui.animation.ActivityLaunchAnimator$Controller createActivityLaunchController(com.android.systemui.animation.AnimatedDialog,java.lang.Integer)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator: com.android.systemui.animation.ActivityLaunchAnimator$Controller createActivityLaunchController$default(com.android.systemui.animation.DialogLaunchAnimator,com.android.systemui.animation.AnimatedDialog,java.lang.Integer,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator: void disableAllCurrentDialogsExitAnimations()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator: void dismissStack(android.app.Dialog)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator: void <init>(com.android.systemui.animation.DialogLaunchAnimator$Callback,com.android.internal.jank.InteractionJankMonitor,com.android.systemui.animation.AnimationFeatureFlags,com.android.systemui.animation.LaunchAnimator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator: void <init>(com.android.systemui.animation.DialogLaunchAnimator$Callback,com.android.internal.jank.InteractionJankMonitor,com.android.systemui.animation.AnimationFeatureFlags)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator: void showFromView(android.app.Dialog,android.view.View,com.android.systemui.animation.DialogCuj)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator: void showFromView(android.app.Dialog,android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator: void show(android.app.Dialog,com.android.systemui.animation.DialogLaunchAnimator$Controller)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator: com.android.systemui.animation.ActivityLaunchAnimator$Controller createActivityLaunchController(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator: com.android.systemui.animation.ActivityLaunchAnimator$Controller createActivityLaunchController(android.app.Dialog)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator: java.util.HashSet access$getOpenedDialogs$p(com.android.systemui.animation.DialogLaunchAnimator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.DialogLaunchAnimator$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.DialogLaunchAnimator$Callback",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator$Callback: boolean isDreaming()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator$Callback: boolean isUnlocked()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator$Callback: boolean isShowingAlternateAuthOnUnlock()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.DialogCuj",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "DATA_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.DialogCuj: void <init>(int,java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogCuj: void <init>(int,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogCuj: int getCujType()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogCuj: java.lang.String getTag()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogCuj: int component1()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogCuj: java.lang.String component2()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogCuj: com.android.systemui.animation.DialogCuj copy(int,java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogCuj: com.android.systemui.animation.DialogCuj copy$default(com.android.systemui.animation.DialogCuj,int,java.lang.String,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogCuj: java.lang.String toString()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogCuj: int hashCode()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogCuj: boolean equals(java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.DialogLaunchAnimator$Controller",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator$Controller: android.view.ViewRootImpl getViewRoot()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator$Controller: java.lang.Object getSourceIdentity()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator$Controller: com.android.systemui.animation.DialogCuj getCuj()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator$Controller: void startDrawingInOverlayOf(android.view.ViewGroup)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator$Controller: void stopDrawingInOverlay()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator$Controller: com.android.systemui.animation.LaunchAnimator$Controller createLaunchController()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator$Controller: com.android.systemui.animation.LaunchAnimator$Controller createExitController()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator$Controller: boolean shouldAnimateExit()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator$Controller: void onExitAnimationCancelled()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator$Controller: com.android.internal.jank.InteractionJankMonitor$Configuration$Builder jankConfigurationBuilder()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator$Controller: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.ActivityLaunchAnimator$Controller",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$Controller: boolean isDialogLaunch()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$Controller: boolean isNoAnimator()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$Controller: boolean isSeedlingAnimator()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$Controller: boolean isSeedlingCardAnimator()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$Controller: boolean isBelowAnimatingWindow()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$Controller: void onIntentStarted(boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$Controller: void onLaunchAnimationCancelled(java.lang.Boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$Controller: void onLaunchAnimationCancelled$default(com.android.systemui.animation.ActivityLaunchAnimator$Controller,java.lang.Boolean,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$Controller: com.android.systemui.animation.ActivityLaunchAnimator$Controller fromView(android.view.View,java.lang.Integer)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$Controller: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.AnimatedDialog",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "NON_PUBLIC_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog: void <init>(com.android.systemui.animation.LaunchAnimator,com.android.systemui.animation.DialogLaunchAnimator$Callback,com.android.internal.jank.InteractionJankMonitor,com.android.systemui.animation.DialogLaunchAnimator$Controller,kotlin.jvm.functions.Function1,android.app.Dialog,boolean,com.android.systemui.animation.AnimatedDialog,boolean,com.android.systemui.animation.AnimationFeatureFlags)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog: void <init>(com.android.systemui.animation.LaunchAnimator,com.android.systemui.animation.DialogLaunchAnimator$Callback,com.android.internal.jank.InteractionJankMonitor,com.android.systemui.animation.DialogLaunchAnimator$Controller,kotlin.jvm.functions.Function1,android.app.Dialog,boolean,com.android.systemui.animation.AnimatedDialog,boolean,com.android.systemui.animation.AnimationFeatureFlags,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog: com.android.systemui.animation.DialogLaunchAnimator$Controller getController()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog: android.app.Dialog getDialog()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog: android.view.ViewGroup getDecorView()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog: android.view.ViewGroup getDialogContentWithBackground()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog: void setDialogContentWithBackground(android.view.ViewGroup)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog: boolean getExitAnimationDisabled()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog: void setExitAnimationDisabled(boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog: void start()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog: void moveSourceDrawingToDialog()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog: void synchronizeNextDraw(kotlin.jvm.functions.Function0)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog: android.view.ViewGroup findFirstViewGroupWithBackground(android.view.View)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog: void maybeStartLaunchAnimation()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog: void onDialogDismissed()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog: void hideDialogIntoView(kotlin.jvm.functions.Function1)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog: void startAnimation(boolean,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog: void startAnimation$default(com.android.systemui.animation.AnimatedDialog,boolean,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog: boolean shouldAnimateDialogIntoSource()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog: void prepareForStackDismiss()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog: void start$lambda$0(com.android.systemui.animation.AnimatedDialog,android.view.View)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog: void start$lambda$1(android.view.Window,com.android.systemui.animation.LaunchableFrameLayout,android.view.View,int,int,int,int,int,int,int,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog: android.view.WindowInsets start$lambda$2(boolean,android.view.View,android.view.WindowInsets)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog: void onDialogDismissed$lambda$3(com.android.systemui.animation.AnimatedDialog)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog: void access$setOriginalDialogViewLaidOut$p(com.android.systemui.animation.AnimatedDialog,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog: void access$maybeStartLaunchAnimation(com.android.systemui.animation.AnimatedDialog)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog: void access$setSourceDrawnInDialog$p(com.android.systemui.animation.AnimatedDialog,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog: void access$setLaunching$p(com.android.systemui.animation.AnimatedDialog,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog: boolean access$getDismissRequested$p(com.android.systemui.animation.AnimatedDialog)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog: com.android.systemui.animation.AnimatedDialog$AnimatedBoundsLayoutListener access$getBackgroundLayoutListener$p(com.android.systemui.animation.AnimatedDialog)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog: boolean access$getHasInstrumentedJank$p(com.android.systemui.animation.AnimatedDialog)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog: com.android.internal.jank.InteractionJankMonitor access$getInteractionJankMonitor$p(com.android.systemui.animation.AnimatedDialog)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog: void access$synchronizeNextDraw(com.android.systemui.animation.AnimatedDialog,kotlin.jvm.functions.Function0)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog: kotlin.jvm.functions.Function1 access$getOnDialogDismissed$p(com.android.systemui.animation.AnimatedDialog)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.ActivityLaunchAnimator",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator: void <init>(com.android.systemui.animation.LaunchAnimator,com.android.systemui.animation.LaunchAnimator,com.android.systemui.animation.LaunchAnimator,com.android.systemui.animation.LaunchAnimator,com.android.systemui.animation.LaunchAnimator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator: void <init>(com.android.systemui.animation.LaunchAnimator,com.android.systemui.animation.LaunchAnimator,com.android.systemui.animation.LaunchAnimator,com.android.systemui.animation.LaunchAnimator,com.android.systemui.animation.LaunchAnimator,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator: com.android.systemui.animation.ActivityLaunchAnimator$Callback getCallback()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator: void setCallback(com.android.systemui.animation.ActivityLaunchAnimator$Callback)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator: void startIntentWithAnimation(com.android.systemui.animation.ActivityLaunchAnimator$Controller,boolean,java.lang.String,boolean,boolean,kotlin.jvm.functions.Function1)>",
          "methodType": "NEED_BUT_UNABLE",
          "methodReason": "UNSUPPORTED_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator: void startIntentWithAnimation$default(com.android.systemui.animation.ActivityLaunchAnimator,com.android.systemui.animation.ActivityLaunchAnimator$Controller,boolean,java.lang.String,boolean,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator: void callOnIntentStartedOnMainThread(com.android.systemui.animation.ActivityLaunchAnimator$Controller,boolean,com.android.systemui.animation.ActivityLaunchAnimator$Runner)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator: void callOnIntentStartedOnMainThread$default(com.android.systemui.animation.ActivityLaunchAnimator,com.android.systemui.animation.ActivityLaunchAnimator$Controller,boolean,com.android.systemui.animation.ActivityLaunchAnimator$Runner,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator: void startPendingIntentWithAnimation(com.android.systemui.animation.ActivityLaunchAnimator$Controller,boolean,java.lang.String,boolean,com.android.systemui.animation.ActivityLaunchAnimator$PendingIntentStarter)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator: void startPendingIntentWithAnimation$default(com.android.systemui.animation.ActivityLaunchAnimator,com.android.systemui.animation.ActivityLaunchAnimator$Controller,boolean,java.lang.String,boolean,com.android.systemui.animation.ActivityLaunchAnimator$PendingIntentStarter,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator: void addListener(com.android.systemui.animation.ActivityLaunchAnimator$Listener)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator: void removeListener(com.android.systemui.animation.ActivityLaunchAnimator$Listener)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator: com.android.systemui.animation.ActivityLaunchAnimator$Runner createRunner(com.android.systemui.animation.ActivityLaunchAnimator$Controller)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator: void startIntentWithAnimation(com.android.systemui.animation.ActivityLaunchAnimator$Controller,boolean,java.lang.String,boolean,kotlin.jvm.functions.Function1)>",
          "methodType": "NEED_BUT_UNABLE",
          "methodReason": "UNSUPPORTED_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator: void startIntentWithAnimation(com.android.systemui.animation.ActivityLaunchAnimator$Controller,boolean,java.lang.String,kotlin.jvm.functions.Function1)>",
          "methodType": "NEED_BUT_UNABLE",
          "methodReason": "UNSUPPORTED_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator: void startIntentWithAnimation(com.android.systemui.animation.ActivityLaunchAnimator$Controller,boolean,kotlin.jvm.functions.Function1)>",
          "methodType": "NEED_BUT_UNABLE",
          "methodReason": "UNSUPPORTED_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator: void startIntentWithAnimation(com.android.systemui.animation.ActivityLaunchAnimator$Controller,kotlin.jvm.functions.Function1)>",
          "methodType": "NEED_BUT_UNABLE",
          "methodReason": "UNSUPPORTED_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator: void startPendingIntentWithAnimation(com.android.systemui.animation.ActivityLaunchAnimator$Controller,boolean,java.lang.String,com.android.systemui.animation.ActivityLaunchAnimator$PendingIntentStarter)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator: void startPendingIntentWithAnimation(com.android.systemui.animation.ActivityLaunchAnimator$Controller,boolean,com.android.systemui.animation.ActivityLaunchAnimator$PendingIntentStarter)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator: void startPendingIntentWithAnimation(com.android.systemui.animation.ActivityLaunchAnimator$Controller,com.android.systemui.animation.ActivityLaunchAnimator$PendingIntentStarter)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator: void callOnIntentStartedOnMainThread$lambda$0(com.android.systemui.animation.ActivityLaunchAnimator$Controller,boolean,com.android.systemui.animation.ActivityLaunchAnimator$Runner)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator: com.android.systemui.animation.LaunchAnimator$Timings access$getDIALOG_TIMINGS$cp()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator: com.android.systemui.animation.LaunchAnimator$Interpolators access$getINTERPOLATORS$cp()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator: com.android.systemui.animation.LaunchAnimator$Timings access$getNO_ANIM$cp()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator: com.android.systemui.animation.LaunchAnimator access$getDEFAULT_LAUNCH_ANIMATOR$cp()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator: long access$getANIMATION_DELAY_NAV_FADE_IN$cp()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator: android.view.animation.Interpolator access$getNAV_FADE_IN_INTERPOLATOR$cp()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator: android.view.animation.PathInterpolator access$getNAV_FADE_OUT_INTERPOLATOR$cp()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator: java.util.LinkedHashSet access$getListeners$p(com.android.systemui.animation.ActivityLaunchAnimator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.DialogLaunchAnimator$createActivityLaunchController$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator$createActivityLaunchController$1: void <init>(com.android.systemui.animation.ActivityLaunchAnimator$Controller,android.app.Dialog,com.android.systemui.animation.AnimatedDialog)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator$createActivityLaunchController$1: boolean isBelowAnimatingWindow()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator$createActivityLaunchController$1: boolean isNoAnimator()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator$createActivityLaunchController$1: boolean isSeedlingAnimator()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator$createActivityLaunchController$1: boolean isSeedlingCardAnimator()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator$createActivityLaunchController$1: android.view.ViewGroup getLaunchContainer()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator$createActivityLaunchController$1: void setLaunchContainer(android.view.ViewGroup)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator$createActivityLaunchController$1: android.view.View getOpeningWindowSyncView()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator$createActivityLaunchController$1: com.android.systemui.animation.LaunchAnimator$State createAnimatorState()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator$createActivityLaunchController$1: void onLaunchAnimationProgress(com.android.systemui.animation.LaunchAnimator$State,float,float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator$createActivityLaunchController$1: boolean isDialogLaunch()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator$createActivityLaunchController$1: void onIntentStarted(boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator$createActivityLaunchController$1: void onLaunchAnimationCancelled(java.lang.Boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator$createActivityLaunchController$1: void onLaunchAnimationStart(boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator$createActivityLaunchController$1: void onLaunchAnimationEnd(boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator$createActivityLaunchController$1: void disableDialogDismiss()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator$createActivityLaunchController$1: void enableDialogDismiss()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator$createActivityLaunchController$1: void disableDialogDismiss$lambda$0()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.DialogLaunchAnimator$Controller$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator$Controller$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator$Controller$Companion: com.android.systemui.animation.DialogLaunchAnimator$Controller fromView(android.view.View,com.android.systemui.animation.DialogCuj)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator$Controller$Companion: com.android.systemui.animation.DialogLaunchAnimator$Controller fromView$default(com.android.systemui.animation.DialogLaunchAnimator$Controller$Companion,android.view.View,com.android.systemui.animation.DialogCuj,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator$Controller$Companion: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.ActivityLaunchAnimator$Controller$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$Controller$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$Controller$Companion: com.android.systemui.animation.ActivityLaunchAnimator$Controller fromView(android.view.View,java.lang.Integer)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$Controller$Companion: com.android.systemui.animation.ActivityLaunchAnimator$Controller fromView$default(com.android.systemui.animation.ActivityLaunchAnimator$Controller$Companion,android.view.View,java.lang.Integer,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$Controller$Companion: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.DialogLaunchAnimator$show$animatedDialog$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator$show$animatedDialog$1: void <init>(com.android.systemui.animation.DialogLaunchAnimator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator$show$animatedDialog$1: void invoke(com.android.systemui.animation.AnimatedDialog)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DialogLaunchAnimator$show$animatedDialog$1: java.lang.Object invoke(java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.ActivityLaunchAnimator$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$Companion: com.android.systemui.animation.LaunchAnimator$Timings getDIALOG_TIMINGS()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$Companion: com.android.systemui.animation.LaunchAnimator$Interpolators getINTERPOLATORS()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$Companion: com.android.systemui.animation.LaunchAnimator$Timings getNO_ANIM()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$Companion: android.view.animation.Interpolator createPositionXInterpolator()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$Companion: android.view.animation.Interpolator access$createPositionXInterpolator(com.android.systemui.animation.ActivityLaunchAnimator$Companion)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.ActivityLaunchAnimator$Callback",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$Callback: boolean isOnKeyguard()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$Callback: void hideKeyguardWithAnimation(android.view.IRemoteAnimationRunner)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$Callback: int getBackgroundColor(android.app.TaskInfo)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.ActivityLaunchAnimator$lifecycleListener$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$lifecycleListener$1: void <init>(com.android.systemui.animation.ActivityLaunchAnimator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$lifecycleListener$1: void onLaunchAnimationStart()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$lifecycleListener$1: void onLaunchAnimationEnd()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$lifecycleListener$1: void onLaunchAnimationProgress(float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.ActivityLaunchAnimator$Runner",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$Runner: void <init>(com.android.systemui.animation.ActivityLaunchAnimator,com.android.systemui.animation.ActivityLaunchAnimator$Controller,com.android.systemui.animation.ActivityLaunchAnimator$Callback,com.android.systemui.animation.LaunchAnimator,com.android.systemui.animation.ActivityLaunchAnimator$Listener)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$Runner: void <init>(com.android.systemui.animation.ActivityLaunchAnimator,com.android.systemui.animation.ActivityLaunchAnimator$Controller,com.android.systemui.animation.ActivityLaunchAnimator$Callback,com.android.systemui.animation.LaunchAnimator,com.android.systemui.animation.ActivityLaunchAnimator$Listener,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$Runner: com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate getDelegate$SystemUI_debug()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$Runner: void onAnimationStart(int,android.view.RemoteAnimationTarget[],android.view.RemoteAnimationTarget[],android.view.RemoteAnimationTarget[],android.view.IRemoteAnimationFinishedCallback)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$Runner: void onAnimationCancelled()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$Runner: void onAnimationStart$lambda$0(com.android.systemui.animation.ActivityLaunchAnimator$Runner,int,android.view.RemoteAnimationTarget[],android.view.RemoteAnimationTarget[],android.view.RemoteAnimationTarget[],android.view.IRemoteAnimationFinishedCallback)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$Runner: void onAnimationCancelled$lambda$1(com.android.systemui.animation.ActivityLaunchAnimator$Runner)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.ActivityLaunchAnimator$PendingIntentStarter",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$PendingIntentStarter: int startPendingIntent(android.view.RemoteAnimationAdapter)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.ActivityLaunchAnimator$Listener",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$Listener: void onLaunchAnimationStart()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$Listener: void onLaunchAnimationEnd()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$Listener: void onLaunchAnimationProgress(float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.AnimatedDialog$AnimatedBoundsLayoutListener",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$AnimatedBoundsLayoutListener: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$AnimatedBoundsLayoutListener: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$AnimatedBoundsLayoutListener: void onLayoutChange$lambda$2$lambda$1(android.graphics.Rect,int,int,int,int,int,int,int,int,android.view.View,android.animation.ValueAnimator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$AnimatedBoundsLayoutListener: void access$setCurrentAnimator$p(com.android.systemui.animation.AnimatedDialog$AnimatedBoundsLayoutListener,android.animation.ValueAnimator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$AnimatedBoundsLayoutListener: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.LaunchableFrameLayout",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.LaunchableFrameLayout: void <init>(android.content.Context)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchableFrameLayout: void <init>(android.content.Context,android.util.AttributeSet)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchableFrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchableFrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchableFrameLayout: void setShouldBlockVisibilityChanges(boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchableFrameLayout: void setVisibility(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchableFrameLayout: void access$setVisibility$s1310765783(com.android.systemui.animation.LaunchableFrameLayout,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.LaunchableView",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.LaunchableView: void setShouldBlockVisibilityChanges(boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.TextAnimator$setTextStyle$listener$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator$setTextStyle$listener$1: void <init>(java.lang.Runnable,com.android.systemui.animation.TextAnimator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator$setTextStyle$listener$1: void onAnimationEnd(android.animation.Animator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator$setTextStyle$listener$1: void onAnimationCancel(android.animation.Animator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.TextAnimator",
      "classType": "NEED_BUT_UNABLE",
      "classReason": "UNSUPPORTED_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator: void <init>(android.text.Layout,java.lang.Integer,kotlin.jvm.functions.Function0)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator: void <init>(android.text.Layout,java.lang.Integer,kotlin.jvm.functions.Function0,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator: com.android.systemui.animation.TypefaceVariantCache getTypefaceCache()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator: void setTypefaceCache(com.android.systemui.animation.TypefaceVariantCache)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator: com.android.systemui.animation.TextInterpolator getTextInterpolator()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator: void setTextInterpolator(com.android.systemui.animation.TextInterpolator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator: android.animation.ValueAnimator getAnimator()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator: void setAnimator(android.animation.ValueAnimator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator: float calculateProgress(float,java.lang.Integer)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator: void updateLayout(android.text.Layout)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator: boolean isRunning()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator: kotlin.jvm.functions.Function2 getGlyphFilter()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator: void setGlyphFilter(kotlin.jvm.functions.Function2)>",
          "methodType": "NEED_BUT_UNABLE",
          "methodReason": "UNSUPPORTED_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator: void draw(android.graphics.Canvas)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator: void setTextStyle(java.lang.String,float,java.lang.Integer,float,boolean,long,android.animation.TimeInterpolator,long,java.lang.Runnable)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator: void setTextStyle$default(com.android.systemui.animation.TextAnimator,java.lang.String,float,java.lang.Integer,float,boolean,long,android.animation.TimeInterpolator,long,java.lang.Runnable,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator: void setTextStyle(int,int,int,int,float,java.lang.Integer,float,boolean,long,android.animation.TimeInterpolator,long,java.lang.Runnable)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator: void setTextStyle$default(com.android.systemui.animation.TextAnimator,int,int,int,int,float,java.lang.Integer,float,boolean,long,android.animation.TimeInterpolator,long,java.lang.Runnable,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator: void animator$lambda$1$lambda$0(com.android.systemui.animation.TextAnimator,java.lang.Integer,android.animation.ValueAnimator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.TypefaceVariantCache",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.TypefaceVariantCache: android.graphics.Typeface getTypefaceForVariant(java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TypefaceVariantCache: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.TextInterpolator",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator: void <init>(android.text.Layout,com.android.systemui.animation.TypefaceVariantCache,java.lang.Integer)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator: void <init>(android.text.Layout,com.android.systemui.animation.TypefaceVariantCache,java.lang.Integer,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator: com.android.systemui.animation.TypefaceVariantCache getTypefaceCache()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator: void setTypefaceCache(com.android.systemui.animation.TypefaceVariantCache)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator: android.text.TextPaint getBasePaint()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator: android.text.TextPaint getTargetPaint()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator: android.text.TextPaint getTmpPaintForGlyph()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator: com.android.systemui.animation.TextInterpolator$MutablePositionedGlyph getTmpGlyph()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator: float getProgress()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator: void setProgress(float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator: android.text.Layout getLayout()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator: void setLayout(android.text.Layout)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator: java.lang.String getShapedText()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator: void onTargetPaintModified()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator: void onBasePaintModified()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator: void rebase()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator: void draw(android.graphics.Canvas)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator: void shapeText(android.text.Layout)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator: kotlin.jvm.functions.Function2 getGlyphFilter()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator: void setGlyphFilter(kotlin.jvm.functions.Function2)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator: void drawFontRun(android.graphics.Canvas,com.android.systemui.animation.TextInterpolator$Run,com.android.systemui.animation.TextInterpolator$FontRun,int,android.graphics.Paint)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator: void updatePositionsAndFonts(java.util.List,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator: void lerp(android.graphics.Paint,android.graphics.Paint,float,android.graphics.Paint)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator: java.util.List shapeText(android.text.Layout,android.text.TextPaint)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator: void shapeText$lambda$24(java.util.List,int,int,android.graphics.text.PositionedGlyphs,android.text.TextPaint)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.FontVariationUtils",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.FontVariationUtils: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontVariationUtils: java.lang.String updateFontVariation(int,int,int,int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontVariationUtils: java.lang.String updateFontVariation$default(com.android.systemui.animation.FontVariationUtils,int,int,int,int,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.GhostedViewLaunchAnimatorController$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.GhostedViewLaunchAnimatorController$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.GhostedViewLaunchAnimatorController$Companion: android.graphics.drawable.GradientDrawable findGradientDrawable(android.graphics.drawable.Drawable)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.GhostedViewLaunchAnimatorController$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.GhostedViewLaunchAnimatorController",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.GhostedViewLaunchAnimatorController: void <init>(android.view.View,java.lang.Integer,com.android.internal.jank.InteractionJankMonitor)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.GhostedViewLaunchAnimatorController: void <init>(android.view.View,java.lang.Integer,com.android.internal.jank.InteractionJankMonitor,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.GhostedViewLaunchAnimatorController: android.view.ViewGroup getLaunchContainer()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.GhostedViewLaunchAnimatorController: void setLaunchContainer(android.view.ViewGroup)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.GhostedViewLaunchAnimatorController: android.view.ViewGroupOverlay getLaunchContainerOverlay()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.GhostedViewLaunchAnimatorController: android.graphics.Insets getBackgroundInsets()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.GhostedViewLaunchAnimatorController: boolean isSeedlingCardAnimator()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.GhostedViewLaunchAnimatorController: void setSeedlingCardAnimator(boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.GhostedViewLaunchAnimatorController: void setBackgroundCornerRadius(android.graphics.drawable.Drawable,float,float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.GhostedViewLaunchAnimatorController: float getCurrentTopCornerRadius()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.GhostedViewLaunchAnimatorController: float getCurrentBottomCornerRadius()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.GhostedViewLaunchAnimatorController: com.android.systemui.animation.LaunchAnimator$State createAnimatorState()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.GhostedViewLaunchAnimatorController: void fillGhostedViewState(com.android.systemui.animation.LaunchAnimator$State)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.GhostedViewLaunchAnimatorController: void onLaunchAnimationStart(boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.GhostedViewLaunchAnimatorController: void onLaunchAnimationProgress(com.android.systemui.animation.LaunchAnimator$State,float,float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.GhostedViewLaunchAnimatorController: void onLaunchAnimationEnd(boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.GhostedViewLaunchAnimatorController: void <init>(android.view.View,java.lang.Integer)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.GhostedViewLaunchAnimatorController: void <init>(android.view.View)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.GhostedViewLaunchAnimatorController: android.graphics.drawable.Drawable _init_$findBackground(android.view.View)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.GhostedViewLaunchAnimatorController: android.graphics.drawable.Drawable access$getBackground$p(com.android.systemui.animation.GhostedViewLaunchAnimatorController)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.GhostedViewLaunchAnimatorController: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.GhostedViewLaunchAnimatorController$WrappedDrawable",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.GhostedViewLaunchAnimatorController$WrappedDrawable: void <init>(android.graphics.drawable.Drawable)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.GhostedViewLaunchAnimatorController$WrappedDrawable: android.graphics.drawable.Drawable getWrapped()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.GhostedViewLaunchAnimatorController$WrappedDrawable: boolean isSeedlingCard()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.GhostedViewLaunchAnimatorController$WrappedDrawable: void setSeedlingCard(boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.GhostedViewLaunchAnimatorController$WrappedDrawable: void draw(android.graphics.Canvas)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.GhostedViewLaunchAnimatorController$WrappedDrawable: void setAlpha(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.GhostedViewLaunchAnimatorController$WrappedDrawable: int getAlpha()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.GhostedViewLaunchAnimatorController$WrappedDrawable: int getOpacity()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.GhostedViewLaunchAnimatorController$WrappedDrawable: void setColorFilter(android.graphics.ColorFilter)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.GhostedViewLaunchAnimatorController$WrappedDrawable: void setBackgroundRadius(float,float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.GhostedViewLaunchAnimatorController$WrappedDrawable: void updateRadii(float[],float,float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.GhostedViewLaunchAnimatorController$WrappedDrawable: void applyBackgroundRadii()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.GhostedViewLaunchAnimatorController$WrappedDrawable: void savePreviousBackgroundRadii(android.graphics.drawable.Drawable)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.GhostedViewLaunchAnimatorController$WrappedDrawable: void applyBackgroundRadii(android.graphics.drawable.Drawable,float[])>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.GhostedViewLaunchAnimatorController$WrappedDrawable: java.lang.Integer savePreviousBackgroundColor(android.graphics.drawable.Drawable)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.GhostedViewLaunchAnimatorController$WrappedDrawable: void applyBackgroundColor(android.graphics.drawable.Drawable,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.GhostedViewLaunchAnimatorController$WrappedDrawable: void restoreBackgroundRadii()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.TypefaceVariantCache$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.TypefaceVariantCache$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TypefaceVariantCache$Companion: android.graphics.Typeface createVariantTypeface(android.graphics.Typeface,java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TypefaceVariantCache$Companion: boolean createVariantTypeface$lambda$0(kotlin.jvm.functions.Function1,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TypefaceVariantCache$Companion: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.ViewHierarchyAnimator$Bound$TOP",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Bound$TOP: void <init>(java.lang.String,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Bound$TOP: void setValue(android.view.View,int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Bound$TOP: int getValue(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.ViewHierarchyAnimator$Bound$BOTTOM",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Bound$BOTTOM: void <init>(java.lang.String,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Bound$BOTTOM: void setValue(android.view.View,int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Bound$BOTTOM: int getValue(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.ViewHierarchyAnimator$Bound$RIGHT",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Bound$RIGHT: void <init>(java.lang.String,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Bound$RIGHT: void setValue(android.view.View,int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Bound$RIGHT: int getValue(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.ViewRootSync",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.ViewRootSync: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewRootSync: void synchronizeNextDraw(android.view.View,android.view.View,kotlin.jvm.functions.Function0)>",
          "methodType": "NEED_BUT_UNABLE",
          "methodReason": "UNSUPPORTED_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewRootSync: void synchronizeNextDraw(android.view.View,android.view.View,java.lang.Runnable)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewRootSync: void synchronizeNextDraw$lambda$0(kotlin.jvm.functions.Function0)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewRootSync: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.ViewRootSync$synchronizeNextDraw$2",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.ViewRootSync$synchronizeNextDraw$2: void <init>(java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewRootSync$synchronizeNextDraw$2: void invoke()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewRootSync$synchronizeNextDraw$2: java.lang.Object invoke()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.ViewHierarchyAnimator$Companion$WhenMappings",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion$WhenMappings: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.ViewHierarchyAnimator$Hotspot",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Hotspot: void <init>(java.lang.String,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Hotspot: com.android.systemui.animation.ViewHierarchyAnimator$Hotspot[] values()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Hotspot: com.android.systemui.animation.ViewHierarchyAnimator$Hotspot valueOf(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Hotspot: com.android.systemui.animation.ViewHierarchyAnimator$Hotspot[] $values()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Hotspot: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.ViewDialogLaunchAnimatorController",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.ViewDialogLaunchAnimatorController: void <init>(android.view.View,com.android.systemui.animation.DialogCuj)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewDialogLaunchAnimatorController: com.android.systemui.animation.DialogCuj getCuj()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewDialogLaunchAnimatorController: android.view.ViewRootImpl getViewRoot()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewDialogLaunchAnimatorController: java.lang.Object getSourceIdentity()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewDialogLaunchAnimatorController: void startDrawingInOverlayOf(android.view.ViewGroup)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewDialogLaunchAnimatorController: void stopDrawingInOverlay()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewDialogLaunchAnimatorController: com.android.systemui.animation.LaunchAnimator$Controller createLaunchController()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewDialogLaunchAnimatorController: com.android.systemui.animation.LaunchAnimator$Controller createExitController()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewDialogLaunchAnimatorController: boolean shouldAnimateExit()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewDialogLaunchAnimatorController: void onExitAnimationCancelled()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewDialogLaunchAnimatorController: com.android.internal.jank.InteractionJankMonitor$Configuration$Builder jankConfigurationBuilder()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewDialogLaunchAnimatorController: android.view.View access$getSource$p(com.android.systemui.animation.ViewDialogLaunchAnimatorController)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.ViewDialogLaunchAnimatorController$createLaunchController$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.ViewDialogLaunchAnimatorController$createLaunchController$1: void <init>(com.android.systemui.animation.GhostedViewLaunchAnimatorController,com.android.systemui.animation.ViewDialogLaunchAnimatorController)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewDialogLaunchAnimatorController$createLaunchController$1: android.view.ViewGroup getLaunchContainer()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewDialogLaunchAnimatorController$createLaunchController$1: void setLaunchContainer(android.view.ViewGroup)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewDialogLaunchAnimatorController$createLaunchController$1: android.view.View getOpeningWindowSyncView()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewDialogLaunchAnimatorController$createLaunchController$1: com.android.systemui.animation.LaunchAnimator$State createAnimatorState()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewDialogLaunchAnimatorController$createLaunchController$1: void onLaunchAnimationProgress(com.android.systemui.animation.LaunchAnimator$State,float,float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewDialogLaunchAnimatorController$createLaunchController$1: void onLaunchAnimationStart(boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewDialogLaunchAnimatorController$createLaunchController$1: void onLaunchAnimationEnd(boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.AnimatedDialog$decorView$2",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$decorView$2: void <init>(com.android.systemui.animation.AnimatedDialog)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$decorView$2: android.view.ViewGroup invoke()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$decorView$2: java.lang.Object invoke()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.TextInterpolator$MutablePositionedGlyph",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator$MutablePositionedGlyph: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator$MutablePositionedGlyph: int getRunStart()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator$MutablePositionedGlyph: void setRunStart(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator$MutablePositionedGlyph: int getRunLength()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator$MutablePositionedGlyph: void setRunLength(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator$MutablePositionedGlyph: int getGlyphIndex()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator$MutablePositionedGlyph: void setGlyphIndex(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator$MutablePositionedGlyph: android.graphics.fonts.Font getFont()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator$MutablePositionedGlyph: void setFont(android.graphics.fonts.Font)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator$MutablePositionedGlyph: int getGlyphId()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator$MutablePositionedGlyph: void setGlyphId(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.TextAnimator$PositionedGlyph",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator$PositionedGlyph: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator$PositionedGlyph: float getX()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator$PositionedGlyph: void setX(float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator$PositionedGlyph: float getY()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator$PositionedGlyph: void setY(float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator$PositionedGlyph: int getLineNo()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator$PositionedGlyph: void setLineNo(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator$PositionedGlyph: float getTextSize()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator$PositionedGlyph: void setTextSize(float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator$PositionedGlyph: int getColor()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator$PositionedGlyph: void setColor(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator$PositionedGlyph: int getRunStart()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator$PositionedGlyph: void setRunStart(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator$PositionedGlyph: int getRunLength()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator$PositionedGlyph: void setRunLength(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator$PositionedGlyph: int getGlyphIndex()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator$PositionedGlyph: void setGlyphIndex(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator$PositionedGlyph: android.graphics.fonts.Font getFont()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator$PositionedGlyph: void setFont(android.graphics.fonts.Font)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator$PositionedGlyph: int getGlyphId()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator$PositionedGlyph: void setGlyphId(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator$PositionedGlyph: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.TextInterpolator$Run",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator$Run: void <init>(int[],float[],float[],float[],float[],java.util.List)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator$Run: int[] getGlyphIds()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator$Run: float[] getBaseX()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator$Run: float[] getBaseY()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator$Run: float[] getTargetX()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator$Run: float[] getTargetY()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator$Run: java.util.List getFontRuns()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.TextInterpolator$FontRun",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator$FontRun: void <init>(int,int,android.graphics.fonts.Font,android.graphics.fonts.Font)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator$FontRun: int getStart()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator$FontRun: int getEnd()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator$FontRun: android.graphics.fonts.Font getBaseFont()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator$FontRun: void setBaseFont(android.graphics.fonts.Font)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator$FontRun: android.graphics.fonts.Font getTargetFont()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator$FontRun: void setTargetFont(android.graphics.fonts.Font)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator$FontRun: int getLength()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator$FontRun: int component1()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator$FontRun: int component2()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator$FontRun: android.graphics.fonts.Font component3()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator$FontRun: android.graphics.fonts.Font component4()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator$FontRun: com.android.systemui.animation.TextInterpolator$FontRun copy(int,int,android.graphics.fonts.Font,android.graphics.fonts.Font)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator$FontRun: com.android.systemui.animation.TextInterpolator$FontRun copy$default(com.android.systemui.animation.TextInterpolator$FontRun,int,int,android.graphics.fonts.Font,android.graphics.fonts.Font,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator$FontRun: java.lang.String toString()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator$FontRun: int hashCode()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator$FontRun: boolean equals(java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.back.OnBackAnimationCallbackExtensionKt$onBackAnimationCallbackFrom$3",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.back.OnBackAnimationCallbackExtensionKt$onBackAnimationCallbackFrom$3: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.back.OnBackAnimationCallbackExtensionKt$onBackAnimationCallbackFrom$3: void invoke()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.back.OnBackAnimationCallbackExtensionKt$onBackAnimationCallbackFrom$3: java.lang.Object invoke()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.back.OnBackAnimationCallbackExtensionKt$onBackAnimationCallbackFrom$3: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.back.OnBackAnimationCallbackExtensionKt$onBackAnimationCallbackFrom$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.back.OnBackAnimationCallbackExtensionKt$onBackAnimationCallbackFrom$1: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.back.OnBackAnimationCallbackExtensionKt$onBackAnimationCallbackFrom$1: void invoke(android.window.BackEvent)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.back.OnBackAnimationCallbackExtensionKt$onBackAnimationCallbackFrom$1: java.lang.Object invoke(java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.back.OnBackAnimationCallbackExtensionKt$onBackAnimationCallbackFrom$1: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.back.OnBackAnimationCallbackExtensionKt$registerOnBackInvokedCallbackOnViewAttached$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.back.OnBackAnimationCallbackExtensionKt$registerOnBackInvokedCallbackOnViewAttached$1: void <init>(android.window.OnBackInvokedDispatcher,int,android.window.OnBackAnimationCallback,android.view.View)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.back.OnBackAnimationCallbackExtensionKt$registerOnBackInvokedCallbackOnViewAttached$1: void onViewAttachedToWindow(android.view.View)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.back.OnBackAnimationCallbackExtensionKt$registerOnBackInvokedCallbackOnViewAttached$1: void onViewDetachedFromWindow(android.view.View)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.back.OnBackAnimationCallbackExtensionKt$onBackAnimationCallbackFrom$2",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.back.OnBackAnimationCallbackExtensionKt$onBackAnimationCallbackFrom$2: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.back.OnBackAnimationCallbackExtensionKt$onBackAnimationCallbackFrom$2: void invoke()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.back.OnBackAnimationCallbackExtensionKt$onBackAnimationCallbackFrom$2: java.lang.Object invoke()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.back.OnBackAnimationCallbackExtensionKt$onBackAnimationCallbackFrom$2: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.back.OnBackAnimationCallbackExtensionKt$onBackAnimationCallbackFrom$4",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.back.OnBackAnimationCallbackExtensionKt$onBackAnimationCallbackFrom$4: void <init>(kotlin.jvm.functions.Function1,android.util.DisplayMetrics,com.android.systemui.animation.back.BackAnimationSpec,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.back.OnBackAnimationCallbackExtensionKt$onBackAnimationCallbackFrom$4: void onBackStarted(android.window.BackEvent)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.back.OnBackAnimationCallbackExtensionKt$onBackAnimationCallbackFrom$4: void onBackProgressed(android.window.BackEvent)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.back.OnBackAnimationCallbackExtensionKt$onBackAnimationCallbackFrom$4: void onBackInvoked()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.back.OnBackAnimationCallbackExtensionKt$onBackAnimationCallbackFrom$4: void onBackCancelled()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.back.BackAnimationSpecKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.back.BackAnimationSpecKt: com.android.systemui.animation.back.BackAnimationSpec createFloatingSurfaceAnimationSpec(com.android.systemui.animation.back.BackAnimationSpec$Companion,android.util.DisplayMetrics,float,float,float,android.view.animation.Interpolator,android.view.animation.Interpolator,android.view.animation.Interpolator)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.back.BackAnimationSpecKt: com.android.systemui.animation.back.BackAnimationSpec createFloatingSurfaceAnimationSpec$default(com.android.systemui.animation.back.BackAnimationSpec$Companion,android.util.DisplayMetrics,float,float,float,android.view.animation.Interpolator,android.view.animation.Interpolator,android.view.animation.Interpolator,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.back.BackAnimationSpecKt: void createFloatingSurfaceAnimationSpec$lambda$1(android.view.animation.Interpolator,android.view.animation.Interpolator,android.view.animation.Interpolator,float,float,float,android.window.BackEvent,float,com.android.systemui.animation.back.BackTransformation)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.TextInterpolator$Line",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator$Line: void <init>(java.util.List)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator$Line: java.util.List getRuns()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.ViewHierarchyAnimator$DimenHolder",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$DimenHolder: void <init>(int,int,int,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$DimenHolder: int getLeft()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$DimenHolder: int getTop()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$DimenHolder: int getRight()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$DimenHolder: int getBottom()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$DimenHolder: int component1()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$DimenHolder: int component2()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$DimenHolder: int component3()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$DimenHolder: int component4()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$DimenHolder: com.android.systemui.animation.ViewHierarchyAnimator$DimenHolder copy(int,int,int,int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$DimenHolder: com.android.systemui.animation.ViewHierarchyAnimator$DimenHolder copy$default(com.android.systemui.animation.ViewHierarchyAnimator$DimenHolder,int,int,int,int,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$DimenHolder: java.lang.String toString()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$DimenHolder: int hashCode()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$DimenHolder: boolean equals(java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.AnimatedDialog$AnimatedBoundsLayoutListener$onLayoutChange$animator$1$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$AnimatedBoundsLayoutListener$onLayoutChange$animator$1$1: void <init>(com.android.systemui.animation.AnimatedDialog$AnimatedBoundsLayoutListener)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$AnimatedBoundsLayoutListener$onLayoutChange$animator$1$1: void onAnimationEnd(android.animation.Animator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.AnimatedDialog$AnimatedBoundsLayoutListener$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$AnimatedBoundsLayoutListener$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$AnimatedBoundsLayoutListener$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.TextInterpolator$tmpGlyph$2",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator$tmpGlyph$2: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator$tmpGlyph$2: com.android.systemui.animation.TextInterpolator$MutablePositionedGlyph invoke()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator$tmpGlyph$2: java.lang.Object invoke()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator$tmpGlyph$2: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.ViewHierarchyAnimator$Companion$createListener$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion$createListener$1: void <init>(com.android.systemui.animation.ViewHierarchyAnimator$Hotspot,boolean,android.view.animation.Interpolator,long,boolean,java.lang.Runnable)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion$createListener$1: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.Expandable",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.Expandable: com.android.systemui.animation.ActivityLaunchAnimator$Controller activityLaunchController(java.lang.Integer)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.Expandable: com.android.systemui.animation.ActivityLaunchAnimator$Controller activityLaunchController$default(com.android.systemui.animation.Expandable,java.lang.Integer,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.Expandable: com.android.systemui.animation.DialogLaunchAnimator$Controller dialogLaunchController(com.android.systemui.animation.DialogCuj)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.Expandable: com.android.systemui.animation.DialogLaunchAnimator$Controller dialogLaunchController$default(com.android.systemui.animation.Expandable,com.android.systemui.animation.DialogCuj,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.Expandable: com.android.systemui.animation.Expandable fromView(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.Expandable: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.Expandable$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.Expandable$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.Expandable$Companion: com.android.systemui.animation.Expandable fromView(android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.Expandable$Companion: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate: void <init>(com.android.systemui.animation.ActivityLaunchAnimator$Controller,com.android.systemui.animation.ActivityLaunchAnimator$Callback,com.android.systemui.animation.ActivityLaunchAnimator$Listener,com.android.systemui.animation.LaunchAnimator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate: void <init>(com.android.systemui.animation.ActivityLaunchAnimator$Controller,com.android.systemui.animation.ActivityLaunchAnimator$Callback,com.android.systemui.animation.ActivityLaunchAnimator$Listener,com.android.systemui.animation.LaunchAnimator,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate: boolean getNotificationClickFlag()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate: void setNotificationClickFlag(boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate: boolean isAnimationCancelled$SystemUI_debug()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate: void postTimeout$SystemUI_debug()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate: void removeTimeout()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate: void onAnimationStart(int,android.view.RemoteAnimationTarget[],android.view.RemoteAnimationTarget[],android.view.RemoteAnimationTarget[],android.view.IRemoteAnimationFinishedCallback)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate: android.view.RemoteAnimationTarget findRootTaskIfPossible(android.view.RemoteAnimationTarget[])>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate: void startAnimation(android.view.RemoteAnimationTarget[],android.view.RemoteAnimationTarget[],android.view.IRemoteAnimationFinishedCallback)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate: void applyStateToWindow(android.view.RemoteAnimationTarget,com.android.systemui.animation.LaunchAnimator$State,float,java.lang.Float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate: void applyStateToWindow$default(com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate,android.view.RemoteAnimationTarget,com.android.systemui.animation.LaunchAnimator$State,float,java.lang.Float,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate: void applyStateToNavigationBar(android.view.RemoteAnimationTarget,com.android.systemui.animation.LaunchAnimator$State,float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate: void onAnimationTimedOut()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate: void onAnimationCancelled()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate: void invoke(android.view.IRemoteAnimationFinishedCallback)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate: void <init>(com.android.systemui.animation.ActivityLaunchAnimator$Controller,com.android.systemui.animation.ActivityLaunchAnimator$Callback,com.android.systemui.animation.ActivityLaunchAnimator$Listener)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate: void <init>(com.android.systemui.animation.ActivityLaunchAnimator$Controller,com.android.systemui.animation.ActivityLaunchAnimator$Callback)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate: void onTimeout$lambda$0(com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate: com.android.systemui.animation.ActivityLaunchAnimator$Listener access$getListener$p(com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate: android.content.Context access$getContext$p(com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate: void access$invoke(com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate,android.view.IRemoteAnimationFinishedCallback)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate: void access$applyStateToNavigationBar(com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate,android.view.RemoteAnimationTarget,com.android.systemui.animation.LaunchAnimator$State,float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.RemoteAnimationDelegate",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.RemoteAnimationDelegate: void onAnimationStart(int,android.view.RemoteAnimationTarget[],android.view.RemoteAnimationTarget[],android.view.RemoteAnimationTarget[],android.view.IRemoteAnimationFinishedCallback)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.RemoteAnimationDelegate: void onAnimationCancelled()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.FontInterpolator$lerp$$inlined$sortBy$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$lerp$$inlined$sortBy$1: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$lerp$$inlined$sortBy$1: int compare(java.lang.Object,java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.ViewHierarchyAnimator$Companion$createAndStartFadeInAnimator$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion$createAndStartFadeInAnimator$1: void <init>(android.view.View)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion$createAndStartFadeInAnimator$1: void onAnimationEnd(android.animation.Animator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.AnimatedDialog$start$2",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$start$2: void <init>(java.lang.Object,com.android.systemui.animation.AnimatedDialog)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$start$2: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.ViewHierarchyAnimator$Companion$animateRemoval$2",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion$animateRemoval$2: void <init>(android.view.View,long)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion$animateRemoval$2: void onAnimationEnd(android.animation.Animator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.TypefaceVariantCacheImpl",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.TypefaceVariantCacheImpl: void <init>(android.graphics.Typeface)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TypefaceVariantCacheImpl: android.graphics.Typeface getBaseTypeface()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TypefaceVariantCacheImpl: void setBaseTypeface(android.graphics.Typeface)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TypefaceVariantCacheImpl: android.graphics.Typeface getTypefaceForVariant(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.TextAnimator$animator$1$2",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator$animator$1$2: void <init>(com.android.systemui.animation.TextAnimator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator$animator$1$2: void onAnimationEnd(android.animation.Animator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextAnimator$animator$1$2: void onAnimationCancel(android.animation.Animator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.FontInterpolator$lerp$newAxes$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$lerp$newAxes$1: void <init>(float,com.android.systemui.animation.FontInterpolator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$lerp$newAxes$1: java.lang.Float invoke(java.lang.String,java.lang.Float,java.lang.Float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolator$lerp$newAxes$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.AnimatedDialog$startAnimation$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$startAnimation$1: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$startAnimation$1: void invoke()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$startAnimation$1: java.lang.Object invoke()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$startAnimation$1: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.AnimatedDialog$moveSourceDrawingToDialog$2",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$moveSourceDrawingToDialog$2: void <init>(com.android.systemui.animation.AnimatedDialog)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$moveSourceDrawingToDialog$2: void invoke()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$moveSourceDrawingToDialog$2: java.lang.Object invoke()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.R$style",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.R$style: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.AnimatedDialog$maybeStartLaunchAnimation$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$maybeStartLaunchAnimation$1: void <init>(com.android.systemui.animation.AnimatedDialog)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$maybeStartLaunchAnimation$1: void invoke()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$maybeStartLaunchAnimation$1: java.lang.Object invoke()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.AnimatedDialog$startAnimation$controller$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$startAnimation$controller$1: void <init>(com.android.systemui.animation.LaunchAnimator$Controller,com.android.systemui.animation.LaunchAnimator$Controller,kotlin.jvm.functions.Function0,com.android.systemui.animation.AnimatedDialog,kotlin.jvm.functions.Function0,com.android.systemui.animation.LaunchAnimator$State)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$startAnimation$controller$1: android.view.ViewGroup getLaunchContainer()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$startAnimation$controller$1: void setLaunchContainer(android.view.ViewGroup)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$startAnimation$controller$1: com.android.systemui.animation.LaunchAnimator$State createAnimatorState()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$startAnimation$controller$1: void onLaunchAnimationStart(boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$startAnimation$controller$1: void onLaunchAnimationEnd(boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$startAnimation$controller$1: void onLaunchAnimationProgress(com.android.systemui.animation.LaunchAnimator$State,float,float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$startAnimation$controller$1: void onLaunchAnimationEnd$lambda$0(com.android.systemui.animation.LaunchAnimator$Controller,boolean,com.android.systemui.animation.LaunchAnimator$Controller,kotlin.jvm.functions.Function0)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.AnimatedDialog$hideDialogIntoView$2",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$hideDialogIntoView$2: void <init>(com.android.systemui.animation.AnimatedDialog,kotlin.jvm.functions.Function1)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$hideDialogIntoView$2: void invoke()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$hideDialogIntoView$2: java.lang.Object invoke()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.AnimatedDialog$hideDialogIntoView$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$hideDialogIntoView$1: void <init>(com.android.systemui.animation.AnimatedDialog)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$hideDialogIntoView$1: void invoke()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$hideDialogIntoView$1: java.lang.Object invoke()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.AnimatedDialog$onDialogDismissed$2",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$onDialogDismissed$2: void <init>(com.android.systemui.animation.AnimatedDialog)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$onDialogDismissed$2: void invoke(boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$onDialogDismissed$2: java.lang.Object invoke(java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.AnimatedDialog$startAnimation$2",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$startAnimation$2: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$startAnimation$2: void invoke()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$startAnimation$2: java.lang.Object invoke()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$startAnimation$2: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.LaunchableViewDelegate",
      "classType": "NEED_BUT_UNABLE",
      "classReason": "UNSUPPORTED_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.LaunchableViewDelegate: void <init>(android.view.View,kotlin.jvm.functions.Function1)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchableViewDelegate: void setShouldBlockVisibilityChanges(boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchableViewDelegate: void setVisibility(int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.ActivityLaunchAnimator$startPendingIntentWithAnimation$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$startPendingIntentWithAnimation$1: void <init>(com.android.systemui.animation.ActivityLaunchAnimator$PendingIntentStarter)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$startPendingIntentWithAnimation$1: java.lang.Integer invoke(android.view.RemoteAnimationAdapter)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$startPendingIntentWithAnimation$1: java.lang.Object invoke(java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.Expandable$Companion$fromView$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.Expandable$Companion$fromView$1: void <init>(android.view.View)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.Expandable$Companion$fromView$1: com.android.systemui.animation.ActivityLaunchAnimator$Controller activityLaunchController(java.lang.Integer)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.Expandable$Companion$fromView$1: com.android.systemui.animation.DialogLaunchAnimator$Controller dialogLaunchController(com.android.systemui.animation.DialogCuj)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.LaunchAnimator$startAnimation$3",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$startAnimation$3: void <init>(kotlin.jvm.internal.Ref$BooleanRef,android.animation.ValueAnimator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$startAnimation$3: void cancel()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.LaunchAnimatorKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": []
    },
    {
      "className": "com.android.systemui.animation.FontVariationUtilsKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": []
    },
    {
      "className": "com.android.systemui.animation.DialogLaunchAnimatorKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": []
    },
    {
      "className": "com.android.systemui.animation.LaunchAnimator$startAnimation$2$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$startAnimation$2$1: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$startAnimation$2$1: void invoke()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$startAnimation$2$1: java.lang.Object invoke()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$startAnimation$2$1: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.LaunchAnimator$startAnimation$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$startAnimation$1: void <init>(com.android.systemui.animation.LaunchAnimator$Controller,boolean,android.view.ViewGroupOverlay,android.graphics.drawable.GradientDrawable,boolean,android.view.ViewOverlay)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$startAnimation$1: void onAnimationStart(android.animation.Animator,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchAnimator$startAnimation$1: void onAnimationEnd(android.animation.Animator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.TypefaceVariantCache$Companion$createVariantTypeface$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.TypefaceVariantCache$Companion$createVariantTypeface$1: void <init>(android.graphics.Typeface)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TypefaceVariantCache$Companion$createVariantTypeface$1: java.lang.Boolean invoke(android.graphics.fonts.FontVariationAxis)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TypefaceVariantCache$Companion$createVariantTypeface$1: java.lang.Object invoke(java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.TextInterpolator$tmpPaintForGlyph$2",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator$tmpPaintForGlyph$2: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator$tmpPaintForGlyph$2: android.text.TextPaint invoke()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator$tmpPaintForGlyph$2: java.lang.Object invoke()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolator$tmpPaintForGlyph$2: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate$startAnimation$controller$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate$startAnimation$controller$1: void <init>(com.android.systemui.animation.ActivityLaunchAnimator$Controller,com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate,android.view.IRemoteAnimationFinishedCallback,android.view.RemoteAnimationTarget,android.view.RemoteAnimationTarget)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate$startAnimation$controller$1: boolean isBelowAnimatingWindow()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate$startAnimation$controller$1: boolean isDialogLaunch()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate$startAnimation$controller$1: boolean isNoAnimator()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate$startAnimation$controller$1: boolean isSeedlingAnimator()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate$startAnimation$controller$1: boolean isSeedlingCardAnimator()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate$startAnimation$controller$1: android.view.ViewGroup getLaunchContainer()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate$startAnimation$controller$1: void setLaunchContainer(android.view.ViewGroup)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate$startAnimation$controller$1: android.view.View getOpeningWindowSyncView()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate$startAnimation$controller$1: com.android.systemui.animation.LaunchAnimator$State createAnimatorState()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate$startAnimation$controller$1: void onIntentStarted(boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate$startAnimation$controller$1: void onLaunchAnimationCancelled(java.lang.Boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate$startAnimation$controller$1: void onLaunchAnimationStart(boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate$startAnimation$controller$1: void onLaunchAnimationEnd(boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ActivityLaunchAnimator$AnimationDelegate$startAnimation$controller$1: void onLaunchAnimationProgress(com.android.systemui.animation.LaunchAnimator$State,float,float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.ViewHierarchyAnimator$Companion$createViewProperty$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion$createViewProperty$1: void <init>(com.android.systemui.animation.ViewHierarchyAnimator$Bound,java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion$createViewProperty$1: void setValue(android.view.View,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion$createViewProperty$1: java.lang.Integer get(android.view.View)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion$createViewProperty$1: void setValue(java.lang.Object,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion$createViewProperty$1: java.lang.Object get(java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.view.LaunchableLinearLayout$delegate$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.view.LaunchableLinearLayout$delegate$1: void <init>(com.android.systemui.animation.view.LaunchableLinearLayout)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.view.LaunchableLinearLayout$delegate$1: void invoke(int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.view.LaunchableLinearLayout$delegate$1: java.lang.Object invoke(java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.view.LaunchableLinearLayout",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.view.LaunchableLinearLayout: void <init>(android.content.Context)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.view.LaunchableLinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.view.LaunchableLinearLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.view.LaunchableLinearLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.view.LaunchableLinearLayout: void setShouldBlockVisibilityChanges(boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.view.LaunchableLinearLayout: void setVisibility(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.view.LaunchableLinearLayout: void access$setVisibility$s1127291599(com.android.systemui.animation.view.LaunchableLinearLayout,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.view.LaunchableTextView$delegate$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.view.LaunchableTextView$delegate$1: void <init>(com.android.systemui.animation.view.LaunchableTextView)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.view.LaunchableTextView$delegate$1: void invoke(int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.view.LaunchableTextView$delegate$1: java.lang.Object invoke(java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.view.LaunchableTextView",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.view.LaunchableTextView: void <init>(android.content.Context)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.view.LaunchableTextView: void <init>(android.content.Context,android.util.AttributeSet)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.view.LaunchableTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.view.LaunchableTextView: void setShouldBlockVisibilityChanges(boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.view.LaunchableTextView: void setVisibility(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.view.LaunchableTextView: void access$setVisibility$s-938935918(com.android.systemui.animation.view.LaunchableTextView,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.view.LaunchableImageView",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.view.LaunchableImageView: android.view.View getMPreviewView()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.view.LaunchableImageView: void setMPreviewView(android.view.View)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.view.LaunchableImageView: void <init>(android.content.Context)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.view.LaunchableImageView: void <init>(android.content.Context,android.util.AttributeSet)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.view.LaunchableImageView: void <init>(android.content.Context,android.util.AttributeSet,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.view.LaunchableImageView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.view.LaunchableImageView: void setShouldBlockVisibilityChanges(boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.view.LaunchableImageView: void setVisibility(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.view.LaunchableImageView: void access$setVisibility$s1125864064(com.android.systemui.animation.view.LaunchableImageView,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.view.LaunchableImageView$delegate$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.view.LaunchableImageView$delegate$1: void <init>(com.android.systemui.animation.view.LaunchableImageView)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.view.LaunchableImageView$delegate$1: void invoke(int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.view.LaunchableImageView$delegate$1: java.lang.Object invoke(java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.AnimatedDialog$hideDialogIntoView$2$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$hideDialogIntoView$2$1: void <init>(kotlin.jvm.functions.Function1,com.android.systemui.animation.AnimatedDialog)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$hideDialogIntoView$2$1: void invoke()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.AnimatedDialog$hideDialogIntoView$2$1: java.lang.Object invoke()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.TextInterpolatorKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolatorKt: float getDrawOrigin(android.text.Layout,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.TextInterpolatorKt: float access$getDrawOrigin(android.text.Layout,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.GhostedViewLaunchAnimatorController$backgroundInsets$2",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.GhostedViewLaunchAnimatorController$backgroundInsets$2: void <init>(com.android.systemui.animation.GhostedViewLaunchAnimatorController)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.GhostedViewLaunchAnimatorController$backgroundInsets$2: android.graphics.Insets invoke()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.GhostedViewLaunchAnimatorController$backgroundInsets$2: java.lang.Object invoke()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.GhostedViewLaunchAnimatorControllerKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": []
    },
    {
      "className": "com.android.systemui.animation.ViewHierarchyAnimator$Companion$startAnimation$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion$startAnimation$1: void <init>(android.view.View,java.util.Set,boolean,java.lang.Runnable)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion$startAnimation$1: boolean getCancelled()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion$startAnimation$1: void setCancelled(boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion$startAnimation$1: void onAnimationEnd(android.animation.Animator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ViewHierarchyAnimator$Companion$startAnimation$1: void onAnimationCancel(android.animation.Animator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.LaunchableFrameLayout$delegate$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.LaunchableFrameLayout$delegate$1: void <init>(com.android.systemui.animation.LaunchableFrameLayout)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchableFrameLayout$delegate$1: void invoke(int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.LaunchableFrameLayout$delegate$1: java.lang.Object invoke(java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.TextAnimatorKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": []
    },
    {
      "className": "com.android.systemui.animation.ActivityLaunchAnimatorKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": []
    },
    {
      "className": "com.android.systemui.animation.FontInterpolatorKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.FontInterpolatorKt: void getDEFAULT_FONT_CACHE_MAX_ENTRIES$annotations()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.DelegateLaunchAnimatorController",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.DelegateLaunchAnimatorController: void <init>(com.android.systemui.animation.ActivityLaunchAnimator$Controller)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DelegateLaunchAnimatorController: com.android.systemui.animation.ActivityLaunchAnimator$Controller getDelegate()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DelegateLaunchAnimatorController: boolean isBelowAnimatingWindow()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DelegateLaunchAnimatorController: boolean isDialogLaunch()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DelegateLaunchAnimatorController: boolean isNoAnimator()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DelegateLaunchAnimatorController: boolean isSeedlingAnimator()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DelegateLaunchAnimatorController: boolean isSeedlingCardAnimator()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DelegateLaunchAnimatorController: android.view.ViewGroup getLaunchContainer()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DelegateLaunchAnimatorController: void setLaunchContainer(android.view.ViewGroup)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DelegateLaunchAnimatorController: android.view.View getOpeningWindowSyncView()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DelegateLaunchAnimatorController: com.android.systemui.animation.LaunchAnimator$State createAnimatorState()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DelegateLaunchAnimatorController: void onIntentStarted(boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DelegateLaunchAnimatorController: void onLaunchAnimationCancelled(java.lang.Boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DelegateLaunchAnimatorController: void onLaunchAnimationEnd(boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DelegateLaunchAnimatorController: void onLaunchAnimationProgress(com.android.systemui.animation.LaunchAnimator$State,float,float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.DelegateLaunchAnimatorController: void onLaunchAnimationStart(boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.animation.ShadeInterpolation",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.animation.ShadeInterpolation: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ShadeInterpolation: float getNotificationScrimAlpha(float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ShadeInterpolation: float getContentAlpha(float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ShadeInterpolation: float interpolateEaseInOut(float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.animation.ShadeInterpolation: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseController",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseController: void <init>(com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseController: com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseController$Companion$AnimationState getState()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseController: void setState(com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseController$Companion$AnimationState)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseController: void getState$annotations()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseController: void updateNoiseColor(int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseController: void play(com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseController: void finish()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseController: void playEaseInAnimation()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseController: void playMainAnimation()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseController: void playEaseOutAnimation()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseController: void playEaseOutAnimation$lambda$0(com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseController)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseController: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseController$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseController$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseController$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView: void <init>(android.content.Context,android.util.AttributeSet)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView: com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig getNoiseConfig()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView: void setNoiseConfig(com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView: void getNoiseConfig$annotations()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView: android.animation.ValueAnimator getCurrentAnimator()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView: void setCurrentAnimator(android.animation.ValueAnimator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView: void getCurrentAnimator$annotations()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView: void onDraw(android.graphics.Canvas)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView: void updateColor$SystemUI_debug(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView: void play(java.lang.Runnable)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView: void play$default(com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView,java.lang.Runnable,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView: void playEaseIn(float,float,java.lang.Runnable)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView: void playEaseIn$default(com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView,float,float,java.lang.Runnable,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView: void playEaseOut(java.lang.Runnable)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView: void playEaseOut$default(com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView,java.lang.Runnable,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView: void finish(java.lang.Runnable)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView: void finish$default(com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView,java.lang.Runnable,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView: void applyConfig(com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView: void clearConfig$SystemUI_debug()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView: void play$lambda$2(com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView,float,com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig,float,float,android.animation.ValueAnimator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView: void playEaseIn$lambda$3(com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView,float,float,com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig,float,float,float,android.animation.ValueAnimator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView: void playEaseOut$lambda$4(com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView,float,com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig,float,float,android.animation.ValueAnimator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseController$Companion$AnimationState",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseController$Companion$AnimationState: void <init>(java.lang.String,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseController$Companion$AnimationState: com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseController$Companion$AnimationState[] values()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseController$Companion$AnimationState: com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseController$Companion$AnimationState valueOf(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseController$Companion$AnimationState: com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseController$Companion$AnimationState[] $values()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseController$Companion$AnimationState: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "DATA_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: void <init>(float,float,float,float,float,int,int,int,float,float,float,float,float,float,android.graphics.BlendMode,java.lang.Runnable,float,float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: void <init>(float,float,float,float,float,int,int,int,float,float,float,float,float,float,android.graphics.BlendMode,java.lang.Runnable,float,float,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: float getGridCount()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: float getLuminosityMultiplier()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: float getNoiseMoveSpeedX()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: float getNoiseMoveSpeedY()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: float getNoiseMoveSpeedZ()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: int getColor()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: void setColor(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: int getBackgroundColor()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: int getOpacity()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: float getWidth()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: float getHeight()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: float getMaxDuration()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: float getEaseInDuration()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: float getEaseOutDuration()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: float getPixelDensity()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: android.graphics.BlendMode getBlendMode()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: java.lang.Runnable getOnAnimationEnd()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: float getLumaMatteBlendFactor()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: float getLumaMatteOverallBrightness()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: float component1()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: float component2()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: float component3()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: float component4()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: float component5()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: int component6()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: int component7()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: int component8()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: float component9()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: float component10()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: float component11()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: float component12()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: float component13()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: float component14()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: android.graphics.BlendMode component15()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: java.lang.Runnable component16()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: float component17()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: float component18()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig copy(float,float,float,float,float,int,int,int,float,float,float,float,float,float,android.graphics.BlendMode,java.lang.Runnable,float,float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig copy$default(com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig,float,float,float,float,float,int,int,int,float,float,float,float,float,float,android.graphics.BlendMode,java.lang.Runnable,float,float,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: java.lang.String toString()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: int hashCode()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: boolean equals(java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: android.graphics.BlendMode access$getDEFAULT_BLEND_MODE$cp()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseShader",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseShader: void <init>(boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseShader: void <init>(boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseShader: void setGridCount(float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseShader: void setGridCount$default(com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseShader,float,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseShader: void setPixelDensity(float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseShader: void setColor(int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseShader: void setBackgroundColor(int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseShader: void setOpacity(float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseShader: void setSize(float,float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseShader: void setLumaMatteFactors(float,float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseShader: void setLumaMatteFactors$default(com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseShader,float,float,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseShader: void setInverseNoiseLuminosity(boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseShader: float getNoiseOffsetX()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseShader: float getNoiseOffsetY()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseShader: float getNoiseOffsetZ()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseShader: void setNoiseMove(float,float,float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseShader: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseShader: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig$Companion: android.graphics.BlendMode getDEFAULT_BLEND_MODE()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseAnimationConfig$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView$playEaseOut$2",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView$playEaseOut$2: void <init>(com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView,java.lang.Runnable)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView$playEaseOut$2: void onAnimationEnd(android.animation.Animator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView$playEaseIn$2",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView$playEaseIn$2: void <init>(com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView,java.lang.Runnable)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView$playEaseIn$2: void onAnimationEnd(android.animation.Animator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseShader$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseShader$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseShader$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView$play$2",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView$play$2: void <init>(com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView,java.lang.Runnable)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.turbulencenoise.TurbulenceNoiseView$play$2: void onAnimationEnd(android.animation.Animator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.surfaceeffects.ripple.RippleShader",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader: void <init>(com.android.systemui.surfaceeffects.ripple.RippleShader$RippleShape)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader: void <init>(com.android.systemui.surfaceeffects.ripple.RippleShader$RippleShape,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader: void setCenter(float,float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader: float getBlurStart()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader: void setBlurStart(float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader: float getBlurEnd()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader: void setBlurEnd(float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader: com.android.systemui.surfaceeffects.ripple.RippleShader$RippleSize getRippleSize()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader: float getRawProgress()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader: void setRawProgress(float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader: void setProgress(float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader: float getTime()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader: void setTime(float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader: int getColor()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader: void setColor(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader: float getSparkleStrength()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader: void setSparkleStrength(float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader: float getDistortionStrength()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader: void setDistortionStrength(float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader: float getPixelDensity()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader: void setPixelDensity(float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader: com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams getSparkleRingFadeParams()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader: com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams getBaseRingFadeParams()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader: com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams getCenterFillFadeParams()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader: java.lang.String access$getTAG$cp()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.surfaceeffects.ripple.RippleShader$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$Companion: java.lang.String buildShader(com.android.systemui.surfaceeffects.ripple.RippleShader$RippleShape)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$Companion: float subProgress(float,float,float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$Companion: float getFade(com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams,float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$Companion: float lerp(float,float,float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$Companion: java.lang.String access$buildShader(com.android.systemui.surfaceeffects.ripple.RippleShader$Companion,com.android.systemui.surfaceeffects.ripple.RippleShader$RippleShape)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$Companion: float access$getFade(com.android.systemui.surfaceeffects.ripple.RippleShader$Companion,com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams,float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$Companion: float access$lerp(com.android.systemui.surfaceeffects.ripple.RippleShader$Companion,float,float,float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$Companion: float access$subProgress(com.android.systemui.surfaceeffects.ripple.RippleShader$Companion,float,float,float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.surfaceeffects.ripple.RippleShader$RippleSize",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$RippleSize: void <init>(com.android.systemui.surfaceeffects.ripple.RippleShader)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$RippleSize: java.util.List getSizes()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$RippleSize: void setSizes(java.util.List)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$RippleSize: void getSizes$annotations()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$RippleSize: int getCurrentSizeIndex()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$RippleSize: void setCurrentSizeIndex(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$RippleSize: void getCurrentSizeIndex$annotations()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$RippleSize: com.android.systemui.surfaceeffects.ripple.RippleShader$SizeAtProgress getInitialSize()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$RippleSize: void getInitialSize$annotations()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$RippleSize: float getCurrentWidth()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$RippleSize: float getCurrentHeight()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$RippleSize: void setMaxSize(float,float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$RippleSize: void setSizeAtProgresses(com.android.systemui.surfaceeffects.ripple.RippleShader$SizeAtProgress[])>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$RippleSize: void update(float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$RippleSize: int updateTargetIndex(float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams: void <init>(float,float,float,float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams: void <init>(float,float,float,float,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams: float getFadeInStart()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams: void setFadeInStart(float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams: float getFadeInEnd()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams: void setFadeInEnd(float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams: float getFadeOutStart()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams: void setFadeOutStart(float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams: float getFadeOutEnd()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams: void setFadeOutEnd(float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams: float component1()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams: float component2()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams: float component3()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams: float component4()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams: com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams copy(float,float,float,float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams: com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams copy$default(com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams,float,float,float,float,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams: java.lang.String toString()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams: int hashCode()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams: boolean equals(java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.surfaceeffects.ripple.RippleShader$RippleShape",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$RippleShape: void <init>(java.lang.String,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$RippleShape: com.android.systemui.surfaceeffects.ripple.RippleShader$RippleShape[] values()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$RippleShape: com.android.systemui.surfaceeffects.ripple.RippleShader$RippleShape valueOf(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$RippleShape: com.android.systemui.surfaceeffects.ripple.RippleShader$RippleShape[] $values()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$RippleShape: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.surfaceeffects.ripple.RippleShader$SizeAtProgress",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$SizeAtProgress: void <init>(float,float,float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$SizeAtProgress: float getT()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$SizeAtProgress: void setT(float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$SizeAtProgress: float getWidth()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$SizeAtProgress: void setWidth(float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$SizeAtProgress: float getHeight()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$SizeAtProgress: void setHeight(float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$SizeAtProgress: float component1()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$SizeAtProgress: float component2()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$SizeAtProgress: float component3()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$SizeAtProgress: com.android.systemui.surfaceeffects.ripple.RippleShader$SizeAtProgress copy(float,float,float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$SizeAtProgress: com.android.systemui.surfaceeffects.ripple.RippleShader$SizeAtProgress copy$default(com.android.systemui.surfaceeffects.ripple.RippleShader$SizeAtProgress,float,float,float,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$SizeAtProgress: java.lang.String toString()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$SizeAtProgress: int hashCode()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$SizeAtProgress: boolean equals(java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.surfaceeffects.ripple.MultiRippleController$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.MultiRippleController$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.MultiRippleController$Companion: void getMAX_RIPPLE_NUMBER$annotations()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.MultiRippleController$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.surfaceeffects.ripple.MultiRippleController",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.MultiRippleController: void <init>(com.android.systemui.surfaceeffects.ripple.MultiRippleView)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.MultiRippleController: void updateColor(int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.MultiRippleController: void play(com.android.systemui.surfaceeffects.ripple.RippleAnimation)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.MultiRippleController: void play$lambda$1(com.android.systemui.surfaceeffects.ripple.MultiRippleController,com.android.systemui.surfaceeffects.ripple.RippleAnimation)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.MultiRippleController: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.surfaceeffects.ripple.MultiRippleView",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.MultiRippleView: void <init>(android.content.Context,android.util.AttributeSet)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.MultiRippleView: java.util.ArrayList getRipples()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.MultiRippleView: void getRipples$annotations()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.MultiRippleView: void onDraw(android.graphics.Canvas)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.MultiRippleView: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.surfaceeffects.ripple.RippleAnimation",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimation: void <init>(com.android.systemui.surfaceeffects.ripple.RippleAnimationConfig)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimation: com.android.systemui.surfaceeffects.ripple.RippleShader getRippleShader()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimation: void getRippleShader$annotations()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimation: void updateColor(int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimation: void play(java.lang.Runnable)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimation: void play$default(com.android.systemui.surfaceeffects.ripple.RippleAnimation,java.lang.Runnable,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimation: boolean isPlaying()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimation: void applyConfigToShader()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimation: void assignFadeParams(com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams,com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimation: void play()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimation: void play$lambda$1(com.android.systemui.surfaceeffects.ripple.RippleAnimation,android.animation.ValueAnimator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.surfaceeffects.ripple.RippleView$startRipple$2",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleView$startRipple$2: void <init>(java.lang.Runnable)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleView$startRipple$2: void onAnimationEnd(android.animation.Animator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.surfaceeffects.ripple.RippleView",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleView: void <init>(android.content.Context,android.util.AttributeSet)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleView: com.android.systemui.surfaceeffects.ripple.RippleShader getRippleShader()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleView: void setRippleShader(com.android.systemui.surfaceeffects.ripple.RippleShader)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleView: com.android.systemui.surfaceeffects.ripple.RippleShader$RippleShape getRippleShape()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleView: android.animation.ValueAnimator getAnimator()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleView: long getDuration()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleView: void setDuration(long)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleView: void setMaxSize(float,float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleView: void setCenter(float,float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleView: void onConfigurationChanged(android.content.res.Configuration)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleView: void onAttachedToWindow()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleView: void setupShader(com.android.systemui.surfaceeffects.ripple.RippleShader$RippleShape)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleView: void setupShader$default(com.android.systemui.surfaceeffects.ripple.RippleView,com.android.systemui.surfaceeffects.ripple.RippleShader$RippleShape,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleView: void setBaseRingFadeParams(float,float,float,float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleView: void setBaseRingFadeParams$default(com.android.systemui.surfaceeffects.ripple.RippleView,float,float,float,float,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleView: void setSparkleRingFadeParams(float,float,float,float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleView: void setSparkleRingFadeParams$default(com.android.systemui.surfaceeffects.ripple.RippleView,float,float,float,float,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleView: void setCenterFillFadeParams(float,float,float,float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleView: void setCenterFillFadeParams$default(com.android.systemui.surfaceeffects.ripple.RippleView,float,float,float,float,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleView: void setFadeParams(com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams,float,float,float,float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleView: void setBlur(float,float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleView: void setSizeAtProgresses(com.android.systemui.surfaceeffects.ripple.RippleShader$SizeAtProgress[])>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleView: void startRipple(java.lang.Runnable)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleView: void startRipple$default(com.android.systemui.surfaceeffects.ripple.RippleView,java.lang.Runnable,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleView: void setColor(int,int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleView: void setColor$default(com.android.systemui.surfaceeffects.ripple.RippleView,int,int,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleView: void setSparkleStrength(float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleView: boolean rippleInProgress()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleView: void onDraw(android.graphics.Canvas)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleView: void setBaseRingFadeParams(float,float,float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleView: void setBaseRingFadeParams(float,float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleView: void setBaseRingFadeParams(float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleView: void setBaseRingFadeParams()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleView: void setSparkleRingFadeParams(float,float,float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleView: void setSparkleRingFadeParams(float,float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleView: void setSparkleRingFadeParams(float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleView: void setSparkleRingFadeParams()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleView: void setCenterFillFadeParams(float,float,float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleView: void setCenterFillFadeParams(float,float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleView: void setCenterFillFadeParams(float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleView: void setCenterFillFadeParams()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleView: void startRipple()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleView: void startRipple$lambda$1(com.android.systemui.surfaceeffects.ripple.RippleView,android.animation.ValueAnimator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.surfaceeffects.ripple.RippleShader$RippleSize$setSizeAtProgresses$$inlined$sortBy$1",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$RippleSize$setSizeAtProgresses$$inlined$sortBy$1: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$RippleSize$setSizeAtProgresses$$inlined$sortBy$1: int compare(java.lang.Object,java.lang.Object)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.surfaceeffects.ripple.MultiRippleView$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.MultiRippleView$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.MultiRippleView$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.surfaceeffects.ripple.RippleAnimation$play$2",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimation$play$2: void <init>(java.lang.Runnable)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimation$play$2: void onAnimationEnd(android.animation.Animator)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.surfaceeffects.ripple.RippleAnimationConfig",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "DATA_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimationConfig: void <init>(com.android.systemui.surfaceeffects.ripple.RippleShader$RippleShape,long,float,float,float,float,float,int,int,float,com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams,com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams,com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimationConfig: void <init>(com.android.systemui.surfaceeffects.ripple.RippleShader$RippleShape,long,float,float,float,float,float,int,int,float,com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams,com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams,com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimationConfig: com.android.systemui.surfaceeffects.ripple.RippleShader$RippleShape getRippleShape()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimationConfig: long getDuration()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimationConfig: float getCenterX()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimationConfig: float getCenterY()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimationConfig: float getMaxWidth()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimationConfig: float getMaxHeight()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimationConfig: float getPixelDensity()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimationConfig: int getColor()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimationConfig: void setColor(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimationConfig: int getOpacity()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimationConfig: float getSparkleStrength()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimationConfig: com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams getBaseRingFadeParams()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimationConfig: com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams getSparkleRingFadeParams()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimationConfig: com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams getCenterFillFadeParams()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimationConfig: boolean getShouldDistort()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimationConfig: com.android.systemui.surfaceeffects.ripple.RippleShader$RippleShape component1()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimationConfig: long component2()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimationConfig: float component3()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimationConfig: float component4()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimationConfig: float component5()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimationConfig: float component6()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimationConfig: float component7()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimationConfig: int component8()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimationConfig: int component9()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimationConfig: float component10()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimationConfig: com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams component11()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimationConfig: com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams component12()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimationConfig: com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams component13()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimationConfig: boolean component14()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimationConfig: com.android.systemui.surfaceeffects.ripple.RippleAnimationConfig copy(com.android.systemui.surfaceeffects.ripple.RippleShader$RippleShape,long,float,float,float,float,float,int,int,float,com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams,com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams,com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimationConfig: com.android.systemui.surfaceeffects.ripple.RippleAnimationConfig copy$default(com.android.systemui.surfaceeffects.ripple.RippleAnimationConfig,com.android.systemui.surfaceeffects.ripple.RippleShader$RippleShape,long,float,float,float,float,float,int,int,float,com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams,com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams,com.android.systemui.surfaceeffects.ripple.RippleShader$FadeParams,boolean,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimationConfig: java.lang.String toString()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimationConfig: int hashCode()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimationConfig: boolean equals(java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleAnimationConfig: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.surfaceeffects.ripple.RippleShader$Companion$WhenMappings",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.surfaceeffects.ripple.RippleShader$Companion$WhenMappings: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.surfaceeffects.shaderutil.SdfShaderLibrary",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.surfaceeffects.shaderutil.SdfShaderLibrary: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.shaderutil.SdfShaderLibrary: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.surfaceeffects.shaderutil.SdfShaderLibrary$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.surfaceeffects.shaderutil.SdfShaderLibrary$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.shaderutil.SdfShaderLibrary$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.surfaceeffects.shaderutil.ShaderUtilLibrary",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.surfaceeffects.shaderutil.ShaderUtilLibrary: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.surfaceeffects.shaderutil.ShaderUtilLibrary: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    }
  ]
}