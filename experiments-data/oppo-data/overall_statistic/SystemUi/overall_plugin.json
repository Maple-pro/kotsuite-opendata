{
  "module": "/Users/oneplus/WorkSpace/SystemUi/plugin",
  "classes": [
    {
      "className": "com.android.systemui.plugins.DarkIconDispatcher$DarkReceiver",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.DarkIconDispatcher$DarkReceiver: void onDarkChanged(java.util.ArrayList,float,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.DarkIconDispatcher",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.DarkIconDispatcher: void setIconsDarkArea(java.util.ArrayList)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.DarkIconDispatcher: void addDarkReceiver(com.android.systemui.plugins.DarkIconDispatcher$DarkReceiver)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.DarkIconDispatcher: void addDarkReceiver(android.widget.ImageView)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.DarkIconDispatcher: void removeDarkReceiver(com.android.systemui.plugins.DarkIconDispatcher$DarkReceiver)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.DarkIconDispatcher: void removeDarkReceiver(android.widget.ImageView)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.DarkIconDispatcher: void applyDark(com.android.systemui.plugins.DarkIconDispatcher$DarkReceiver)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.DarkIconDispatcher: int getTint(java.util.ArrayList,android.view.View,int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.DarkIconDispatcher: boolean isInAreas(java.util.ArrayList,android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.DarkIconDispatcher: boolean isInArea(android.graphics.Rect,android.view.View)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.DarkIconDispatcher: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.annotations.ProvidesInterface",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.annotations.ProvidesInterface: int version()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.annotations.ProvidesInterface: java.lang.String action()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.SensorManagerPlugin$SensorEvent",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.SensorManagerPlugin$SensorEvent: void <init>(com.android.systemui.plugins.SensorManagerPlugin$Sensor,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.SensorManagerPlugin$SensorEvent: void <init>(com.android.systemui.plugins.SensorManagerPlugin$Sensor,int,float[])>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.SensorManagerPlugin$SensorEvent: com.android.systemui.plugins.SensorManagerPlugin$Sensor getSensor()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.SensorManagerPlugin$SensorEvent: float[] getValues()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.SensorManagerPlugin$SensorEvent: int getVendorType()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.SensorManagerPlugin",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.SensorManagerPlugin: void registerListener(com.android.systemui.plugins.SensorManagerPlugin$Sensor,com.android.systemui.plugins.SensorManagerPlugin$SensorEventListener)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.SensorManagerPlugin: void unregisterListener(com.android.systemui.plugins.SensorManagerPlugin$Sensor,com.android.systemui.plugins.SensorManagerPlugin$SensorEventListener)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.SensorManagerPlugin$Sensor",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.SensorManagerPlugin$Sensor: void <init>(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.SensorManagerPlugin$Sensor: int getType()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.SensorManagerPlugin$Sensor: java.lang.String toString()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.Plugin",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.Plugin: int getVersion()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.Plugin: void onCreate(android.content.Context,android.content.Context)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.Plugin: void onDestroy()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.SensorManagerPlugin$SensorEventListener",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.SensorManagerPlugin$SensorEventListener: void onSensorChanged(com.android.systemui.plugins.SensorManagerPlugin$SensorEvent)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.VolumeDialog",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialog: void init(int,com.android.systemui.plugins.VolumeDialog$Callback)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialog: void destroy()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialog: void setStreamImportant(int,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialog: void setAutomute(boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialog: void setSilentMode(boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.VolumeDialog$Callback",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialog$Callback: void onZenSettingsClicked()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialog$Callback: void onZenPrioritySettingsClicked()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.annotations.DependsOn",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.annotations.DependsOn: java.lang.Class target()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.ClockPlugin",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.ClockPlugin: java.lang.String getName()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockPlugin: java.lang.String getTitle()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockPlugin: android.graphics.Bitmap getThumbnail()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockPlugin: android.graphics.Bitmap getPreview(int,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockPlugin: android.view.View getView()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockPlugin: android.view.View getBigClockView()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockPlugin: int getPreferredY(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockPlugin: void onDestroyView()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockPlugin: void setStyle(android.graphics.Paint$Style)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockPlugin: void setTextColor(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockPlugin: void setColorPalette(boolean,int[])>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockPlugin: void setDarkAmount(float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockPlugin: void onTimeTick()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockPlugin: void onTimeZoneChanged(java.util.TimeZone)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockPlugin: void onTimeFormatChanged(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockPlugin: boolean shouldShowStatusArea()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.BcSmartspaceDataPlugin$SmartspaceTargetListener",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.BcSmartspaceDataPlugin$SmartspaceTargetListener: void onSmartspaceTargetsUpdated(java.util.List)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.BcSmartspaceDataPlugin",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.BcSmartspaceDataPlugin: void registerListener(com.android.systemui.plugins.BcSmartspaceDataPlugin$SmartspaceTargetListener)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.BcSmartspaceDataPlugin: void unregisterListener(com.android.systemui.plugins.BcSmartspaceDataPlugin$SmartspaceTargetListener)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.BcSmartspaceDataPlugin: void registerSmartspaceEventNotifier(com.android.systemui.plugins.BcSmartspaceDataPlugin$SmartspaceEventNotifier)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.BcSmartspaceDataPlugin: void notifySmartspaceEvent(android.app.smartspace.SmartspaceTargetEvent)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.BcSmartspaceDataPlugin: com.android.systemui.plugins.BcSmartspaceDataPlugin$SmartspaceView getView(android.view.ViewGroup)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.BcSmartspaceDataPlugin: void addOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.BcSmartspaceDataPlugin: void onTargetsAvailable(java.util.List)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.BcSmartspaceDataPlugin$SmartspaceEventNotifier",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.BcSmartspaceDataPlugin$SmartspaceEventNotifier: void notifySmartspaceEvent(android.app.smartspace.SmartspaceTargetEvent)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.BcSmartspaceDataPlugin$SmartspaceView",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.BcSmartspaceDataPlugin$SmartspaceView: void registerDataProvider(com.android.systemui.plugins.BcSmartspaceDataPlugin)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.BcSmartspaceDataPlugin$SmartspaceView: void registerConfigProvider(com.android.systemui.plugins.BcSmartspaceConfigPlugin)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.BcSmartspaceDataPlugin$SmartspaceView: void setPrimaryTextColor(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.BcSmartspaceDataPlugin$SmartspaceView: void setUiSurface(java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.BcSmartspaceDataPlugin$SmartspaceView: void setDozeAmount(float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.BcSmartspaceDataPlugin$SmartspaceView: void setDozing(boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.BcSmartspaceDataPlugin$SmartspaceView: void setSplitShadeEnabled(boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.BcSmartspaceDataPlugin$SmartspaceView: void setKeyguardBypassEnabled(boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.BcSmartspaceDataPlugin$SmartspaceView: void setIntentStarter(com.android.systemui.plugins.BcSmartspaceDataPlugin$IntentStarter)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.BcSmartspaceDataPlugin$SmartspaceView: void setFalsingManager(com.android.systemui.plugins.FalsingManager)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.BcSmartspaceDataPlugin$SmartspaceView: void setDnd(android.graphics.drawable.Drawable,java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.BcSmartspaceDataPlugin$SmartspaceView: void setNextAlarm(android.graphics.drawable.Drawable,java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.BcSmartspaceDataPlugin$SmartspaceView: void setMediaTarget(android.app.smartspace.SmartspaceTarget)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.BcSmartspaceDataPlugin$SmartspaceView: int getSelectedPage()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.BcSmartspaceDataPlugin$SmartspaceView: int getCurrentCardTopPadding()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.VolumeDialogController$State",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController$State: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController$State: com.android.systemui.plugins.VolumeDialogController$State copy()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController$State: java.lang.String toString()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController$State: java.lang.String toString(int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController$State: void sep(java.lang.StringBuilder,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController$State: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.VolumeDialogController",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController: void setActiveStream(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController: void setStreamVolume(int,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController: void setRingerMode(int,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController: boolean isVibrateWhenRingingOn()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController: boolean hasVibrator()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController: void vibrate(android.os.VibrationEffect)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController: void vibrateByLMVibrator(int,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController: void removeVibrate()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController: void vibrateByLMVibrator(int,boolean,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController: void scheduleTouchFeedback()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController: android.media.AudioManager getAudioManager()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController: void notifyVisible(boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController: void addCallback(com.android.systemui.plugins.VolumeDialogController$Callbacks,android.os.Handler)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController: void removeCallback(com.android.systemui.plugins.VolumeDialogController$Callbacks)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController: boolean getUserSwitch()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController: void setUserSwitch(boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController: void userActivity()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController: void getState()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController: boolean areCaptionsEnabled()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController: void setCaptionsEnabled(boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController: void getCaptionsComponentState(boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController: boolean removeSetStreamMessage(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController: void showVolumeDialog(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.VolumeDialogController$Callbacks",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController$Callbacks: void onShowRequested(int,boolean,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController$Callbacks: void onDismissRequested(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController$Callbacks: void onStateChanged(com.android.systemui.plugins.VolumeDialogController$State)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController$Callbacks: void onLayoutDirectionChanged(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController$Callbacks: void onConfigurationChanged()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController$Callbacks: void onShowVibrateHint()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController$Callbacks: void onShowSilentHint()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController$Callbacks: void onScreenOff()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController$Callbacks: void onShowSafetyWarning(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController$Callbacks: void onAccessibilityModeChanged(java.lang.Boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController$Callbacks: void onCaptionComponentStateChanged(java.lang.Boolean,java.lang.Boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController$Callbacks: void onShowCsdWarning(int,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController$Callbacks: void onStateChanged(com.android.systemui.plugins.VolumeDialogController$State,int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController$Callbacks: void onThemeChanged()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController$Callbacks: void onVolumeKeyUp()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController$Callbacks: void onDateChanged()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController$Callbacks: void onMultiMediaStateChange(android.content.Intent)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.VolumeDialogController$StreamState",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController$StreamState: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.VolumeDialogController$StreamState: com.android.systemui.plugins.VolumeDialogController$StreamState copy()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.GlobalActionsPanelPlugin",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.GlobalActionsPanelPlugin: com.android.systemui.plugins.GlobalActionsPanelPlugin$PanelViewController onPanelShown(com.android.systemui.plugins.GlobalActionsPanelPlugin$Callbacks,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.GlobalActionsPanelPlugin$PanelViewController",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.GlobalActionsPanelPlugin$PanelViewController: android.view.View getPanelContent()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.GlobalActionsPanelPlugin$PanelViewController: void onDismissed()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.GlobalActionsPanelPlugin$PanelViewController: void onDeviceLockStateChanged(boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.GlobalActionsPanelPlugin$PanelViewController: android.graphics.drawable.Drawable getBackgroundDrawable()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.GlobalActionsPanelPlugin$Callbacks",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.GlobalActionsPanelPlugin$Callbacks: void dismissGlobalActionsMenu()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.GlobalActionsPanelPlugin$Callbacks: void startPendingIntentDismissingKeyguard(android.app.PendingIntent)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.annotations.Dependencies",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.annotations.Dependencies: com.android.systemui.plugins.annotations.DependsOn[] value()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.FalsingManager$FalsingBeliefListener",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.FalsingManager$FalsingBeliefListener: void onFalse()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.FalsingManager",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.FalsingManager: void onSuccessfulUnlock()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.FalsingManager: boolean isUnlockingDisabled()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.FalsingManager: boolean isFalseTouch(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.FalsingManager: boolean isSimpleTap()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.FalsingManager: boolean isFalseTap(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.FalsingManager: boolean isFalseLongTap(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.FalsingManager: boolean isFalseDoubleTap()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.FalsingManager: boolean isProximityNear()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.FalsingManager: boolean isClassifierEnabled()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.FalsingManager: boolean shouldEnforceBouncer()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.FalsingManager: android.net.Uri reportRejectedTouch()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.FalsingManager: boolean isReportingEnabled()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.FalsingManager: void dump(java.io.PrintWriter,java.lang.String[])>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.FalsingManager: void cleanupInternal()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.FalsingManager: void onProximityEvent(com.android.systemui.plugins.FalsingManager$ProximityEvent)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.FalsingManager: void addFalsingBeliefListener(com.android.systemui.plugins.FalsingManager$FalsingBeliefListener)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.FalsingManager: void removeFalsingBeliefListener(com.android.systemui.plugins.FalsingManager$FalsingBeliefListener)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.FalsingManager: void addTapListener(com.android.systemui.plugins.FalsingManager$FalsingTapListener)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.FalsingManager: void removeTapListener(com.android.systemui.plugins.FalsingManager$FalsingTapListener)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.FalsingManager$ProximityEvent",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.FalsingManager$ProximityEvent: boolean getCovered()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.FalsingManager$ProximityEvent: long getTimestampNs()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.FalsingManager$FalsingTapListener",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.FalsingManager$FalsingTapListener: void onAdditionalTapRequired()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.NotificationListenerController",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.NotificationListenerController: void onListenerConnected(com.android.systemui.plugins.NotificationListenerController$NotificationProvider)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.NotificationListenerController: boolean onNotificationPosted(android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService$RankingMap)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.NotificationListenerController: boolean onNotificationRemoved(android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService$RankingMap)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.NotificationListenerController: boolean onNotificationChannelModified(java.lang.String,android.os.UserHandle,android.app.NotificationChannel,int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.NotificationListenerController: android.service.notification.StatusBarNotification[] getActiveNotifications(android.service.notification.StatusBarNotification[])>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.NotificationListenerController: android.service.notification.NotificationListenerService$RankingMap getCurrentRanking(android.service.notification.NotificationListenerService$RankingMap)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.NotificationListenerController$NotificationProvider",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.NotificationListenerController$NotificationProvider: android.service.notification.StatusBarNotification[] getActiveNotifications()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.NotificationListenerController$NotificationProvider: android.service.notification.NotificationListenerService$RankingMap getRankingMap()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.NotificationListenerController$NotificationProvider: void addNotification(android.service.notification.StatusBarNotification)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.NotificationListenerController$NotificationProvider: void removeNotification(android.service.notification.StatusBarNotification)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.NotificationListenerController$NotificationProvider: void updateRanking()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.FalsingPlugin",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.FalsingPlugin: void dataCollected(boolean,byte[])>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.FalsingPlugin: com.android.systemui.plugins.FalsingManager getFalsingManager(android.content.Context)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.DozeServicePlugin$RequestDoze",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.DozeServicePlugin$RequestDoze: void onRequestShowDoze()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.DozeServicePlugin$RequestDoze: void onRequestHideDoze()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.DozeServicePlugin",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.DozeServicePlugin: void onDreamingStarted()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.DozeServicePlugin: void onDreamingStopped()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.DozeServicePlugin: void setDozeRequester(com.android.systemui.plugins.DozeServicePlugin$RequestDoze)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.BcSmartspaceConfigPlugin",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.BcSmartspaceConfigPlugin: boolean isDefaultDateWeatherDisabled()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.BcSmartspaceDataPlugin$IntentStarter",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.BcSmartspaceDataPlugin$IntentStarter: void startFromAction(android.app.smartspace.SmartspaceAction,android.view.View,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.BcSmartspaceDataPlugin$IntentStarter: void startFromAction(android.app.smartspace.uitemplatedata.TapAction,android.view.View,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.BcSmartspaceDataPlugin$IntentStarter: void startIntent(android.view.View,android.content.Intent,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.BcSmartspaceDataPlugin$IntentStarter: void startPendingIntent(android.view.View,android.app.PendingIntent,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.IntentButtonProvider$IntentButton",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.IntentButtonProvider$IntentButton: com.android.systemui.plugins.IntentButtonProvider$IntentButton$IconState getIcon()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.IntentButtonProvider$IntentButton: android.content.Intent getIntent()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.IntentButtonProvider",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.IntentButtonProvider: com.android.systemui.plugins.IntentButtonProvider$IntentButton getIntentButton()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.IntentButtonProvider$IntentButton$IconState",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.IntentButtonProvider$IntentButton$IconState: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.ActivityStarter",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.ActivityStarter: void startPendingIntentDismissingKeyguard(android.app.PendingIntent)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ActivityStarter: void startPendingIntentDismissingKeyguard(android.app.PendingIntent,java.lang.Runnable)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ActivityStarter: void startPendingIntentDismissingKeyguard(android.app.PendingIntent,java.lang.Runnable,android.view.View)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ActivityStarter: void startPendingIntentDismissingKeyguard(android.app.PendingIntent,java.lang.Runnable,com.android.systemui.animation.ActivityLaunchAnimator$Controller)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ActivityStarter: void startActivity(android.content.Intent,boolean,boolean,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ActivityStarter: void startActivity(android.content.Intent,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ActivityStarter: void startActivity(android.content.Intent,boolean,com.android.systemui.animation.ActivityLaunchAnimator$Controller)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ActivityStarter: void startActivity(android.content.Intent,boolean,com.android.systemui.animation.ActivityLaunchAnimator$Controller,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ActivityStarter: void startActivity(android.content.Intent,boolean,com.android.systemui.animation.ActivityLaunchAnimator$Controller,boolean,android.os.UserHandle)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ActivityStarter: void startActivity(android.content.Intent,boolean,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ActivityStarter: void startActivity(android.content.Intent,boolean,com.android.systemui.plugins.ActivityStarter$Callback)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ActivityStarter: void postStartActivityDismissingKeyguard(android.content.Intent,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ActivityStarter: void postStartActivityDismissingKeyguard(android.content.Intent,int,com.android.systemui.animation.ActivityLaunchAnimator$Controller)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ActivityStarter: void postStartActivityDismissingKeyguard(android.content.Intent,int,com.android.systemui.animation.ActivityLaunchAnimator$Controller,java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ActivityStarter: void postStartActivityDismissingKeyguard(android.app.PendingIntent)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ActivityStarter: void postStartActivityDismissingKeyguard(android.app.PendingIntent,com.android.systemui.animation.ActivityLaunchAnimator$Controller)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ActivityStarter: void postQSRunnableDismissingKeyguard(java.lang.Runnable)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ActivityStarter: void dismissKeyguardThenExecute(com.android.systemui.plugins.ActivityStarter$OnDismissAction,java.lang.Runnable,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ActivityStarter: void dismissKeyguardThenExecute(com.android.systemui.plugins.ActivityStarter$OnDismissAction,java.lang.Runnable,boolean,java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ActivityStarter: void startActivityDismissingKeyguard(android.content.Intent,boolean,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ActivityStarter: void startActivityDismissingKeyguard(android.content.Intent,boolean,boolean,boolean,com.android.systemui.plugins.ActivityStarter$Callback,int,com.android.systemui.animation.ActivityLaunchAnimator$Controller,android.os.UserHandle)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ActivityStarter: void executeRunnableDismissingKeyguard(java.lang.Runnable,java.lang.Runnable,boolean,boolean,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ActivityStarter: void executeRunnableDismissingKeyguard(java.lang.Runnable,java.lang.Runnable,boolean,boolean,boolean,boolean,java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.ActivityStarter$Callback",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.ActivityStarter$Callback: void onActivityStarted(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.ActivityStarter$OnDismissAction",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.ActivityStarter$OnDismissAction: boolean onDismiss()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ActivityStarter$OnDismissAction: boolean willRunAnimationOnKeyguard()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.statusbar.DozeParameters",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.DozeParameters: boolean shouldControlScreenOff()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper: void dismiss(android.view.View,float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper: void snapOpen(android.view.View,int,float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper: void snooze(android.service.notification.StatusBarNotification,com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper$SnoozeOption)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper: float getMinDismissVelocity()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper: boolean isDismissGesture(android.view.MotionEvent)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper: boolean isFalseGesture()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper$SnoozeOption",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper$SnoozeOption: android.service.notification.SnoozeCriterion getSnoozeCriterion()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper$SnoozeOption: java.lang.CharSequence getDescription()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper$SnoozeOption: java.lang.CharSequence getConfirmation()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper$SnoozeOption: int getMinutesToSnoozeFor()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper$SnoozeOption: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction getAccessibilityAction()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin$MenuItem",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin$MenuItem: android.view.View getMenuView()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin$MenuItem: android.view.View getGutsView()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin$MenuItem: java.lang.String getContentDescription()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: java.util.ArrayList getMenuItems(android.content.Context)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin$MenuItem getLongpressMenuItem(android.content.Context)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin$MenuItem getFeedbackMenuItem(android.content.Context)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin$MenuItem getSnoozeMenuItem(android.content.Context)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: void setMenuItems(java.util.ArrayList)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: boolean shouldShowGutsOnSnapOpen()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin$MenuItem menuItemToExposeOnSnap()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: android.graphics.Point getRevealAnimationOrigin()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: void setMenuClickListener(com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin$OnMenuEventListener)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: void setAppName(java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: void createMenu(android.view.ViewGroup,android.service.notification.StatusBarNotification)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: void resetMenu()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: android.view.View getMenuView()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: int getMenuSnapTarget()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: boolean shouldShowMenu()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: boolean isMenuVisible()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: boolean isTowardsMenu(float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: boolean shouldSnapBack()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: boolean isSnappedAndOnSameSide()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: boolean canBeDismissed()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: boolean isWithinSnapMenuThreshold()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: boolean isSwipedEnoughToShowMenu()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: boolean onInterceptTouchEvent(android.view.View,android.view.MotionEvent)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: boolean shouldUseDefaultMenuItems()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: void onParentTranslationUpdate(float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: void onParentHeightUpdate()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: void onNotificationUpdated(android.service.notification.StatusBarNotification)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: void onTouchMove(float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: void onTouchStart()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: void onTouchEnd()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: void onSnapClosed()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: void onSnapOpen()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: void onDismiss()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: void onConfigurationChanged()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin$OnMenuEventListener",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin$OnMenuEventListener: void onMenuClicked(android.view.View,int,int,com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin$MenuItem)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin$OnMenuEventListener: void onMenuReset(android.view.View)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin$OnMenuEventListener: void onMenuShown(android.view.View)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.statusbar.StatusBarStateController$StateListener",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.StatusBarStateController$StateListener: void onStatePreChange(int,int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.StatusBarStateController$StateListener: void onStatePostChange()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.StatusBarStateController$StateListener: void onStateChanged(int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.StatusBarStateController$StateListener: void onUpcomingStateChanged(int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.StatusBarStateController$StateListener: void onDozingChanged(boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.StatusBarStateController$StateListener: void onDreamingChanged(boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.StatusBarStateController$StateListener: void onDozeAmountChanged(float,float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.StatusBarStateController$StateListener: void onFullscreenStateChanged(boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.StatusBarStateController$StateListener: void onPulsingChanged(boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.StatusBarStateController$StateListener: void onExpandedChanged(boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.statusbar.StatusBarStateController",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.StatusBarStateController: int getState()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.StatusBarStateController: boolean isDozing()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.StatusBarStateController: boolean isExpanded()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.StatusBarStateController: boolean isPulsing()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.StatusBarStateController: boolean isDreaming()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.StatusBarStateController: void addCallback(com.android.systemui.plugins.statusbar.StatusBarStateController$StateListener)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.StatusBarStateController: void removeCallback(com.android.systemui.plugins.statusbar.StatusBarStateController$StateListener)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.StatusBarStateController: float getDozeAmount()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.NavigationEdgeBackPlugin$BackCallback",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.NavigationEdgeBackPlugin$BackCallback: void triggerBack()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.NavigationEdgeBackPlugin$BackCallback: void cancelBack()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.NavigationEdgeBackPlugin$BackCallback: void setTriggerBack(boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.NavigationEdgeBackPlugin",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.NavigationEdgeBackPlugin: void setIsLeftPanel(boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.NavigationEdgeBackPlugin: void setInsets(int,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.NavigationEdgeBackPlugin: void setDisplaySize(android.graphics.Point)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.NavigationEdgeBackPlugin: void setBackCallback(com.android.systemui.plugins.NavigationEdgeBackPlugin$BackCallback)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.NavigationEdgeBackPlugin: void setLayoutParams(android.view.WindowManager$LayoutParams)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.NavigationEdgeBackPlugin: void onMotionEvent(android.view.MotionEvent)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.NavigationEdgeBackPlugin: void dump(java.io.PrintWriter)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.qs.QSTile$SlashState",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile$SlashState: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile$SlashState: java.lang.String toString()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile$SlashState: boolean equals(java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile$SlashState: com.android.systemui.plugins.qs.QSTile$SlashState copy()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.qs.QSTile",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile: java.util.function.Supplier getTileIconSupplier()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile: com.android.systemui.plugins.qs.QSTile$Icon getDefaultIcon()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile: java.lang.String getTileSpec()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile: boolean isAvailable()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile: void setTileSpec(java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile: void clearState()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile: void refreshState()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile: void addCallback(com.android.systemui.plugins.qs.QSTile$Callback)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile: void removeCallback(com.android.systemui.plugins.qs.QSTile$Callback)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile: void removeCallbacks()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile: com.android.systemui.plugins.qs.QSIconView createTileView(android.content.Context)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile: void click(android.view.View)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile: void secondaryClick(android.view.View)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile: void longClick(android.view.View)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile: void userSwitch(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile: int getMetricsCategory()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile: void setListening(java.lang.Object,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile: void setDetailListening(boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile: void destroy()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile: java.lang.CharSequence getTileLabel()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile: com.android.systemui.plugins.qs.QSTile$State getState()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile: android.metrics.LogMaker populate(android.metrics.LogMaker)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile: java.lang.String getMetricsSpec()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile: com.android.internal.logging.InstanceId getInstanceId()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile: boolean isTileReady()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile: boolean isListening()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.qs.QSTile$Icon",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile$Icon: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile$Icon: android.graphics.drawable.Drawable getDrawable(android.content.Context)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile$Icon: android.graphics.drawable.Drawable getInvisibleDrawable(android.content.Context)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile$Icon: int hashCode()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile$Icon: int getPadding()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile$Icon: java.lang.String toString()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.qs.QSTile$Callback",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile$Callback: void onStateChanged(com.android.systemui.plugins.qs.QSTile$State)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.qs.QSIconView",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSIconView: void <init>(android.content.Context)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSIconView: void setIcon(com.android.systemui.plugins.qs.QSTile$State,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSIconView: void disableAnimation()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSIconView: android.view.View getIconView()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.qs.QSTile$State",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile$State: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile$State: java.lang.String getStateText(int,android.content.res.Resources)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile$State: java.lang.String getSecondaryLabel(java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile$State: boolean copyTo(com.android.systemui.plugins.qs.QSTile$State)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile$State: java.lang.String toString()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile$State: java.lang.StringBuilder toStringBuilder()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile$State: com.android.systemui.plugins.qs.QSTile$State copy()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.qs.QS$HeightListener",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.qs.QS$HeightListener: void onQsHeightChanged()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.qs.QS",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.qs.QS: void setPanelView(com.android.systemui.plugins.qs.QS$HeightListener)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QS: void hideImmediately()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QS: int getQsMinExpansionHeight()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QS: int getDesiredHeight()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QS: void setHeightOverride(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QS: void setHeaderClickable(boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QS: boolean isCustomizing()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QS: void closeCustomizer()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QS: void setOverscrolling(boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QS: void setExpanded(boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QS: void setListening(boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QS: void setQsVisible(boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QS: boolean isShowingDetail()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QS: void closeDetail()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QS: void animateHeaderSlidingOut()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QS: void setQsExpansion(float,float,float,float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QS: void setHeaderListening(boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QS: void notifyCustomizeChanged()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QS: void setContainerController(com.android.systemui.plugins.qs.QSContainerController)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QS: void setCollapseExpandAction(java.lang.Runnable)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QS: int getHeightDiff()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QS: android.view.View getHeader()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QS: void setHasNotifications(boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QS: boolean disallowPanelTouches()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QS: void setInSplitShade(boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QS: void setTransitionToFullShadeProgress(boolean,float,float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QS: void setFancyClipping(int,int,int,int,int,boolean,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QS: boolean isFullyCollapsed()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QS: void setCollapsedMediaVisibilityChangedListener(java.util.function.Consumer)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QS: void setScrollListener(com.android.systemui.plugins.qs.QS$ScrollListener)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QS: void setOverScrollAmount(int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QS: void setIsNotificationPanelFullWidth(boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.FragmentBase",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.FragmentBase: android.view.View getView()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.FragmentBase: android.content.Context getContext()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.qs.QSContainerController",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSContainerController: void setCustomizerAnimating(boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSContainerController: void setCustomizerShowing(boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSContainerController: void setCustomizerShowing(boolean,long)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSContainerController: void setDetailShowing(boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.qs.QS$ScrollListener",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.qs.QS$ScrollListener: void onQsPanelScrollChanged(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.qs.QSTile$BooleanState",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile$BooleanState: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile$BooleanState: boolean copyTo(com.android.systemui.plugins.qs.QSTile$State)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile$BooleanState: java.lang.StringBuilder toStringBuilder()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile$BooleanState: com.android.systemui.plugins.qs.QSTile$State copy()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.qs.QSTileView",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTileView: void <init>(android.content.Context)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTileView: android.view.View updateAccessibilityOrder(android.view.View)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTileView: com.android.systemui.plugins.qs.QSIconView getIcon()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTileView: android.view.View getIconWithBackground()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTileView: android.view.View getSecondaryIcon()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTileView: void init(com.android.systemui.plugins.qs.QSTile)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTileView: void onStateChanged(com.android.systemui.plugins.qs.QSTile$State)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTileView: int getDetailY()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTileView: android.view.View getLabel()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTileView: android.view.View getLabelContainer()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTileView: android.view.View getSecondaryLabel()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTileView: void setPosition(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.qs.QSTile$SignalState",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile$SignalState: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile$SignalState: boolean copyTo(com.android.systemui.plugins.qs.QSTile$State)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile$SignalState: java.lang.StringBuilder toStringBuilder()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSTile$SignalState: com.android.systemui.plugins.qs.QSTile$State copy()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.qs.QSFactory",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSFactory: com.android.systemui.plugins.qs.QSTile createTile(java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSFactory: com.android.systemui.plugins.qs.QSTileView createTileView(android.content.Context,com.android.systemui.plugins.qs.QSTile,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.GlobalActions$GlobalActionsManager",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.GlobalActions$GlobalActionsManager: void onGlobalActionsShown()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.GlobalActions$GlobalActionsManager: void onGlobalActionsHidden()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.GlobalActions$GlobalActionsManager: void shutdown()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.GlobalActions$GlobalActionsManager: void reboot(boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.GlobalActions",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.GlobalActions: void showGlobalActions(com.android.systemui.plugins.GlobalActions$GlobalActionsManager)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.GlobalActions: void showShutdownUi(boolean,java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.GlobalActions: void destroy()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.ViewProvider",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.ViewProvider: android.view.View getView()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.NotificationPersonExtractorPlugin$PersonData",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.NotificationPersonExtractorPlugin$PersonData: void <init>(java.lang.String,java.lang.CharSequence,android.graphics.drawable.Drawable,java.lang.Runnable)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.NotificationPersonExtractorPlugin",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.NotificationPersonExtractorPlugin: com.android.systemui.plugins.NotificationPersonExtractorPlugin$PersonData extractPerson(android.service.notification.StatusBarNotification)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.NotificationPersonExtractorPlugin: java.lang.String extractPersonKey(android.service.notification.StatusBarNotification)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.NotificationPersonExtractorPlugin: boolean isPersonNotification(android.service.notification.StatusBarNotification)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.ToastPlugin",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.ToastPlugin: com.android.systemui.plugins.ToastPlugin$Toast createToast(java.lang.CharSequence,java.lang.String,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.ToastPlugin$Toast",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.ToastPlugin$Toast: java.lang.Integer getGravity()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ToastPlugin$Toast: java.lang.Integer getXOffset()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ToastPlugin$Toast: java.lang.Integer getYOffset()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ToastPlugin$Toast: java.lang.Integer getHorizontalMargin()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ToastPlugin$Toast: java.lang.Integer getVerticalMargin()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ToastPlugin$Toast: android.view.View getView()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ToastPlugin$Toast: android.animation.Animator getInAnimation()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ToastPlugin$Toast: android.animation.Animator getOutAnimation()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ToastPlugin$Toast: void onOrientationChange(int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.FalsingManager$Penalty",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": []
    },
    {
      "className": "com.android.systemui.plugins.BuildConfig",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.BuildConfig: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.BuildConfig: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.PluginDependency",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.PluginDependency: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.PluginDependency: java.lang.Object get(com.android.systemui.plugins.Plugin,java.lang.Class)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.PluginDependency$DependencyProvider",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.PluginDependency$DependencyProvider: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.PluginDependency$DependencyProvider: java.lang.Object get(com.android.systemui.plugins.Plugin,java.lang.Class)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.OverlayPlugin$Callback",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.OverlayPlugin$Callback: void onHoldStatusBarOpenChange()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.OverlayPlugin",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.OverlayPlugin: void setup(android.view.View,android.view.View)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.OverlayPlugin: void setup(android.view.View,android.view.View,com.android.systemui.plugins.OverlayPlugin$Callback,com.android.systemui.plugins.statusbar.DozeParameters)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.OverlayPlugin: boolean holdStatusBarOpen()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.OverlayPlugin: void setCollapseDesired(boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.PluginUtils",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.PluginUtils: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.PluginUtils: void setId(android.content.Context,android.view.View,java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.ClockFaceController",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.ClockFaceController: android.view.View getView()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockFaceController: com.android.systemui.plugins.ClockFaceConfig getConfig()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockFaceController: com.android.systemui.plugins.ClockFaceEvents getEvents()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockFaceController: com.android.systemui.plugins.ClockAnimations getAnimations()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockFaceController: com.android.systemui.log.LogBuffer getLogBuffer()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockFaceController: void setLogBuffer(com.android.systemui.log.LogBuffer)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.ClockFaceConfig",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "DATA_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.ClockFaceConfig: void <init>(com.android.systemui.plugins.ClockTickRate,boolean,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockFaceConfig: void <init>(com.android.systemui.plugins.ClockTickRate,boolean,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockFaceConfig: com.android.systemui.plugins.ClockTickRate getTickRate()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockFaceConfig: boolean getHasCustomWeatherDataDisplay()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockFaceConfig: boolean getHasCustomPositionUpdatedAnimation()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockFaceConfig: com.android.systemui.plugins.ClockTickRate component1()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockFaceConfig: boolean component2()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockFaceConfig: boolean component3()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockFaceConfig: com.android.systemui.plugins.ClockFaceConfig copy(com.android.systemui.plugins.ClockTickRate,boolean,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockFaceConfig: com.android.systemui.plugins.ClockFaceConfig copy$default(com.android.systemui.plugins.ClockFaceConfig,com.android.systemui.plugins.ClockTickRate,boolean,boolean,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockFaceConfig: java.lang.String toString()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockFaceConfig: int hashCode()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockFaceConfig: boolean equals(java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockFaceConfig: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.ClockFaceEvents",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.ClockFaceEvents: void onTimeTick()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockFaceEvents: void onRegionDarknessChanged(boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockFaceEvents: void onFontSettingChanged(float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockFaceEvents: void onTargetRegionChanged(android.graphics.Rect)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.ClockAnimations",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.ClockAnimations: void enter()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockAnimations: void doze(float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockAnimations: void fold(float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockAnimations: void charge()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockAnimations: void onPositionUpdated(int,int,float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockAnimations: void onPickerCarouselSwiping(float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.ClockTickRate",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.ClockTickRate: void <init>(java.lang.String,int,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockTickRate: int getValue()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockTickRate: com.android.systemui.plugins.ClockTickRate[] values()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockTickRate: com.android.systemui.plugins.ClockTickRate valueOf(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockTickRate: com.android.systemui.plugins.ClockTickRate[] $values()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockTickRate: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.WeatherData$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.WeatherData$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.WeatherData$Companion: void getDESCRIPTION_KEY$annotations()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.WeatherData$Companion: void getSTATE_KEY$annotations()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.WeatherData$Companion: void getUSE_CELSIUS_KEY$annotations()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.WeatherData$Companion: void getTEMPERATURE_KEY$annotations()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.WeatherData$Companion: com.android.systemui.plugins.WeatherData fromBundle(android.os.Bundle)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.WeatherData$Companion: java.lang.Integer readIntFromBundle(android.os.Bundle,java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.WeatherData$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.WeatherData",
      "classType": "ENABLE",
      "classReason": "ENABLE_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.WeatherData: void <init>(java.lang.String,com.android.systemui.plugins.WeatherData$WeatherStateIcon,boolean,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.WeatherData: java.lang.String getDescription()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.WeatherData: com.android.systemui.plugins.WeatherData$WeatherStateIcon getState()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.WeatherData: boolean getUseCelsius()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.WeatherData: int getTemperature()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.WeatherData: java.lang.String toString()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.WeatherData: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.WeatherData$WeatherStateIcon",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.WeatherData$WeatherStateIcon: void <init>(java.lang.String,int,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.WeatherData$WeatherStateIcon: int getId()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.WeatherData$WeatherStateIcon: com.android.systemui.plugins.WeatherData$WeatherStateIcon[] values()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.WeatherData$WeatherStateIcon: com.android.systemui.plugins.WeatherData$WeatherStateIcon valueOf(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.WeatherData$WeatherStateIcon: com.android.systemui.plugins.WeatherData$WeatherStateIcon[] $values()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.WeatherData$WeatherStateIcon: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.WeatherData$WeatherStateIcon$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.WeatherData$WeatherStateIcon$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.WeatherData$WeatherStateIcon$Companion: com.android.systemui.plugins.WeatherData$WeatherStateIcon fromInt(int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.WeatherData$WeatherStateIcon$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.ClockProviderPluginKt",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "PACKAGE_LEVEL_CLASS",
      "methods": []
    },
    {
      "className": "com.android.systemui.plugins.ClockEvents$DefaultImpls",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.ClockEvents$DefaultImpls: void onUserSwitching(com.android.systemui.plugins.ClockEvents,int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockEvents$DefaultImpls: void onUserSwitchComplete(com.android.systemui.plugins.ClockEvents,int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockEvents$DefaultImpls: void onOSThemeChanged(com.android.systemui.plugins.ClockEvents)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockEvents$DefaultImpls: void onColorChange(com.android.systemui.plugins.ClockEvents)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockEvents$DefaultImpls: void onScreenTurnedOn(com.android.systemui.plugins.ClockEvents)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockEvents$DefaultImpls: void onFinishedWakingUp(com.android.systemui.plugins.ClockEvents)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockEvents$DefaultImpls: void onStartedGoingToSleep(com.android.systemui.plugins.ClockEvents)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockEvents$DefaultImpls: void onFinishedGoingToSleep(com.android.systemui.plugins.ClockEvents)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockEvents$DefaultImpls: void onBatteryLevelChanged(com.android.systemui.plugins.ClockEvents,int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.ClockEvents",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.ClockEvents: void onTimeZoneChanged(java.util.TimeZone)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockEvents: void onTimeFormatChanged(boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockEvents: void onLocaleChanged(java.util.Locale)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockEvents: void onColorPaletteChanged(android.content.res.Resources)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockEvents: void onSeedColorChanged(java.lang.Integer)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockEvents: void onWeatherDataChanged(com.android.systemui.plugins.WeatherData)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockEvents: void onUserSwitching(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockEvents: void onUserSwitchComplete(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockEvents: void onOSThemeChanged()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockEvents: void onColorChange()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockEvents: void onScreenTurnedOn()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockEvents: void onFinishedWakingUp()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockEvents: void onStartedGoingToSleep()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockEvents: void onFinishedGoingToSleep()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockEvents: void onBatteryLevelChanged(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.statusbar.CapsulePlugin",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.CapsulePlugin: void bindStub(com.android.systemui.plugins.statusbar.CapsulePlugin$IStub)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.CapsulePlugin: void sendAction(android.os.Bundle)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.CapsulePlugin: void onCreateView(android.view.View,android.view.View)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.CapsulePlugin: void disable(boolean,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.CapsulePlugin: void notifyPromptState(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.CapsulePlugin: void notifyNotificationRemove(java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.CapsulePlugin: void onConfigurationChanged(android.content.res.Configuration)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.CapsulePlugin: boolean shouldShowSystemPromptView()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.CapsulePlugin: boolean isSeedingSpecialMode()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.CapsulePlugin: void onProcessDied(int,int,java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.CapsulePlugin: void dump(java.io.PrintWriter,java.lang.String[])>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.CapsulePlugin: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.statusbar.CapsulePlugin$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.CapsulePlugin$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.CapsulePlugin$Companion: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.statusbar.CapsulePlugin$IStub",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.CapsulePlugin$IStub: void notifyCapsuleChange(android.os.Bundle)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.CapsulePlugin$IStub: void notifyCapsuleViewCreate(android.view.View)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.CapsulePlugin$IStub: android.os.Bundle queryData(android.os.Bundle)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.CapsulePlugin$IStub: void dispatchEvent(android.view.MotionEvent)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.CapsulePlugin$IStub: void setForceStatusBarVisible(boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.CapsulePlugin$IStub: boolean isServiceRemoved(java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.CapsulePlugin$IStub: void requestKeyguard(android.content.Context)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.CapsulePlugin$IStub: void addProcessObserver()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.CapsulePlugin$IStub: void removeProcessObserver()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.statusbar.SeedlingPlugin$Type",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": []
    },
    {
      "className": "com.android.systemui.plugins.statusbar.SeedlingPlugin",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin: void bindStub(com.android.systemui.plugins.statusbar.SeedlingPlugin$IStub)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin: android.os.Bundle call(android.os.Bundle)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin: void onCreateView(int,android.view.ViewGroup)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin: void onConfigurationChanged(android.content.res.Configuration)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin: void onRegisterAOD(java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin: void unRegisterAOD()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin: boolean shouldShowSystemPromptView()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin: void onProcessDied(int,int,java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin: android.util.Pair aodClick(android.view.View)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin: void onOverviewProxyServiceInit()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin: void notifyAppTransition(android.os.Bundle)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin: void dump(java.io.PrintWriter,java.lang.String[])>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin: void isPluginAvailable(kotlin.jvm.functions.Function1)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin: void updateNotifSeedingViews(boolean,java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin: void setCurrentUserId(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin: void updateNotifSeedingByPowerSaveChange(boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin: void refreshNotificationPosition(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin: void onBlurTypeChange(android.view.View,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin: void onPanelAlphaChange(android.view.View,float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin: void setNotifiClipTopAmount(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin: void resetMenuView(android.view.MotionEvent)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin: void setNotifiClipBottomAmount(int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin: boolean hasNotificationSeeding()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin: void setDismissUsingRowTranslationX(boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin: void dismissSettingsPanel(java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin: boolean canShowHeadsUpNotification()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin: void onShowHeadsUpNotification()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin: void onInterceptTouchEvent(android.view.MotionEvent)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin: boolean onTouchEvent(android.view.MotionEvent)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin: boolean isSupportFluid()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin: boolean isSeedingSpecialMode()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin: boolean isSeedingCardLaunch(java.lang.Runnable)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin: void onBootCompleted()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.statusbar.SeedlingPlugin$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin$Companion: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.statusbar.SeedlingPlugin$IStub",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin$IStub: void notifySeedlingStateChange(android.os.Bundle)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin$IStub: void notifySeedlingViewCreate(int,android.view.View)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin$IStub: android.os.Bundle call(android.os.Bundle)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin$IStub: void dispatchEvent(android.view.MotionEvent)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin$IStub: void setForceStatusBarVisible(boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin$IStub: void requestKeyguard(android.content.Context)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin$IStub: void addProcessObserver()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin$IStub: void notifyCapsuleChange(android.os.Bundle)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin$IStub: void removeProcessObserver()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin$IStub: void addTemporaryReorderingAllowedListener()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin$IStub: void notifyNotificationHeightChanged()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin$IStub: boolean loopStartActivity(android.content.Context,java.util.Iterator,java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin$IStub: void rowBlurBind(android.view.ViewGroup)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin$IStub: void unBlurBind(android.view.ViewGroup)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin$IStub: android.graphics.drawable.Drawable getStaticWallpaperDrawable()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin$IStub: android.util.Pair getStaticWallpaperScale()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin$IStub: void updateEmptyShadeView()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin$IStub: android.util.Pair getSettingInitialAnimator(float,float,float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin$IStub: android.util.Pair getSettingDismissAnimator(float,float,android.view.View)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin$IStub: void startSeedingViewIntent(android.content.Intent,int,com.android.systemui.animation.LaunchableView)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin$IStub: void applyBlur(android.view.ViewRootImpl,int,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin$IStub: android.util.Size getScreenSize()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin$IStub: void setWindowInsetChangedListener(kotlin.jvm.functions.Function0)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin$IStub: void executeRunnableDismissingKeyguard(java.lang.Runnable)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin$IStub: boolean isWaitForReSet()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin$IStub: java.lang.String onShowSeedlingCard()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin$IStub: void startActivityIntentWithAnimation(android.content.Intent,com.android.systemui.animation.ActivityLaunchAnimator$Controller,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin$IStub: android.view.View getClockView()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin$IStub: android.view.View getNotificationIconsView()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin$IStub: void setProcessUx(boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin$IStub: void notifyCapsuleAnimateState(boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin$IStub: boolean getKeyguardOccluded()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin$IStub: boolean hasCenterCutoutSpace()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin$IStub: android.graphics.Rect getStatusStartSideBound()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin$IStub: void updateFluidMap(java.lang.String,java.lang.String,java.util.List,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin$IStub: void notifyFluidCardShowState(java.lang.String,java.lang.String,boolean,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.statusbar.SeedlingPlugin$DefaultImpls",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin$DefaultImpls: void onCreateView$default(com.android.systemui.plugins.statusbar.SeedlingPlugin,int,android.view.ViewGroup,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin$DefaultImpls: boolean canShowHeadsUpNotification(com.android.systemui.plugins.statusbar.SeedlingPlugin)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin$DefaultImpls: void onShowHeadsUpNotification(com.android.systemui.plugins.statusbar.SeedlingPlugin)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin$DefaultImpls: void onInterceptTouchEvent(com.android.systemui.plugins.statusbar.SeedlingPlugin,android.view.MotionEvent)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.statusbar.SeedlingPlugin$DefaultImpls: boolean onTouchEvent(com.android.systemui.plugins.statusbar.SeedlingPlugin,android.view.MotionEvent)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.ClockController",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.ClockController: com.android.systemui.plugins.ClockFaceController getSmallClock()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockController: com.android.systemui.plugins.ClockFaceController getLargeClock()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockController: com.android.systemui.plugins.ClockConfig getConfig()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockController: com.android.systemui.plugins.ClockEvents getEvents()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockController: void initialize(android.content.res.Resources,float,float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockController: void dump(java.io.PrintWriter)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockController: int getClockOffsetY()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.ClockConfig",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "DATA_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.ClockConfig: void <init>(boolean,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockConfig: void <init>(boolean,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockConfig: boolean getUseAlternateSmartspaceAODTransition()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockConfig: boolean isReactiveToTone()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockConfig: boolean component1()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockConfig: boolean component2()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockConfig: com.android.systemui.plugins.ClockConfig copy(boolean,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockConfig: com.android.systemui.plugins.ClockConfig copy$default(com.android.systemui.plugins.ClockConfig,boolean,boolean,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockConfig: java.lang.String toString()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockConfig: int hashCode()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockConfig: boolean equals(java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockConfig: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.ClockController$DefaultImpls",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.ClockController$DefaultImpls: int getClockOffsetY(com.android.systemui.plugins.ClockController)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.qs.OplusTileController$ITileServicesWrapper",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.qs.OplusTileController$ITileServicesWrapper: void updateQsTile(android.content.ComponentName,android.service.quicksettings.Tile)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.OplusTileController$ITileServicesWrapper: android.service.quicksettings.Tile getQsTile(android.content.ComponentName)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.qs.OplusTileController",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.qs.OplusTileController: void setWrapper(com.android.systemui.plugins.qs.OplusTileController$ITileServicesWrapper)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.OplusTileController: void addTile(android.content.ComponentName,android.content.Context)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.OplusTileController: void removeTile(android.content.ComponentName)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.OplusTileController: void setListening(boolean,android.content.ComponentName,android.content.Context)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.OplusTileController: void updateCurrentStateIsNotDirty(android.content.ComponentName)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.OplusTileController: boolean bindAppWhenListening(android.content.ComponentName)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.OplusTileController: boolean shouldDisableTile(android.content.ComponentName)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.OplusTileController: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.qs.OplusTileController$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.qs.OplusTileController$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.OplusTileController$Companion: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.qs.QSContainerController$DefaultImpls",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.qs.QSContainerController$DefaultImpls: void setCustomizerShowing(com.android.systemui.plugins.qs.QSContainerController,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.qs.QsPanelPlugin$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.qs.QsPanelPlugin$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QsPanelPlugin$Companion: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.qs.QsPanelPlugin",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.qs.QsPanelPlugin: void onCreate(android.content.Context,android.content.Context)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QsPanelPlugin: void onDestroy()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QsPanelPlugin: android.view.View onCreateView(android.view.ViewGroup,int)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QsPanelPlugin: void setListening(boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QsPanelPlugin: void setQsExpansion(float)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QsPanelPlugin: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.qs.QsPanelPlugin$DefaultImpls",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.qs.QsPanelPlugin$DefaultImpls: void onCreate(com.android.systemui.plugins.qs.QsPanelPlugin,android.content.Context,android.content.Context)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QsPanelPlugin$DefaultImpls: void onDestroy(com.android.systemui.plugins.qs.QsPanelPlugin)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QsPanelPlugin$DefaultImpls: android.view.View onCreateView(com.android.systemui.plugins.qs.QsPanelPlugin,android.view.ViewGroup,int)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QsPanelPlugin$DefaultImpls: void setListening(com.android.systemui.plugins.qs.QsPanelPlugin,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.qs.QsPanelPlugin$DefaultImpls: void setQsExpansion(com.android.systemui.plugins.qs.QsPanelPlugin,float)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.ClockProvider$DefaultImpls",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.ClockProvider$DefaultImpls: com.android.systemui.plugins.ClockController createClock(com.android.systemui.plugins.ClockProvider,java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.ClockProvider",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.ClockProvider: java.util.List getClocks()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockProvider: com.android.systemui.plugins.ClockController createClock(java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockProvider: com.android.systemui.plugins.ClockController createClock(com.android.systemui.plugins.ClockSettings)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockProvider: android.graphics.drawable.Drawable getClockThumbnail(java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.ClockSettings",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "DATA_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.ClockSettings: void <init>(java.lang.String,java.lang.Integer)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockSettings: void <init>(java.lang.String,java.lang.Integer,int,kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockSettings: java.lang.String getClockId()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockSettings: java.lang.Integer getSeedColor()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockSettings: org.json.JSONObject getMetadata()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockSettings: void setMetadata(org.json.JSONObject)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockSettings: java.lang.String component1()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockSettings: java.lang.Integer component2()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockSettings: com.android.systemui.plugins.ClockSettings copy(java.lang.String,java.lang.Integer)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockSettings: com.android.systemui.plugins.ClockSettings copy$default(com.android.systemui.plugins.ClockSettings,java.lang.String,java.lang.Integer,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockSettings: java.lang.String toString()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockSettings: int hashCode()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockSettings: boolean equals(java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockSettings: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockSettings: java.lang.String access$getKEY_CLOCK_ID$cp()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockSettings: java.lang.String access$getKEY_SEED_COLOR$cp()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockSettings: java.lang.String access$getKEY_METADATA$cp()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockSettings: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.ClockSettings$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.ClockSettings$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockSettings$Companion: java.lang.String serialize(com.android.systemui.plugins.ClockSettings)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockSettings$Companion: com.android.systemui.plugins.ClockSettings deserialize(java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockSettings$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.ClockProviderPlugin$Companion",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.ClockProviderPlugin$Companion: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockProviderPlugin$Companion: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.ClockProviderPlugin",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.ClockProviderPlugin: void <clinit>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "NON_PUBLIC_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.ClockProviderPlugin$DefaultImpls",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.ClockProviderPlugin$DefaultImpls: com.android.systemui.plugins.ClockController createClock(com.android.systemui.plugins.ClockProviderPlugin,java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.log.TableLogBufferBase$DefaultImpls",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.log.TableLogBufferBase$DefaultImpls: void logChange(com.android.systemui.plugins.log.TableLogBufferBase,java.lang.String,java.lang.String,java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.log.TableLogBufferBase$DefaultImpls: void logChange(com.android.systemui.plugins.log.TableLogBufferBase,java.lang.String,java.lang.String,boolean)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.log.TableLogBufferBase$DefaultImpls: void logChange(com.android.systemui.plugins.log.TableLogBufferBase,java.lang.String,java.lang.String,java.lang.Integer)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.log.TableLogBufferBase",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.log.TableLogBufferBase: void logChange(java.lang.String,java.lang.String,java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.log.TableLogBufferBase: void logChange(java.lang.String,java.lang.String,java.lang.String,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.log.TableLogBufferBase: void logChange(java.lang.String,java.lang.String,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.log.TableLogBufferBase: void logChange(java.lang.String,java.lang.String,boolean,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.log.TableLogBufferBase: void logChange(java.lang.String,java.lang.String,java.lang.Integer)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.log.TableLogBufferBase: void logChange(java.lang.String,java.lang.String,java.lang.Integer,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.ClockMetadata",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "DATA_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.ClockMetadata: void <init>(java.lang.String,java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockMetadata: java.lang.String getClockId()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockMetadata: java.lang.String getName()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "GET_SET_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockMetadata: void <init>(java.lang.String)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockMetadata: java.lang.String component1()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockMetadata: java.lang.String component2()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "COMPONENT_N_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockMetadata: com.android.systemui.plugins.ClockMetadata copy(java.lang.String,java.lang.String)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockMetadata: com.android.systemui.plugins.ClockMetadata copy$default(com.android.systemui.plugins.ClockMetadata,java.lang.String,java.lang.String,int,java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ANONYMOUS_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockMetadata: java.lang.String toString()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockMetadata: int hashCode()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.ClockMetadata: boolean equals(java.lang.Object)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.annotations.Requires",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.annotations.Requires: java.lang.Class target()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.annotations.Requires: int version()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.annotations.Requirements",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.annotations.Requirements: com.android.systemui.plugins.annotations.Requires[] value()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.PluginManager$Helper",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ANONYMOUS_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.PluginManager$Helper: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.PluginManager$Helper: java.lang.String getAction(java.lang.Class)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.PluginManager",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.PluginManager: java.lang.String[] getPrivilegedPlugins()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.PluginManager: void addPluginListener(com.android.systemui.plugins.PluginListener,java.lang.Class)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.PluginManager: void addPluginListener(com.android.systemui.plugins.PluginListener,java.lang.Class,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.PluginManager: void addPluginListener(java.lang.String,com.android.systemui.plugins.PluginListener,java.lang.Class)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.PluginManager: void addPluginListener(java.lang.String,com.android.systemui.plugins.PluginListener,java.lang.Class,boolean)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.PluginManager: void removePluginListener(com.android.systemui.plugins.PluginListener)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.PluginManager: boolean dependsOn(com.android.systemui.plugins.Plugin,java.lang.Class)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.PluginListener",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.PluginListener: void onPluginConnected(com.android.systemui.plugins.Plugin,android.content.Context)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.PluginListener: boolean onPluginAttached(com.android.systemui.plugins.PluginLifecycleManager)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.PluginListener: void onPluginDisconnected(com.android.systemui.plugins.Plugin)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.PluginListener: void onPluginDetached(com.android.systemui.plugins.PluginLifecycleManager)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.PluginListener: void onPluginLoaded(com.android.systemui.plugins.Plugin,android.content.Context,com.android.systemui.plugins.PluginLifecycleManager)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.PluginListener: void onPluginUnloaded(com.android.systemui.plugins.Plugin,com.android.systemui.plugins.PluginLifecycleManager)>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.PluginLifecycleManager",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.PluginLifecycleManager: android.content.ComponentName getComponentName()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.PluginLifecycleManager: java.lang.String getPackage()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.PluginLifecycleManager: com.android.systemui.plugins.Plugin getPlugin()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.PluginLifecycleManager: boolean isLoaded()>",
          "methodType": "ENABLE",
          "methodReason": "ENABLE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.PluginLifecycleManager: void loadPlugin()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.PluginLifecycleManager: void unloadPlugin()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "ABSTRACT_METHOD"
        }
      ]
    },
    {
      "className": "com.android.systemui.plugins.PluginFragment",
      "classType": "NO_NEED_TO_TEST",
      "classReason": "ABSTRACT_CLASS",
      "methods": [
        {
          "methodSig": "<com.android.systemui.plugins.PluginFragment: void <init>()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "CONSTRUCTOR_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.PluginFragment: void onCreate(android.content.Context,android.content.Context)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.PluginFragment: android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.PluginFragment: void onSaveInstanceState(android.os.Bundle)>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        },
        {
          "methodSig": "<com.android.systemui.plugins.PluginFragment: android.content.Context getContext()>",
          "methodType": "NO_NEED_TO_TEST",
          "methodReason": "OVERRIDE_METHOD"
        }
      ]
    }
  ]
}